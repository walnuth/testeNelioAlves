'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("PTW_DB_BackupDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class PTW_DB_BackupDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableAppConstant As AppConstantDataTable
    
    Private tableAppupdateVersion As AppupdateVersionDataTable
    
    Private tablebotoesEcontroles_t As botoesEcontroles_tDataTable
    
    Private tablecompany As companyDataTable
    
    Private tableintegrant As integrantDataTable
    
    Private tablejob As jobDataTable
    
    Private tablePTclose As PTcloseDataTable
    
    Private tablePTopen As PTopenDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("AppConstant")) Is Nothing) Then
                MyBase.Tables.Add(New AppConstantDataTable(ds.Tables("AppConstant")))
            End If
            If (Not (ds.Tables("AppupdateVersion")) Is Nothing) Then
                MyBase.Tables.Add(New AppupdateVersionDataTable(ds.Tables("AppupdateVersion")))
            End If
            If (Not (ds.Tables("botoesEcontroles_t")) Is Nothing) Then
                MyBase.Tables.Add(New botoesEcontroles_tDataTable(ds.Tables("botoesEcontroles_t")))
            End If
            If (Not (ds.Tables("company")) Is Nothing) Then
                MyBase.Tables.Add(New companyDataTable(ds.Tables("company")))
            End If
            If (Not (ds.Tables("integrant")) Is Nothing) Then
                MyBase.Tables.Add(New integrantDataTable(ds.Tables("integrant")))
            End If
            If (Not (ds.Tables("job")) Is Nothing) Then
                MyBase.Tables.Add(New jobDataTable(ds.Tables("job")))
            End If
            If (Not (ds.Tables("PTclose")) Is Nothing) Then
                MyBase.Tables.Add(New PTcloseDataTable(ds.Tables("PTclose")))
            End If
            If (Not (ds.Tables("PTopen")) Is Nothing) Then
                MyBase.Tables.Add(New PTopenDataTable(ds.Tables("PTopen")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AppConstant() As AppConstantDataTable
        Get
            Return Me.tableAppConstant
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AppupdateVersion() As AppupdateVersionDataTable
        Get
            Return Me.tableAppupdateVersion
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property botoesEcontroles_t() As botoesEcontroles_tDataTable
        Get
            Return Me.tablebotoesEcontroles_t
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property company() As companyDataTable
        Get
            Return Me.tablecompany
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property integrant() As integrantDataTable
        Get
            Return Me.tableintegrant
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property job() As jobDataTable
        Get
            Return Me.tablejob
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PTclose() As PTcloseDataTable
        Get
            Return Me.tablePTclose
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PTopen() As PTopenDataTable
        Get
            Return Me.tablePTopen
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As PTW_DB_BackupDataSet = CType(MyBase.Clone,PTW_DB_BackupDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("AppConstant")) Is Nothing) Then
                MyBase.Tables.Add(New AppConstantDataTable(ds.Tables("AppConstant")))
            End If
            If (Not (ds.Tables("AppupdateVersion")) Is Nothing) Then
                MyBase.Tables.Add(New AppupdateVersionDataTable(ds.Tables("AppupdateVersion")))
            End If
            If (Not (ds.Tables("botoesEcontroles_t")) Is Nothing) Then
                MyBase.Tables.Add(New botoesEcontroles_tDataTable(ds.Tables("botoesEcontroles_t")))
            End If
            If (Not (ds.Tables("company")) Is Nothing) Then
                MyBase.Tables.Add(New companyDataTable(ds.Tables("company")))
            End If
            If (Not (ds.Tables("integrant")) Is Nothing) Then
                MyBase.Tables.Add(New integrantDataTable(ds.Tables("integrant")))
            End If
            If (Not (ds.Tables("job")) Is Nothing) Then
                MyBase.Tables.Add(New jobDataTable(ds.Tables("job")))
            End If
            If (Not (ds.Tables("PTclose")) Is Nothing) Then
                MyBase.Tables.Add(New PTcloseDataTable(ds.Tables("PTclose")))
            End If
            If (Not (ds.Tables("PTopen")) Is Nothing) Then
                MyBase.Tables.Add(New PTopenDataTable(ds.Tables("PTopen")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableAppConstant = CType(MyBase.Tables("AppConstant"),AppConstantDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAppConstant) Is Nothing) Then
                Me.tableAppConstant.InitVars
            End If
        End If
        Me.tableAppupdateVersion = CType(MyBase.Tables("AppupdateVersion"),AppupdateVersionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAppupdateVersion) Is Nothing) Then
                Me.tableAppupdateVersion.InitVars
            End If
        End If
        Me.tablebotoesEcontroles_t = CType(MyBase.Tables("botoesEcontroles_t"),botoesEcontroles_tDataTable)
        If (initTable = true) Then
            If (Not (Me.tablebotoesEcontroles_t) Is Nothing) Then
                Me.tablebotoesEcontroles_t.InitVars
            End If
        End If
        Me.tablecompany = CType(MyBase.Tables("company"),companyDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecompany) Is Nothing) Then
                Me.tablecompany.InitVars
            End If
        End If
        Me.tableintegrant = CType(MyBase.Tables("integrant"),integrantDataTable)
        If (initTable = true) Then
            If (Not (Me.tableintegrant) Is Nothing) Then
                Me.tableintegrant.InitVars
            End If
        End If
        Me.tablejob = CType(MyBase.Tables("job"),jobDataTable)
        If (initTable = true) Then
            If (Not (Me.tablejob) Is Nothing) Then
                Me.tablejob.InitVars
            End If
        End If
        Me.tablePTclose = CType(MyBase.Tables("PTclose"),PTcloseDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePTclose) Is Nothing) Then
                Me.tablePTclose.InitVars
            End If
        End If
        Me.tablePTopen = CType(MyBase.Tables("PTopen"),PTopenDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePTopen) Is Nothing) Then
                Me.tablePTopen.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "PTW_DB_BackupDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/PTW_DB_BackupDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableAppConstant = New AppConstantDataTable()
        MyBase.Tables.Add(Me.tableAppConstant)
        Me.tableAppupdateVersion = New AppupdateVersionDataTable()
        MyBase.Tables.Add(Me.tableAppupdateVersion)
        Me.tablebotoesEcontroles_t = New botoesEcontroles_tDataTable()
        MyBase.Tables.Add(Me.tablebotoesEcontroles_t)
        Me.tablecompany = New companyDataTable()
        MyBase.Tables.Add(Me.tablecompany)
        Me.tableintegrant = New integrantDataTable()
        MyBase.Tables.Add(Me.tableintegrant)
        Me.tablejob = New jobDataTable()
        MyBase.Tables.Add(Me.tablejob)
        Me.tablePTclose = New PTcloseDataTable()
        MyBase.Tables.Add(Me.tablePTclose)
        Me.tablePTopen = New PTopenDataTable()
        MyBase.Tables.Add(Me.tablePTopen)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeAppConstant() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeAppupdateVersion() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializebotoesEcontroles_t() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializecompany() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeintegrant() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializejob() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializePTclose() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializePTopen() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As PTW_DB_BackupDataSet = New PTW_DB_BackupDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub AppConstantRowChangeEventHandler(ByVal sender As Object, ByVal e As AppConstantRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub AppupdateVersionRowChangeEventHandler(ByVal sender As Object, ByVal e As AppupdateVersionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub botoesEcontroles_tRowChangeEventHandler(ByVal sender As Object, ByVal e As botoesEcontroles_tRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub companyRowChangeEventHandler(ByVal sender As Object, ByVal e As companyRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub integrantRowChangeEventHandler(ByVal sender As Object, ByVal e As integrantRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub jobRowChangeEventHandler(ByVal sender As Object, ByVal e As jobRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub PTcloseRowChangeEventHandler(ByVal sender As Object, ByVal e As PTcloseRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub PTopenRowChangeEventHandler(ByVal sender As Object, ByVal e As PTopenRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AppConstantDataTable
        Inherits Global.System.Data.TypedTableBase(Of AppConstantRow)
        
        Private columnid_app As Global.System.Data.DataColumn
        
        Private columnName_app As Global.System.Data.DataColumn
        
        Private columnNumAPPe_app As Global.System.Data.DataColumn
        
        Private columnonOff_app As Global.System.Data.DataColumn
        
        Private columnCath_app As Global.System.Data.DataColumn
        
        Private columnversion_app As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "AppConstant"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property id_appColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_app
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Name_appColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_app
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NumAPPe_appColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumAPPe_app
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property onOff_appColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnonOff_app
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Cath_appColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCath_app
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property version_appColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnversion_app
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AppConstantRow
            Get
                Return CType(Me.Rows(index),AppConstantRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event AppConstantRowChanging As AppConstantRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event AppConstantRowChanged As AppConstantRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event AppConstantRowDeleting As AppConstantRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event AppConstantRowDeleted As AppConstantRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddAppConstantRow(ByVal row As AppConstantRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddAppConstantRow(ByVal Name_app As String, ByVal NumAPPe_app As Double, ByVal onOff_app As Boolean, ByVal Cath_app As Integer, ByVal version_app As Integer) As AppConstantRow
            Dim rowAppConstantRow As AppConstantRow = CType(Me.NewRow,AppConstantRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Name_app, NumAPPe_app, onOff_app, Cath_app, version_app}
            rowAppConstantRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAppConstantRow)
            Return rowAppConstantRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByid_app(ByVal id_app As Integer) As AppConstantRow
            Return CType(Me.Rows.Find(New Object() {id_app}),AppConstantRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AppConstantDataTable = CType(MyBase.Clone,AppConstantDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AppConstantDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid_app = MyBase.Columns("id_app")
            Me.columnName_app = MyBase.Columns("Name_app")
            Me.columnNumAPPe_app = MyBase.Columns("NumAPPe_app")
            Me.columnonOff_app = MyBase.Columns("onOff_app")
            Me.columnCath_app = MyBase.Columns("Cath_app")
            Me.columnversion_app = MyBase.Columns("version_app")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid_app = New Global.System.Data.DataColumn("id_app", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_app)
            Me.columnName_app = New Global.System.Data.DataColumn("Name_app", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_app)
            Me.columnNumAPPe_app = New Global.System.Data.DataColumn("NumAPPe_app", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumAPPe_app)
            Me.columnonOff_app = New Global.System.Data.DataColumn("onOff_app", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnonOff_app)
            Me.columnCath_app = New Global.System.Data.DataColumn("Cath_app", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCath_app)
            Me.columnversion_app = New Global.System.Data.DataColumn("version_app", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnversion_app)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid_app}, true))
            Me.columnid_app.AutoIncrement = true
            Me.columnid_app.AutoIncrementSeed = -1
            Me.columnid_app.AutoIncrementStep = -1
            Me.columnid_app.AllowDBNull = false
            Me.columnid_app.Unique = true
            Me.columnName_app.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewAppConstantRow() As AppConstantRow
            Return CType(Me.NewRow,AppConstantRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AppConstantRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AppConstantRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AppConstantRowChangedEvent) Is Nothing) Then
                RaiseEvent AppConstantRowChanged(Me, New AppConstantRowChangeEvent(CType(e.Row,AppConstantRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AppConstantRowChangingEvent) Is Nothing) Then
                RaiseEvent AppConstantRowChanging(Me, New AppConstantRowChangeEvent(CType(e.Row,AppConstantRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AppConstantRowDeletedEvent) Is Nothing) Then
                RaiseEvent AppConstantRowDeleted(Me, New AppConstantRowChangeEvent(CType(e.Row,AppConstantRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AppConstantRowDeletingEvent) Is Nothing) Then
                RaiseEvent AppConstantRowDeleting(Me, New AppConstantRowChangeEvent(CType(e.Row,AppConstantRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveAppConstantRow(ByVal row As AppConstantRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PTW_DB_BackupDataSet = New PTW_DB_BackupDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AppConstantDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AppupdateVersionDataTable
        Inherits Global.System.Data.TypedTableBase(Of AppupdateVersionRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnAppUpdateversion_upadte As Global.System.Data.DataColumn
        
        Private columnobservation_update As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "AppupdateVersion"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AppUpdateversion_upadteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAppUpdateversion_upadte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property observation_updateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobservation_update
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AppupdateVersionRow
            Get
                Return CType(Me.Rows(index),AppupdateVersionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event AppupdateVersionRowChanging As AppupdateVersionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event AppupdateVersionRowChanged As AppupdateVersionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event AppupdateVersionRowDeleting As AppupdateVersionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event AppupdateVersionRowDeleted As AppupdateVersionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddAppupdateVersionRow(ByVal row As AppupdateVersionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddAppupdateVersionRow(ByVal AppUpdateversion_upadte As Double, ByVal observation_update As String) As AppupdateVersionRow
            Dim rowAppupdateVersionRow As AppupdateVersionRow = CType(Me.NewRow,AppupdateVersionRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, AppUpdateversion_upadte, observation_update}
            rowAppupdateVersionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAppupdateVersionRow)
            Return rowAppupdateVersionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As AppupdateVersionRow
            Return CType(Me.Rows.Find(New Object() {ID}),AppupdateVersionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AppupdateVersionDataTable = CType(MyBase.Clone,AppupdateVersionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AppupdateVersionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnAppUpdateversion_upadte = MyBase.Columns("AppUpdateversion_upadte")
            Me.columnobservation_update = MyBase.Columns("observation_update")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnAppUpdateversion_upadte = New Global.System.Data.DataColumn("AppUpdateversion_upadte", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAppUpdateversion_upadte)
            Me.columnobservation_update = New Global.System.Data.DataColumn("observation_update", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobservation_update)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnobservation_update.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewAppupdateVersionRow() As AppupdateVersionRow
            Return CType(Me.NewRow,AppupdateVersionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AppupdateVersionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AppupdateVersionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AppupdateVersionRowChangedEvent) Is Nothing) Then
                RaiseEvent AppupdateVersionRowChanged(Me, New AppupdateVersionRowChangeEvent(CType(e.Row,AppupdateVersionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AppupdateVersionRowChangingEvent) Is Nothing) Then
                RaiseEvent AppupdateVersionRowChanging(Me, New AppupdateVersionRowChangeEvent(CType(e.Row,AppupdateVersionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AppupdateVersionRowDeletedEvent) Is Nothing) Then
                RaiseEvent AppupdateVersionRowDeleted(Me, New AppupdateVersionRowChangeEvent(CType(e.Row,AppupdateVersionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AppupdateVersionRowDeletingEvent) Is Nothing) Then
                RaiseEvent AppupdateVersionRowDeleting(Me, New AppupdateVersionRowChangeEvent(CType(e.Row,AppupdateVersionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveAppupdateVersionRow(ByVal row As AppupdateVersionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PTW_DB_BackupDataSet = New PTW_DB_BackupDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AppupdateVersionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class botoesEcontroles_tDataTable
        Inherits Global.System.Data.TypedTableBase(Of botoesEcontroles_tRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnid_int_botoes As Global.System.Data.DataColumn
        
        Private columnBBQ0 As Global.System.Data.DataColumn
        
        Private columnBBQ1 As Global.System.Data.DataColumn
        
        Private columnBBQ2 As Global.System.Data.DataColumn
        
        Private columnBBQ3 As Global.System.Data.DataColumn
        
        Private columnBBQ4 As Global.System.Data.DataColumn
        
        Private columnBBQ5 As Global.System.Data.DataColumn
        
        Private columnBBQ6 As Global.System.Data.DataColumn
        
        Private columnBBQ7 As Global.System.Data.DataColumn
        
        Private columnBBQ8 As Global.System.Data.DataColumn
        
        Private columnBBL0 As Global.System.Data.DataColumn
        
        Private columnBBL1 As Global.System.Data.DataColumn
        
        Private columnBBL2 As Global.System.Data.DataColumn
        
        Private columnBBL3 As Global.System.Data.DataColumn
        
        Private columnBBL4 As Global.System.Data.DataColumn
        
        Private columnBBL5 As Global.System.Data.DataColumn
        
        Private columnBBL6 As Global.System.Data.DataColumn
        
        Private columnBBL7 As Global.System.Data.DataColumn
        
        Private columnBBL8 As Global.System.Data.DataColumn
        
        Private columnBB01 As Global.System.Data.DataColumn
        
        Private columnBB02 As Global.System.Data.DataColumn
        
        Private columnBB11 As Global.System.Data.DataColumn
        
        Private columnBB21 As Global.System.Data.DataColumn
        
        Private columnBB22 As Global.System.Data.DataColumn
        
        Private columnBB23 As Global.System.Data.DataColumn
        
        Private columnBB31 As Global.System.Data.DataColumn
        
        Private columnBB32 As Global.System.Data.DataColumn
        
        Private columnBB41 As Global.System.Data.DataColumn
        
        Private columnBB51 As Global.System.Data.DataColumn
        
        Private columnBB52 As Global.System.Data.DataColumn
        
        Private columnBB61 As Global.System.Data.DataColumn
        
        Private columnBB71 As Global.System.Data.DataColumn
        
        Private columnBB72 As Global.System.Data.DataColumn
        
        Private columnBB73 As Global.System.Data.DataColumn
        
        Private columnBB81 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "botoesEcontroles_t"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property id_int_botoesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_int_botoes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBQ0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBQ0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBQ1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBQ1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBQ2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBQ2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBQ3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBQ3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBQ4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBQ4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBQ5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBQ5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBQ6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBQ6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBQ7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBQ7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBQ8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBQ8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBL0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBL0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBL2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBL2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBL3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBL3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBL4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBL4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBL5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBL5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBL6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBL6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBL7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBL7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BBL8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBL8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB31Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB31
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB32Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB32
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB41Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB41
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB51Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB51
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB52Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB52
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB61Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB61
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB71Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB71
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB72Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB72
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB73Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB73
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BB81Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBB81
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As botoesEcontroles_tRow
            Get
                Return CType(Me.Rows(index),botoesEcontroles_tRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event botoesEcontroles_tRowChanging As botoesEcontroles_tRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event botoesEcontroles_tRowChanged As botoesEcontroles_tRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event botoesEcontroles_tRowDeleting As botoesEcontroles_tRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event botoesEcontroles_tRowDeleted As botoesEcontroles_tRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddbotoesEcontroles_tRow(ByVal row As botoesEcontroles_tRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddbotoesEcontroles_tRow( _
                    ByVal id_int_botoes As Integer,  _
                    ByVal BBQ0 As Boolean,  _
                    ByVal BBQ1 As Boolean,  _
                    ByVal BBQ2 As Boolean,  _
                    ByVal BBQ3 As Boolean,  _
                    ByVal BBQ4 As Boolean,  _
                    ByVal BBQ5 As Boolean,  _
                    ByVal BBQ6 As Boolean,  _
                    ByVal BBQ7 As Boolean,  _
                    ByVal BBQ8 As Boolean,  _
                    ByVal BBL0 As Boolean,  _
                    ByVal BBL1 As Boolean,  _
                    ByVal BBL2 As Boolean,  _
                    ByVal BBL3 As Boolean,  _
                    ByVal BBL4 As Boolean,  _
                    ByVal BBL5 As Boolean,  _
                    ByVal BBL6 As Boolean,  _
                    ByVal BBL7 As Boolean,  _
                    ByVal BBL8 As Boolean,  _
                    ByVal BB01 As Boolean,  _
                    ByVal BB02 As Boolean,  _
                    ByVal BB11 As Boolean,  _
                    ByVal BB21 As Boolean,  _
                    ByVal BB22 As Boolean,  _
                    ByVal BB23 As Boolean,  _
                    ByVal BB31 As Boolean,  _
                    ByVal BB32 As Boolean,  _
                    ByVal BB41 As Boolean,  _
                    ByVal BB51 As Boolean,  _
                    ByVal BB52 As Boolean,  _
                    ByVal BB61 As Boolean,  _
                    ByVal BB71 As Boolean,  _
                    ByVal BB72 As Boolean,  _
                    ByVal BB73 As Boolean,  _
                    ByVal BB81 As Boolean) As botoesEcontroles_tRow
            Dim rowbotoesEcontroles_tRow As botoesEcontroles_tRow = CType(Me.NewRow,botoesEcontroles_tRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, id_int_botoes, BBQ0, BBQ1, BBQ2, BBQ3, BBQ4, BBQ5, BBQ6, BBQ7, BBQ8, BBL0, BBL1, BBL2, BBL3, BBL4, BBL5, BBL6, BBL7, BBL8, BB01, BB02, BB11, BB21, BB22, BB23, BB31, BB32, BB41, BB51, BB52, BB61, BB71, BB72, BB73, BB81}
            rowbotoesEcontroles_tRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowbotoesEcontroles_tRow)
            Return rowbotoesEcontroles_tRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As botoesEcontroles_tRow
            Return CType(Me.Rows.Find(New Object() {ID}),botoesEcontroles_tRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As botoesEcontroles_tDataTable = CType(MyBase.Clone,botoesEcontroles_tDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New botoesEcontroles_tDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnid_int_botoes = MyBase.Columns("id_int_botoes")
            Me.columnBBQ0 = MyBase.Columns("BBQ0")
            Me.columnBBQ1 = MyBase.Columns("BBQ1")
            Me.columnBBQ2 = MyBase.Columns("BBQ2")
            Me.columnBBQ3 = MyBase.Columns("BBQ3")
            Me.columnBBQ4 = MyBase.Columns("BBQ4")
            Me.columnBBQ5 = MyBase.Columns("BBQ5")
            Me.columnBBQ6 = MyBase.Columns("BBQ6")
            Me.columnBBQ7 = MyBase.Columns("BBQ7")
            Me.columnBBQ8 = MyBase.Columns("BBQ8")
            Me.columnBBL0 = MyBase.Columns("BBL0")
            Me.columnBBL1 = MyBase.Columns("BBL1")
            Me.columnBBL2 = MyBase.Columns("BBL2")
            Me.columnBBL3 = MyBase.Columns("BBL3")
            Me.columnBBL4 = MyBase.Columns("BBL4")
            Me.columnBBL5 = MyBase.Columns("BBL5")
            Me.columnBBL6 = MyBase.Columns("BBL6")
            Me.columnBBL7 = MyBase.Columns("BBL7")
            Me.columnBBL8 = MyBase.Columns("BBL8")
            Me.columnBB01 = MyBase.Columns("BB01")
            Me.columnBB02 = MyBase.Columns("BB02")
            Me.columnBB11 = MyBase.Columns("BB11")
            Me.columnBB21 = MyBase.Columns("BB21")
            Me.columnBB22 = MyBase.Columns("BB22")
            Me.columnBB23 = MyBase.Columns("BB23")
            Me.columnBB31 = MyBase.Columns("BB31")
            Me.columnBB32 = MyBase.Columns("BB32")
            Me.columnBB41 = MyBase.Columns("BB41")
            Me.columnBB51 = MyBase.Columns("BB51")
            Me.columnBB52 = MyBase.Columns("BB52")
            Me.columnBB61 = MyBase.Columns("BB61")
            Me.columnBB71 = MyBase.Columns("BB71")
            Me.columnBB72 = MyBase.Columns("BB72")
            Me.columnBB73 = MyBase.Columns("BB73")
            Me.columnBB81 = MyBase.Columns("BB81")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnid_int_botoes = New Global.System.Data.DataColumn("id_int_botoes", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_int_botoes)
            Me.columnBBQ0 = New Global.System.Data.DataColumn("BBQ0", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBQ0)
            Me.columnBBQ1 = New Global.System.Data.DataColumn("BBQ1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBQ1)
            Me.columnBBQ2 = New Global.System.Data.DataColumn("BBQ2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBQ2)
            Me.columnBBQ3 = New Global.System.Data.DataColumn("BBQ3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBQ3)
            Me.columnBBQ4 = New Global.System.Data.DataColumn("BBQ4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBQ4)
            Me.columnBBQ5 = New Global.System.Data.DataColumn("BBQ5", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBQ5)
            Me.columnBBQ6 = New Global.System.Data.DataColumn("BBQ6", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBQ6)
            Me.columnBBQ7 = New Global.System.Data.DataColumn("BBQ7", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBQ7)
            Me.columnBBQ8 = New Global.System.Data.DataColumn("BBQ8", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBQ8)
            Me.columnBBL0 = New Global.System.Data.DataColumn("BBL0", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBL0)
            Me.columnBBL1 = New Global.System.Data.DataColumn("BBL1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBL1)
            Me.columnBBL2 = New Global.System.Data.DataColumn("BBL2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBL2)
            Me.columnBBL3 = New Global.System.Data.DataColumn("BBL3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBL3)
            Me.columnBBL4 = New Global.System.Data.DataColumn("BBL4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBL4)
            Me.columnBBL5 = New Global.System.Data.DataColumn("BBL5", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBL5)
            Me.columnBBL6 = New Global.System.Data.DataColumn("BBL6", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBL6)
            Me.columnBBL7 = New Global.System.Data.DataColumn("BBL7", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBL7)
            Me.columnBBL8 = New Global.System.Data.DataColumn("BBL8", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBL8)
            Me.columnBB01 = New Global.System.Data.DataColumn("BB01", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB01)
            Me.columnBB02 = New Global.System.Data.DataColumn("BB02", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB02)
            Me.columnBB11 = New Global.System.Data.DataColumn("BB11", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB11)
            Me.columnBB21 = New Global.System.Data.DataColumn("BB21", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB21)
            Me.columnBB22 = New Global.System.Data.DataColumn("BB22", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB22)
            Me.columnBB23 = New Global.System.Data.DataColumn("BB23", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB23)
            Me.columnBB31 = New Global.System.Data.DataColumn("BB31", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB31)
            Me.columnBB32 = New Global.System.Data.DataColumn("BB32", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB32)
            Me.columnBB41 = New Global.System.Data.DataColumn("BB41", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB41)
            Me.columnBB51 = New Global.System.Data.DataColumn("BB51", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB51)
            Me.columnBB52 = New Global.System.Data.DataColumn("BB52", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB52)
            Me.columnBB61 = New Global.System.Data.DataColumn("BB61", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB61)
            Me.columnBB71 = New Global.System.Data.DataColumn("BB71", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB71)
            Me.columnBB72 = New Global.System.Data.DataColumn("BB72", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB72)
            Me.columnBB73 = New Global.System.Data.DataColumn("BB73", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB73)
            Me.columnBB81 = New Global.System.Data.DataColumn("BB81", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBB81)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewbotoesEcontroles_tRow() As botoesEcontroles_tRow
            Return CType(Me.NewRow,botoesEcontroles_tRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New botoesEcontroles_tRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(botoesEcontroles_tRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.botoesEcontroles_tRowChangedEvent) Is Nothing) Then
                RaiseEvent botoesEcontroles_tRowChanged(Me, New botoesEcontroles_tRowChangeEvent(CType(e.Row,botoesEcontroles_tRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.botoesEcontroles_tRowChangingEvent) Is Nothing) Then
                RaiseEvent botoesEcontroles_tRowChanging(Me, New botoesEcontroles_tRowChangeEvent(CType(e.Row,botoesEcontroles_tRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.botoesEcontroles_tRowDeletedEvent) Is Nothing) Then
                RaiseEvent botoesEcontroles_tRowDeleted(Me, New botoesEcontroles_tRowChangeEvent(CType(e.Row,botoesEcontroles_tRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.botoesEcontroles_tRowDeletingEvent) Is Nothing) Then
                RaiseEvent botoesEcontroles_tRowDeleting(Me, New botoesEcontroles_tRowChangeEvent(CType(e.Row,botoesEcontroles_tRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovebotoesEcontroles_tRow(ByVal row As botoesEcontroles_tRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PTW_DB_BackupDataSet = New PTW_DB_BackupDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "botoesEcontroles_tDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class companyDataTable
        Inherits Global.System.Data.TypedTableBase(Of companyRow)
        
        Private columnid_company As Global.System.Data.DataColumn
        
        Private columnname_company As Global.System.Data.DataColumn
        
        Private columnplace_company As Global.System.Data.DataColumn
        
        Private columnactive_company As Global.System.Data.DataColumn
        
        Private columnobs_company As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "company"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property id_companyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property name_companyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname_company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property place_companyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplace_company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property active_companyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactive_company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property obs_companyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobs_company
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As companyRow
            Get
                Return CType(Me.Rows(index),companyRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event companyRowChanging As companyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event companyRowChanged As companyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event companyRowDeleting As companyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event companyRowDeleted As companyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddcompanyRow(ByVal row As companyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddcompanyRow(ByVal name_company As String, ByVal place_company As String, ByVal active_company As Boolean, ByVal obs_company As String) As companyRow
            Dim rowcompanyRow As companyRow = CType(Me.NewRow,companyRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, name_company, place_company, active_company, obs_company}
            rowcompanyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcompanyRow)
            Return rowcompanyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByid_company(ByVal id_company As Integer) As companyRow
            Return CType(Me.Rows.Find(New Object() {id_company}),companyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As companyDataTable = CType(MyBase.Clone,companyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New companyDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid_company = MyBase.Columns("id_company")
            Me.columnname_company = MyBase.Columns("name_company")
            Me.columnplace_company = MyBase.Columns("place_company")
            Me.columnactive_company = MyBase.Columns("active_company")
            Me.columnobs_company = MyBase.Columns("obs_company")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid_company = New Global.System.Data.DataColumn("id_company", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_company)
            Me.columnname_company = New Global.System.Data.DataColumn("name_company", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname_company)
            Me.columnplace_company = New Global.System.Data.DataColumn("place_company", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplace_company)
            Me.columnactive_company = New Global.System.Data.DataColumn("active_company", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactive_company)
            Me.columnobs_company = New Global.System.Data.DataColumn("obs_company", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobs_company)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid_company}, true))
            Me.columnid_company.AutoIncrement = true
            Me.columnid_company.AutoIncrementSeed = -1
            Me.columnid_company.AutoIncrementStep = -1
            Me.columnid_company.AllowDBNull = false
            Me.columnid_company.Unique = true
            Me.columnname_company.MaxLength = 255
            Me.columnplace_company.MaxLength = 255
            Me.columnobs_company.MaxLength = 536870910
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewcompanyRow() As companyRow
            Return CType(Me.NewRow,companyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New companyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(companyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.companyRowChangedEvent) Is Nothing) Then
                RaiseEvent companyRowChanged(Me, New companyRowChangeEvent(CType(e.Row,companyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.companyRowChangingEvent) Is Nothing) Then
                RaiseEvent companyRowChanging(Me, New companyRowChangeEvent(CType(e.Row,companyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.companyRowDeletedEvent) Is Nothing) Then
                RaiseEvent companyRowDeleted(Me, New companyRowChangeEvent(CType(e.Row,companyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.companyRowDeletingEvent) Is Nothing) Then
                RaiseEvent companyRowDeleting(Me, New companyRowChangeEvent(CType(e.Row,companyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovecompanyRow(ByVal row As companyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PTW_DB_BackupDataSet = New PTW_DB_BackupDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "companyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class integrantDataTable
        Inherits Global.System.Data.TypedTableBase(Of integrantRow)
        
        Private columnid_int As Global.System.Data.DataColumn
        
        Private columnid_job_int As Global.System.Data.DataColumn
        
        Private columnid_job_CONTRATUAL_int As Global.System.Data.DataColumn
        
        Private columnid_company_int As Global.System.Data.DataColumn
        
        Private columnname_int As Global.System.Data.DataColumn
        
        Private columnunidade_int As Global.System.Data.DataColumn
        
        Private columnaddress_int As Global.System.Data.DataColumn
        
        Private columntel_int As Global.System.Data.DataColumn
        
        Private columnemail_int As Global.System.Data.DataColumn
        
        Private columnactive_int As Global.System.Data.DataColumn
        
        Private columnobs_int As Global.System.Data.DataColumn
        
        Private columnpassword_int As Global.System.Data.DataColumn
        
        Private columnmatricula_int As Global.System.Data.DataColumn
        
        Private columnsupervisor_int As Global.System.Data.DataColumn
        
        Private columnterceirizado_int As Global.System.Data.DataColumn
        
        Private columnPastaLocal_int As Global.System.Data.DataColumn
        
        Private columnfotoStr_int As Global.System.Data.DataColumn
        
        Private columnpasswordStr_int As Global.System.Data.DataColumn
        
        Private columnnivelUsuario_int As Global.System.Data.DataColumn
        
        Private columnid_perfil_int As Global.System.Data.DataColumn
        
        Private columnsexo As Global.System.Data.DataColumn
        
        Private columnnacionalidade_int As Global.System.Data.DataColumn
        
        Private columnadmin_int As Global.System.Data.DataColumn
        
        Private columnadmissao_int As Global.System.Data.DataColumn
        
        Private columnPTWLIDER_int As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "integrant"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property id_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property id_job_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_job_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property id_job_CONTRATUAL_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_job_CONTRATUAL_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property id_company_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_company_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property name_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property unidade_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunidade_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property address_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tel_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntel_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property email_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property active_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactive_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property obs_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobs_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property password_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpassword_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property matricula_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmatricula_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property supervisor_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsupervisor_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property terceirizado_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnterceirizado_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PastaLocal_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPastaLocal_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fotoStr_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfotoStr_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property passwordStr_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpasswordStr_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nivelUsuario_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnivelUsuario_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property id_perfil_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_perfil_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property sexoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsexo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nacionalidade_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnacionalidade_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property admin_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadmin_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property admissao_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadmissao_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PTWLIDER_intColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTWLIDER_int
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As integrantRow
            Get
                Return CType(Me.Rows(index),integrantRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event integrantRowChanging As integrantRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event integrantRowChanged As integrantRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event integrantRowDeleting As integrantRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event integrantRowDeleted As integrantRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddintegrantRow(ByVal row As integrantRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddintegrantRow( _
                    ByVal id_job_int As Integer,  _
                    ByVal id_job_CONTRATUAL_int As Integer,  _
                    ByVal id_company_int As Integer,  _
                    ByVal name_int As String,  _
                    ByVal unidade_int As String,  _
                    ByVal address_int As String,  _
                    ByVal tel_int As String,  _
                    ByVal email_int As String,  _
                    ByVal active_int As Boolean,  _
                    ByVal obs_int As String,  _
                    ByVal password_int As String,  _
                    ByVal matricula_int As String,  _
                    ByVal supervisor_int As Boolean,  _
                    ByVal terceirizado_int As Boolean,  _
                    ByVal PastaLocal_int As String,  _
                    ByVal fotoStr_int As String,  _
                    ByVal passwordStr_int As String,  _
                    ByVal nivelUsuario_int As String,  _
                    ByVal id_perfil_int As String,  _
                    ByVal sexo As Boolean,  _
                    ByVal nacionalidade_int As String,  _
                    ByVal admin_int As Boolean,  _
                    ByVal admissao_int As Date,  _
                    ByVal PTWLIDER_int As Boolean) As integrantRow
            Dim rowintegrantRow As integrantRow = CType(Me.NewRow,integrantRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, id_job_int, id_job_CONTRATUAL_int, id_company_int, name_int, unidade_int, address_int, tel_int, email_int, active_int, obs_int, password_int, matricula_int, supervisor_int, terceirizado_int, PastaLocal_int, fotoStr_int, passwordStr_int, nivelUsuario_int, id_perfil_int, sexo, nacionalidade_int, admin_int, admissao_int, PTWLIDER_int}
            rowintegrantRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowintegrantRow)
            Return rowintegrantRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByid_int(ByVal id_int As Integer) As integrantRow
            Return CType(Me.Rows.Find(New Object() {id_int}),integrantRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As integrantDataTable = CType(MyBase.Clone,integrantDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New integrantDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid_int = MyBase.Columns("id_int")
            Me.columnid_job_int = MyBase.Columns("id_job_int")
            Me.columnid_job_CONTRATUAL_int = MyBase.Columns("id_job_CONTRATUAL_int")
            Me.columnid_company_int = MyBase.Columns("id_company_int")
            Me.columnname_int = MyBase.Columns("name_int")
            Me.columnunidade_int = MyBase.Columns("unidade_int")
            Me.columnaddress_int = MyBase.Columns("address_int")
            Me.columntel_int = MyBase.Columns("tel_int")
            Me.columnemail_int = MyBase.Columns("email_int")
            Me.columnactive_int = MyBase.Columns("active_int")
            Me.columnobs_int = MyBase.Columns("obs_int")
            Me.columnpassword_int = MyBase.Columns("password_int")
            Me.columnmatricula_int = MyBase.Columns("matricula_int")
            Me.columnsupervisor_int = MyBase.Columns("supervisor_int")
            Me.columnterceirizado_int = MyBase.Columns("terceirizado_int")
            Me.columnPastaLocal_int = MyBase.Columns("PastaLocal_int")
            Me.columnfotoStr_int = MyBase.Columns("fotoStr_int")
            Me.columnpasswordStr_int = MyBase.Columns("passwordStr_int")
            Me.columnnivelUsuario_int = MyBase.Columns("nivelUsuario_int")
            Me.columnid_perfil_int = MyBase.Columns("id_perfil_int")
            Me.columnsexo = MyBase.Columns("sexo")
            Me.columnnacionalidade_int = MyBase.Columns("nacionalidade_int")
            Me.columnadmin_int = MyBase.Columns("admin_int")
            Me.columnadmissao_int = MyBase.Columns("admissao_int")
            Me.columnPTWLIDER_int = MyBase.Columns("PTWLIDER_int")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid_int = New Global.System.Data.DataColumn("id_int", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_int)
            Me.columnid_job_int = New Global.System.Data.DataColumn("id_job_int", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_job_int)
            Me.columnid_job_CONTRATUAL_int = New Global.System.Data.DataColumn("id_job_CONTRATUAL_int", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_job_CONTRATUAL_int)
            Me.columnid_company_int = New Global.System.Data.DataColumn("id_company_int", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_company_int)
            Me.columnname_int = New Global.System.Data.DataColumn("name_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname_int)
            Me.columnunidade_int = New Global.System.Data.DataColumn("unidade_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunidade_int)
            Me.columnaddress_int = New Global.System.Data.DataColumn("address_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress_int)
            Me.columntel_int = New Global.System.Data.DataColumn("tel_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntel_int)
            Me.columnemail_int = New Global.System.Data.DataColumn("email_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail_int)
            Me.columnactive_int = New Global.System.Data.DataColumn("active_int", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactive_int)
            Me.columnobs_int = New Global.System.Data.DataColumn("obs_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobs_int)
            Me.columnpassword_int = New Global.System.Data.DataColumn("password_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpassword_int)
            Me.columnmatricula_int = New Global.System.Data.DataColumn("matricula_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmatricula_int)
            Me.columnsupervisor_int = New Global.System.Data.DataColumn("supervisor_int", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsupervisor_int)
            Me.columnterceirizado_int = New Global.System.Data.DataColumn("terceirizado_int", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnterceirizado_int)
            Me.columnPastaLocal_int = New Global.System.Data.DataColumn("PastaLocal_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPastaLocal_int)
            Me.columnfotoStr_int = New Global.System.Data.DataColumn("fotoStr_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfotoStr_int)
            Me.columnpasswordStr_int = New Global.System.Data.DataColumn("passwordStr_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpasswordStr_int)
            Me.columnnivelUsuario_int = New Global.System.Data.DataColumn("nivelUsuario_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnivelUsuario_int)
            Me.columnid_perfil_int = New Global.System.Data.DataColumn("id_perfil_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_perfil_int)
            Me.columnsexo = New Global.System.Data.DataColumn("sexo", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsexo)
            Me.columnnacionalidade_int = New Global.System.Data.DataColumn("nacionalidade_int", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnacionalidade_int)
            Me.columnadmin_int = New Global.System.Data.DataColumn("admin_int", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadmin_int)
            Me.columnadmissao_int = New Global.System.Data.DataColumn("admissao_int", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadmissao_int)
            Me.columnPTWLIDER_int = New Global.System.Data.DataColumn("PTWLIDER_int", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTWLIDER_int)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid_int}, true))
            Me.columnid_int.AutoIncrement = true
            Me.columnid_int.AutoIncrementSeed = -1
            Me.columnid_int.AutoIncrementStep = -1
            Me.columnid_int.AllowDBNull = false
            Me.columnid_int.Unique = true
            Me.columnname_int.MaxLength = 255
            Me.columnunidade_int.MaxLength = 255
            Me.columnaddress_int.MaxLength = 536870910
            Me.columntel_int.MaxLength = 33
            Me.columnemail_int.MaxLength = 50
            Me.columnobs_int.MaxLength = 536870910
            Me.columnpassword_int.MaxLength = 255
            Me.columnmatricula_int.MaxLength = 50
            Me.columnPastaLocal_int.MaxLength = 536870910
            Me.columnfotoStr_int.MaxLength = 536870910
            Me.columnpasswordStr_int.MaxLength = 536870910
            Me.columnnivelUsuario_int.MaxLength = 255
            Me.columnid_perfil_int.MaxLength = 536870910
            Me.columnnacionalidade_int.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewintegrantRow() As integrantRow
            Return CType(Me.NewRow,integrantRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New integrantRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(integrantRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.integrantRowChangedEvent) Is Nothing) Then
                RaiseEvent integrantRowChanged(Me, New integrantRowChangeEvent(CType(e.Row,integrantRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.integrantRowChangingEvent) Is Nothing) Then
                RaiseEvent integrantRowChanging(Me, New integrantRowChangeEvent(CType(e.Row,integrantRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.integrantRowDeletedEvent) Is Nothing) Then
                RaiseEvent integrantRowDeleted(Me, New integrantRowChangeEvent(CType(e.Row,integrantRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.integrantRowDeletingEvent) Is Nothing) Then
                RaiseEvent integrantRowDeleting(Me, New integrantRowChangeEvent(CType(e.Row,integrantRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveintegrantRow(ByVal row As integrantRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PTW_DB_BackupDataSet = New PTW_DB_BackupDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "integrantDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class jobDataTable
        Inherits Global.System.Data.TypedTableBase(Of jobRow)
        
        Private columnid_job As Global.System.Data.DataColumn
        
        Private columnjob As Global.System.Data.DataColumn
        
        Private columndept_job As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "job"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property id_jobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_job
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property jobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property dept_jobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndept_job
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As jobRow
            Get
                Return CType(Me.Rows(index),jobRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event jobRowChanging As jobRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event jobRowChanged As jobRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event jobRowDeleting As jobRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event jobRowDeleted As jobRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddjobRow(ByVal row As jobRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddjobRow(ByVal job As String, ByVal dept_job As String) As jobRow
            Dim rowjobRow As jobRow = CType(Me.NewRow,jobRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, job, dept_job}
            rowjobRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowjobRow)
            Return rowjobRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByid_job(ByVal id_job As Integer) As jobRow
            Return CType(Me.Rows.Find(New Object() {id_job}),jobRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As jobDataTable = CType(MyBase.Clone,jobDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New jobDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid_job = MyBase.Columns("id_job")
            Me.columnjob = MyBase.Columns("job")
            Me.columndept_job = MyBase.Columns("dept_job")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid_job = New Global.System.Data.DataColumn("id_job", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_job)
            Me.columnjob = New Global.System.Data.DataColumn("job", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjob)
            Me.columndept_job = New Global.System.Data.DataColumn("dept_job", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndept_job)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid_job}, true))
            Me.columnid_job.AutoIncrement = true
            Me.columnid_job.AutoIncrementSeed = -1
            Me.columnid_job.AutoIncrementStep = -1
            Me.columnid_job.AllowDBNull = false
            Me.columnid_job.Unique = true
            Me.columnjob.MaxLength = 255
            Me.columndept_job.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewjobRow() As jobRow
            Return CType(Me.NewRow,jobRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New jobRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(jobRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.jobRowChangedEvent) Is Nothing) Then
                RaiseEvent jobRowChanged(Me, New jobRowChangeEvent(CType(e.Row,jobRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.jobRowChangingEvent) Is Nothing) Then
                RaiseEvent jobRowChanging(Me, New jobRowChangeEvent(CType(e.Row,jobRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.jobRowDeletedEvent) Is Nothing) Then
                RaiseEvent jobRowDeleted(Me, New jobRowChangeEvent(CType(e.Row,jobRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.jobRowDeletingEvent) Is Nothing) Then
                RaiseEvent jobRowDeleting(Me, New jobRowChangeEvent(CType(e.Row,jobRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovejobRow(ByVal row As jobRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PTW_DB_BackupDataSet = New PTW_DB_BackupDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "jobDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PTcloseDataTable
        Inherits Global.System.Data.TypedTableBase(Of PTcloseRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnMOTIVO_close As Global.System.Data.DataColumn
        
        Private columnPTWnum_close As Global.System.Data.DataColumn
        
        Private columnISSUER_close As Global.System.Data.DataColumn
        
        Private columnLIDER_close As Global.System.Data.DataColumn
        
        Private columnLIBERADOR_close As Global.System.Data.DataColumn
        
        Private columnSAFETY_close As Global.System.Data.DataColumn
        
        Private columnADMIN_close As Global.System.Data.DataColumn
        
        Private columnOIM_close As Global.System.Data.DataColumn
        
        Private columnALL_close As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PTclose"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MOTIVO_closeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOTIVO_close
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PTWnum_closeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTWnum_close
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ISSUER_closeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSUER_close
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LIDER_closeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIDER_close
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LIBERADOR_closeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIBERADOR_close
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SAFETY_closeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAFETY_close
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ADMIN_closeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADMIN_close
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OIM_closeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOIM_close
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ALL_closeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALL_close
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PTcloseRow
            Get
                Return CType(Me.Rows(index),PTcloseRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event PTcloseRowChanging As PTcloseRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event PTcloseRowChanged As PTcloseRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event PTcloseRowDeleting As PTcloseRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event PTcloseRowDeleted As PTcloseRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddPTcloseRow(ByVal row As PTcloseRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddPTcloseRow(ByVal MOTIVO_close As String, ByVal PTWnum_close As Integer, ByVal ISSUER_close As Boolean, ByVal LIDER_close As Boolean, ByVal LIBERADOR_close As Boolean, ByVal SAFETY_close As Boolean, ByVal ADMIN_close As Boolean, ByVal OIM_close As Boolean, ByVal ALL_close As Boolean) As PTcloseRow
            Dim rowPTcloseRow As PTcloseRow = CType(Me.NewRow,PTcloseRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, MOTIVO_close, PTWnum_close, ISSUER_close, LIDER_close, LIBERADOR_close, SAFETY_close, ADMIN_close, OIM_close, ALL_close}
            rowPTcloseRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPTcloseRow)
            Return rowPTcloseRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As PTcloseRow
            Return CType(Me.Rows.Find(New Object() {ID}),PTcloseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PTcloseDataTable = CType(MyBase.Clone,PTcloseDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PTcloseDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnMOTIVO_close = MyBase.Columns("MOTIVO_close")
            Me.columnPTWnum_close = MyBase.Columns("PTWnum_close")
            Me.columnISSUER_close = MyBase.Columns("ISSUER_close")
            Me.columnLIDER_close = MyBase.Columns("LIDER_close")
            Me.columnLIBERADOR_close = MyBase.Columns("LIBERADOR_close")
            Me.columnSAFETY_close = MyBase.Columns("SAFETY_close")
            Me.columnADMIN_close = MyBase.Columns("ADMIN_close")
            Me.columnOIM_close = MyBase.Columns("OIM_close")
            Me.columnALL_close = MyBase.Columns("ALL_close")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnMOTIVO_close = New Global.System.Data.DataColumn("MOTIVO_close", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOTIVO_close)
            Me.columnPTWnum_close = New Global.System.Data.DataColumn("PTWnum_close", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTWnum_close)
            Me.columnISSUER_close = New Global.System.Data.DataColumn("ISSUER_close", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSUER_close)
            Me.columnLIDER_close = New Global.System.Data.DataColumn("LIDER_close", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIDER_close)
            Me.columnLIBERADOR_close = New Global.System.Data.DataColumn("LIBERADOR_close", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIBERADOR_close)
            Me.columnSAFETY_close = New Global.System.Data.DataColumn("SAFETY_close", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAFETY_close)
            Me.columnADMIN_close = New Global.System.Data.DataColumn("ADMIN_close", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADMIN_close)
            Me.columnOIM_close = New Global.System.Data.DataColumn("OIM_close", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOIM_close)
            Me.columnALL_close = New Global.System.Data.DataColumn("ALL_close", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALL_close)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnMOTIVO_close.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewPTcloseRow() As PTcloseRow
            Return CType(Me.NewRow,PTcloseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PTcloseRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PTcloseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PTcloseRowChangedEvent) Is Nothing) Then
                RaiseEvent PTcloseRowChanged(Me, New PTcloseRowChangeEvent(CType(e.Row,PTcloseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PTcloseRowChangingEvent) Is Nothing) Then
                RaiseEvent PTcloseRowChanging(Me, New PTcloseRowChangeEvent(CType(e.Row,PTcloseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PTcloseRowDeletedEvent) Is Nothing) Then
                RaiseEvent PTcloseRowDeleted(Me, New PTcloseRowChangeEvent(CType(e.Row,PTcloseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PTcloseRowDeletingEvent) Is Nothing) Then
                RaiseEvent PTcloseRowDeleting(Me, New PTcloseRowChangeEvent(CType(e.Row,PTcloseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovePTcloseRow(ByVal row As PTcloseRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PTW_DB_BackupDataSet = New PTW_DB_BackupDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PTcloseDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PTopenDataTable
        Inherits Global.System.Data.TypedTableBase(Of PTopenRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnSTATUS_ptw As Global.System.Data.DataColumn
        
        Private columnNUM_ptw As Global.System.Data.DataColumn
        
        Private columnDATA_ptw As Global.System.Data.DataColumn
        
        Private columnTIME_ptw As Global.System.Data.DataColumn
        
        Private columnDESC_ptw As Global.System.Data.DataColumn
        
        Private columnHOT_ptw As Global.System.Data.DataColumn
        
        Private columnLOCAL_ptw As Global.System.Data.DataColumn
        
        Private columnLOTOck_ptw As Global.System.Data.DataColumn
        
        Private columnLOTOnum_ptw As Global.System.Data.DataColumn
        
        Private columnATVsim_ptw As Global.System.Data.DataColumn
        
        Private columnRISCOSad_ptw As Global.System.Data.DataColumn
        
        Private columnMOCck_ptw As Global.System.Data.DataColumn
        
        Private columnMOCnm_ptw As Global.System.Data.DataColumn
        
        Private columnEPI_ptw As Global.System.Data.DataColumn
        
        Private columnRECad_ptw As Global.System.Data.DataColumn
        
        Private columnAPRIck_ptw As Global.System.Data.DataColumn
        
        Private columnAPRInum_ptw As Global.System.Data.DataColumn
        
        Private columnCARGAcritCK_ptw As Global.System.Data.DataColumn
        
        Private columnLISTAobCK_ptw As Global.System.Data.DataColumn
        
        Private columnFLUIDOck_ptw As Global.System.Data.DataColumn
        
        Private columnCESTOck_ptw As Global.System.Data.DataColumn
        
        Private columnGUINCHOck_ptw As Global.System.Data.DataColumn
        
        Private columnOUTROS_ptw As Global.System.Data.DataColumn
        
        Private columnTESTEck_ptw As Global.System.Data.DataColumn
        
        Private columnDATEtest_ptw As Global.System.Data.DataColumn
        
        Private columnTIMEtest_ptw As Global.System.Data.DataColumn
        
        Private columnO2_ptw As Global.System.Data.DataColumn
        
        Private columnHC_ptw As Global.System.Data.DataColumn
        
        Private columnH2Sppm_ptw As Global.System.Data.DataColumn
        
        Private columnCO_ptw As Global.System.Data.DataColumn
        
        Private columnCO2_ptw As Global.System.Data.DataColumn
        
        Private columnCHECKEDby_ptw As Global.System.Data.DataColumn
        
        Private columnSNdet_ptw As Global.System.Data.DataColumn
        
        Private columnEXAUSTAOck_ptw As Global.System.Data.DataColumn
        
        Private columnDATEexaust_ptw As Global.System.Data.DataColumn
        
        Private columnTIMEexaust_ptw As Global.System.Data.DataColumn
        
        Private columnO2_2_ptw As Global.System.Data.DataColumn
        
        Private columnHC_2_ptw As Global.System.Data.DataColumn
        
        Private columnH2S_2ppm_ptw As Global.System.Data.DataColumn
        
        Private columnCO_2_ptw As Global.System.Data.DataColumn
        
        Private columnCO2_2_ptw As Global.System.Data.DataColumn
        
        Private columnCHECKEDby_2_ptw As Global.System.Data.DataColumn
        
        Private columnSNdet_2_ptw As Global.System.Data.DataColumn
        
        Private columnCRITck_ptw As Global.System.Data.DataColumn
        
        Private columnOUTofOPck_ptw As Global.System.Data.DataColumn
        
        Private columnOUTofOPnom_ptw As Global.System.Data.DataColumn
        
        Private columnSENSORinCK_ptw As Global.System.Data.DataColumn
        
        Private columnSENSORregCK_ptw As Global.System.Data.DataColumn
        
        Private columnPLANOresgCK_ptw As Global.System.Data.DataColumn
        
        Private columnEQUIPEcomCK_ptw As Global.System.Data.DataColumn
        
        Private columnINTERCOMck_ptw As Global.System.Data.DataColumn
        
        Private columnPESSOALck As Global.System.Data.DataColumn
        
        Private columnSUSPmot_ptw As Global.System.Data.DataColumn
        
        Private columnSUSPpor_ptw As Global.System.Data.DataColumn
        
        Private columnSUSPdate_ptw As Global.System.Data.DataColumn
        
        Private columnSUSPtime As Global.System.Data.DataColumn
        
        Private columnREATIVpor_ptw As Global.System.Data.DataColumn
        
        Private columnREATIVseg_ptw As Global.System.Data.DataColumn
        
        Private columnREATIVdate_ptw As Global.System.Data.DataColumn
        
        Private columnREATIVtime_ptw As Global.System.Data.DataColumn
        
        Private columnISSUER_ptw As Global.System.Data.DataColumn
        
        Private columnSUPERVISOR_ptw As Global.System.Data.DataColumn
        
        Private columnSUPERVISOR_R_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE01_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE02_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE03_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE04_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE05_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE06_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE07_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE01_R_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE02_R_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE03_R_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE04_R_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE05_R_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE06_R_ptw As Global.System.Data.DataColumn
        
        Private columnEXECUTANTE07_R_ptw As Global.System.Data.DataColumn
        
        Private columnLIDER_ptw As Global.System.Data.DataColumn
        
        Private columnLIDER_R_ptw As Global.System.Data.DataColumn
        
        Private columnLIDERdpt_ptw As Global.System.Data.DataColumn
        
        Private columnLIBERADOR_ptw As Global.System.Data.DataColumn
        
        Private columnLIBERADOR_R_ptw As Global.System.Data.DataColumn
        
        Private columnOBSHOT01_ptw As Global.System.Data.DataColumn
        
        Private columnOBSHOT01_R_ptw As Global.System.Data.DataColumn
        
        Private columnOBSHOT02_ptw As Global.System.Data.DataColumn
        
        Private columnOBSHOT02_R_ptw As Global.System.Data.DataColumn
        
        Private columnVIGIA01_ptw As Global.System.Data.DataColumn
        
        Private columnVIGIA01_R_ptw As Global.System.Data.DataColumn
        
        Private columnVIGIA02_ptw As Global.System.Data.DataColumn
        
        Private columnVIGIA02_R_ptw As Global.System.Data.DataColumn
        
        Private columnSAFETY_ptw As Global.System.Data.DataColumn
        
        Private columnSAFETY_R_ptw As Global.System.Data.DataColumn
        
        Private columnOIM_ptW As Global.System.Data.DataColumn
        
        Private columnOIM_R_ptW As Global.System.Data.DataColumn
        
        Private columnADMIN_ptw As Global.System.Data.DataColumn
        
        Private columnADMIN_R_ptw As Global.System.Data.DataColumn
        
        Private columnISSUERok_ptw As Global.System.Data.DataColumn
        
        Private columnLIDERok_ptw As Global.System.Data.DataColumn
        
        Private columnLIBERADORok_ptw As Global.System.Data.DataColumn
        
        Private columnSAFETYok_ptw As Global.System.Data.DataColumn
        
        Private columnOIMok_ptW As Global.System.Data.DataColumn
        
        Private columnADMINok_ptw As Global.System.Data.DataColumn
        
        Private columnSUPreq_ptw As Global.System.Data.DataColumn
        
        Private columnSUPtipC_ptw As Global.System.Data.DataColumn
        
        Private columnSUPtipP_ptw As Global.System.Data.DataColumn
        
        Private columnSUPtipN_ptw As Global.System.Data.DataColumn
        
        Private columnSUPperiodo01x_PTW As Global.System.Data.DataColumn
        
        Private columnSUPperiodo02x_PTW As Global.System.Data.DataColumn
        
        Private columnSUPperiodo03x_PTW As Global.System.Data.DataColumn
        
        Private columnSUPwho01_ptw As Global.System.Data.DataColumn
        
        Private columnSUPwho02_ptw As Global.System.Data.DataColumn
        
        Private columnSUPwho03_ptw As Global.System.Data.DataColumn
        
        Private columnSUPdate01_ptw As Global.System.Data.DataColumn
        
        Private columnSUPdate02_ptw As Global.System.Data.DataColumn
        
        Private columnSUPdate03_ptw As Global.System.Data.DataColumn
        
        Private columnSUPtime01_ptw As Global.System.Data.DataColumn
        
        Private columnSUPtime02_ptw As Global.System.Data.DataColumn
        
        Private columnSUPtime03_ptw As Global.System.Data.DataColumn
        
        Private columnimpedimentoOBS_ptw As Global.System.Data.DataColumn
        
        Private columnISSUERtxt_ptw As Global.System.Data.DataColumn
        
        Private columnfISSUER_ptw As Global.System.Data.DataColumn
        
        Private columnfISSUERdata_ptw As Global.System.Data.DataColumn
        
        Private columnfISSUERtime_ptw As Global.System.Data.DataColumn
        
        Private columnfLIDER_ptw As Global.System.Data.DataColumn
        
        Private columnfLIBERADOR_ptw As Global.System.Data.DataColumn
        
        Private columnfSAFETY_ptw As Global.System.Data.DataColumn
        
        Private columnfOIM_ptW As Global.System.Data.DataColumn
        
        Private columnfADMIN_ptw As Global.System.Data.DataColumn
        
        Private columnfckTrab_ptw As Global.System.Data.DataColumn
        
        Private columnfckTurno_ptw As Global.System.Data.DataColumn
        
        Private columnfckCancel_ptw As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PTopen"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property STATUS_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUS_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NUM_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUM_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DATA_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIME_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIME_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DESC_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HOT_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHOT_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LOCAL_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOCAL_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LOTOck_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOTOck_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LOTOnum_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOTOnum_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ATVsim_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnATVsim_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RISCOSad_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRISCOSad_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MOCck_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOCck_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MOCnm_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOCnm_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EPI_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEPI_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RECad_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRECad_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property APRIck_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPRIck_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property APRInum_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPRInum_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CARGAcritCK_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARGAcritCK_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LISTAobCK_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISTAobCK_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FLUIDOck_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFLUIDOck_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CESTOck_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCESTOck_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GUINCHOck_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUINCHOck_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OUTROS_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOUTROS_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TESTEck_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTESTEck_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DATEtest_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEtest_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIMEtest_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMEtest_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property O2_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnO2_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HC_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHC_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property H2Sppm_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnH2Sppm_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CO_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCO_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CO2_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCO2_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CHECKEDby_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHECKEDby_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SNdet_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSNdet_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXAUSTAOck_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXAUSTAOck_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DATEexaust_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEexaust_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIMEexaust_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMEexaust_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property O2_2_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnO2_2_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HC_2_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHC_2_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property H2S_2ppm_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnH2S_2ppm_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CO_2_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCO_2_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CO2_2_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCO2_2_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CHECKEDby_2_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHECKEDby_2_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SNdet_2_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSNdet_2_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CRITck_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRITck_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OUTofOPck_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOUTofOPck_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OUTofOPnom_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOUTofOPnom_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SENSORinCK_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENSORinCK_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SENSORregCK_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSENSORregCK_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PLANOresgCK_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLANOresgCK_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EQUIPEcomCK_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQUIPEcomCK_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property INTERCOMck_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTERCOMck_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PESSOALckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESSOALck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUSPmot_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUSPmot_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUSPpor_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUSPpor_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUSPdate_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUSPdate_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUSPtimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUSPtime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property REATIVpor_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREATIVpor_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property REATIVseg_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREATIVseg_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property REATIVdate_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREATIVdate_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property REATIVtime_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREATIVtime_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ISSUER_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSUER_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPERVISOR_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPERVISOR_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPERVISOR_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPERVISOR_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE01_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE01_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE02_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE02_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE03_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE03_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE04_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE04_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE05_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE05_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE06_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE06_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE07_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE07_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE01_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE01_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE02_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE02_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE03_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE03_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE04_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE04_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE05_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE05_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE06_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE06_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EXECUTANTE07_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXECUTANTE07_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LIDER_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIDER_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LIDER_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIDER_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LIDERdpt_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIDERdpt_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LIBERADOR_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIBERADOR_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LIBERADOR_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIBERADOR_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OBSHOT01_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSHOT01_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OBSHOT01_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSHOT01_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OBSHOT02_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSHOT02_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OBSHOT02_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSHOT02_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VIGIA01_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIGIA01_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VIGIA01_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIGIA01_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VIGIA02_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIGIA02_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VIGIA02_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIGIA02_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SAFETY_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAFETY_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SAFETY_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAFETY_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OIM_ptWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOIM_ptW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OIM_R_ptWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOIM_R_ptW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ADMIN_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADMIN_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ADMIN_R_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADMIN_R_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ISSUERok_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSUERok_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LIDERok_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIDERok_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LIBERADORok_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIBERADORok_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SAFETYok_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAFETYok_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OIMok_ptWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOIMok_ptW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ADMINok_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADMINok_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPreq_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPreq_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPtipC_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPtipC_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPtipP_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPtipP_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPtipN_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPtipN_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPperiodo01x_PTWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPperiodo01x_PTW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPperiodo02x_PTWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPperiodo02x_PTW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPperiodo03x_PTWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPperiodo03x_PTW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPwho01_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPwho01_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPwho02_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPwho02_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPwho03_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPwho03_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPdate01_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPdate01_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPdate02_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPdate02_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPdate03_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPdate03_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPtime01_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPtime01_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPtime02_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPtime02_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SUPtime03_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPtime03_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property impedimentoOBS_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimpedimentoOBS_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ISSUERtxt_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISSUERtxt_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fISSUER_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfISSUER_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fISSUERdata_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfISSUERdata_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fISSUERtime_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfISSUERtime_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fLIDER_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfLIDER_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fLIBERADOR_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfLIBERADOR_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fSAFETY_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfSAFETY_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fOIM_ptWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfOIM_ptW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fADMIN_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfADMIN_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fckTrab_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfckTrab_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fckTurno_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfckTurno_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fckCancel_ptwColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfckCancel_ptw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PTopenRow
            Get
                Return CType(Me.Rows(index),PTopenRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event PTopenRowChanging As PTopenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event PTopenRowChanged As PTopenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event PTopenRowDeleting As PTopenRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event PTopenRowDeleted As PTopenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddPTopenRow(ByVal row As PTopenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddPTopenRow( _
                    ByVal STATUS_ptw As Short,  _
                    ByVal NUM_ptw As Integer,  _
                    ByVal DATA_ptw As Date,  _
                    ByVal TIME_ptw As Date,  _
                    ByVal DESC_ptw As String,  _
                    ByVal HOT_ptw As Boolean,  _
                    ByVal LOCAL_ptw As String,  _
                    ByVal LOTOck_ptw As Boolean,  _
                    ByVal LOTOnum_ptw As Integer,  _
                    ByVal ATVsim_ptw As String,  _
                    ByVal RISCOSad_ptw As String,  _
                    ByVal MOCck_ptw As Boolean,  _
                    ByVal MOCnm_ptw As Integer,  _
                    ByVal EPI_ptw As Boolean,  _
                    ByVal RECad_ptw As String,  _
                    ByVal APRIck_ptw As Boolean,  _
                    ByVal APRInum_ptw As Integer,  _
                    ByVal CARGAcritCK_ptw As Boolean,  _
                    ByVal LISTAobCK_ptw As Boolean,  _
                    ByVal FLUIDOck_ptw As Boolean,  _
                    ByVal CESTOck_ptw As Boolean,  _
                    ByVal GUINCHOck_ptw As Boolean,  _
                    ByVal OUTROS_ptw As String,  _
                    ByVal TESTEck_ptw As Boolean,  _
                    ByVal DATEtest_ptw As Date,  _
                    ByVal TIMEtest_ptw As Date,  _
                    ByVal O2_ptw As Integer,  _
                    ByVal HC_ptw As Integer,  _
                    ByVal H2Sppm_ptw As Integer,  _
                    ByVal CO_ptw As Integer,  _
                    ByVal CO2_ptw As Integer,  _
                    ByVal CHECKEDby_ptw As Integer,  _
                    ByVal SNdet_ptw As String,  _
                    ByVal EXAUSTAOck_ptw As Boolean,  _
                    ByVal DATEexaust_ptw As Date,  _
                    ByVal TIMEexaust_ptw As Date,  _
                    ByVal O2_2_ptw As Integer,  _
                    ByVal HC_2_ptw As Integer,  _
                    ByVal H2S_2ppm_ptw As Integer,  _
                    ByVal CO_2_ptw As Integer,  _
                    ByVal CO2_2_ptw As Integer,  _
                    ByVal CHECKEDby_2_ptw As Integer,  _
                    ByVal SNdet_2_ptw As String,  _
                    ByVal CRITck_ptw As Boolean,  _
                    ByVal OUTofOPck_ptw As Boolean,  _
                    ByVal OUTofOPnom_ptw As String,  _
                    ByVal SENSORinCK_ptw As Boolean,  _
                    ByVal SENSORregCK_ptw As Boolean,  _
                    ByVal PLANOresgCK_ptw As Boolean,  _
                    ByVal EQUIPEcomCK_ptw As Boolean,  _
                    ByVal INTERCOMck_ptw As Boolean,  _
                    ByVal PESSOALck As Boolean,  _
                    ByVal SUSPmot_ptw As String,  _
                    ByVal SUSPpor_ptw As Integer,  _
                    ByVal SUSPdate_ptw As Date,  _
                    ByVal SUSPtime As Date,  _
                    ByVal REATIVpor_ptw As Integer,  _
                    ByVal REATIVseg_ptw As Boolean,  _
                    ByVal REATIVdate_ptw As Date,  _
                    ByVal REATIVtime_ptw As Date,  _
                    ByVal ISSUER_ptw As Integer,  _
                    ByVal SUPERVISOR_ptw As Integer,  _
                    ByVal SUPERVISOR_R_ptw As Integer,  _
                    ByVal EXECUTANTE01_ptw As Integer,  _
                    ByVal EXECUTANTE02_ptw As Integer,  _
                    ByVal EXECUTANTE03_ptw As Integer,  _
                    ByVal EXECUTANTE04_ptw As Integer,  _
                    ByVal EXECUTANTE05_ptw As Integer,  _
                    ByVal EXECUTANTE06_ptw As Integer,  _
                    ByVal EXECUTANTE07_ptw As Integer,  _
                    ByVal EXECUTANTE01_R_ptw As Integer,  _
                    ByVal EXECUTANTE02_R_ptw As Integer,  _
                    ByVal EXECUTANTE03_R_ptw As Integer,  _
                    ByVal EXECUTANTE04_R_ptw As Integer,  _
                    ByVal EXECUTANTE05_R_ptw As Integer,  _
                    ByVal EXECUTANTE06_R_ptw As Integer,  _
                    ByVal EXECUTANTE07_R_ptw As Integer,  _
                    ByVal LIDER_ptw As Integer,  _
                    ByVal LIDER_R_ptw As Integer,  _
                    ByVal LIDERdpt_ptw As String,  _
                    ByVal LIBERADOR_ptw As Integer,  _
                    ByVal LIBERADOR_R_ptw As Integer,  _
                    ByVal OBSHOT01_ptw As Integer,  _
                    ByVal OBSHOT01_R_ptw As Integer,  _
                    ByVal OBSHOT02_ptw As Integer,  _
                    ByVal OBSHOT02_R_ptw As Integer,  _
                    ByVal VIGIA01_ptw As Integer,  _
                    ByVal VIGIA01_R_ptw As Integer,  _
                    ByVal VIGIA02_ptw As Integer,  _
                    ByVal VIGIA02_R_ptw As Integer,  _
                    ByVal SAFETY_ptw As Integer,  _
                    ByVal SAFETY_R_ptw As Integer,  _
                    ByVal OIM_ptW As Integer,  _
                    ByVal OIM_R_ptW As Integer,  _
                    ByVal ADMIN_ptw As Integer,  _
                    ByVal ADMIN_R_ptw As Integer,  _
                    ByVal ISSUERok_ptw As Boolean,  _
                    ByVal LIDERok_ptw As Boolean,  _
                    ByVal LIBERADORok_ptw As Boolean,  _
                    ByVal SAFETYok_ptw As Boolean,  _
                    ByVal OIMok_ptW As Boolean,  _
                    ByVal ADMINok_ptw As Boolean,  _
                    ByVal SUPreq_ptw As Boolean,  _
                    ByVal SUPtipC_ptw As Boolean,  _
                    ByVal SUPtipP_ptw As Boolean,  _
                    ByVal SUPtipN_ptw As Boolean,  _
                    ByVal SUPperiodo01x_PTW As Boolean,  _
                    ByVal SUPperiodo02x_PTW As Boolean,  _
                    ByVal SUPperiodo03x_PTW As Boolean,  _
                    ByVal SUPwho01_ptw As Integer,  _
                    ByVal SUPwho02_ptw As Integer,  _
                    ByVal SUPwho03_ptw As Integer,  _
                    ByVal SUPdate01_ptw As Date,  _
                    ByVal SUPdate02_ptw As Date,  _
                    ByVal SUPdate03_ptw As Date,  _
                    ByVal SUPtime01_ptw As Date,  _
                    ByVal SUPtime02_ptw As Date,  _
                    ByVal SUPtime03_ptw As Date,  _
                    ByVal impedimentoOBS_ptw As String,  _
                    ByVal ISSUERtxt_ptw As String,  _
                    ByVal fISSUER_ptw As Integer,  _
                    ByVal fISSUERdata_ptw As Date,  _
                    ByVal fISSUERtime_ptw As Date,  _
                    ByVal fLIDER_ptw As Integer,  _
                    ByVal fLIBERADOR_ptw As Integer,  _
                    ByVal fSAFETY_ptw As Integer,  _
                    ByVal fOIM_ptW As Integer,  _
                    ByVal fADMIN_ptw As Integer,  _
                    ByVal fckTrab_ptw As Boolean,  _
                    ByVal fckTurno_ptw As Boolean,  _
                    ByVal fckCancel_ptw As Boolean) As PTopenRow
            Dim rowPTopenRow As PTopenRow = CType(Me.NewRow,PTopenRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, STATUS_ptw, NUM_ptw, DATA_ptw, TIME_ptw, DESC_ptw, HOT_ptw, LOCAL_ptw, LOTOck_ptw, LOTOnum_ptw, ATVsim_ptw, RISCOSad_ptw, MOCck_ptw, MOCnm_ptw, EPI_ptw, RECad_ptw, APRIck_ptw, APRInum_ptw, CARGAcritCK_ptw, LISTAobCK_ptw, FLUIDOck_ptw, CESTOck_ptw, GUINCHOck_ptw, OUTROS_ptw, TESTEck_ptw, DATEtest_ptw, TIMEtest_ptw, O2_ptw, HC_ptw, H2Sppm_ptw, CO_ptw, CO2_ptw, CHECKEDby_ptw, SNdet_ptw, EXAUSTAOck_ptw, DATEexaust_ptw, TIMEexaust_ptw, O2_2_ptw, HC_2_ptw, H2S_2ppm_ptw, CO_2_ptw, CO2_2_ptw, CHECKEDby_2_ptw, SNdet_2_ptw, CRITck_ptw, OUTofOPck_ptw, OUTofOPnom_ptw, SENSORinCK_ptw, SENSORregCK_ptw, PLANOresgCK_ptw, EQUIPEcomCK_ptw, INTERCOMck_ptw, PESSOALck, SUSPmot_ptw, SUSPpor_ptw, SUSPdate_ptw, SUSPtime, REATIVpor_ptw, REATIVseg_ptw, REATIVdate_ptw, REATIVtime_ptw, ISSUER_ptw, SUPERVISOR_ptw, SUPERVISOR_R_ptw, EXECUTANTE01_ptw, EXECUTANTE02_ptw, EXECUTANTE03_ptw, EXECUTANTE04_ptw, EXECUTANTE05_ptw, EXECUTANTE06_ptw, EXECUTANTE07_ptw, EXECUTANTE01_R_ptw, EXECUTANTE02_R_ptw, EXECUTANTE03_R_ptw, EXECUTANTE04_R_ptw, EXECUTANTE05_R_ptw, EXECUTANTE06_R_ptw, EXECUTANTE07_R_ptw, LIDER_ptw, LIDER_R_ptw, LIDERdpt_ptw, LIBERADOR_ptw, LIBERADOR_R_ptw, OBSHOT01_ptw, OBSHOT01_R_ptw, OBSHOT02_ptw, OBSHOT02_R_ptw, VIGIA01_ptw, VIGIA01_R_ptw, VIGIA02_ptw, VIGIA02_R_ptw, SAFETY_ptw, SAFETY_R_ptw, OIM_ptW, OIM_R_ptW, ADMIN_ptw, ADMIN_R_ptw, ISSUERok_ptw, LIDERok_ptw, LIBERADORok_ptw, SAFETYok_ptw, OIMok_ptW, ADMINok_ptw, SUPreq_ptw, SUPtipC_ptw, SUPtipP_ptw, SUPtipN_ptw, SUPperiodo01x_PTW, SUPperiodo02x_PTW, SUPperiodo03x_PTW, SUPwho01_ptw, SUPwho02_ptw, SUPwho03_ptw, SUPdate01_ptw, SUPdate02_ptw, SUPdate03_ptw, SUPtime01_ptw, SUPtime02_ptw, SUPtime03_ptw, impedimentoOBS_ptw, ISSUERtxt_ptw, fISSUER_ptw, fISSUERdata_ptw, fISSUERtime_ptw, fLIDER_ptw, fLIBERADOR_ptw, fSAFETY_ptw, fOIM_ptW, fADMIN_ptw, fckTrab_ptw, fckTurno_ptw, fckCancel_ptw}
            rowPTopenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPTopenRow)
            Return rowPTopenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As PTopenRow
            Return CType(Me.Rows.Find(New Object() {ID}),PTopenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PTopenDataTable = CType(MyBase.Clone,PTopenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PTopenDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnSTATUS_ptw = MyBase.Columns("STATUS_ptw")
            Me.columnNUM_ptw = MyBase.Columns("NUM_ptw")
            Me.columnDATA_ptw = MyBase.Columns("DATA_ptw")
            Me.columnTIME_ptw = MyBase.Columns("TIME_ptw")
            Me.columnDESC_ptw = MyBase.Columns("DESC_ptw")
            Me.columnHOT_ptw = MyBase.Columns("HOT_ptw")
            Me.columnLOCAL_ptw = MyBase.Columns("LOCAL_ptw")
            Me.columnLOTOck_ptw = MyBase.Columns("LOTOck_ptw")
            Me.columnLOTOnum_ptw = MyBase.Columns("LOTOnum_ptw")
            Me.columnATVsim_ptw = MyBase.Columns("ATVsim_ptw")
            Me.columnRISCOSad_ptw = MyBase.Columns("RISCOSad_ptw")
            Me.columnMOCck_ptw = MyBase.Columns("MOCck_ptw")
            Me.columnMOCnm_ptw = MyBase.Columns("MOCnm_ptw")
            Me.columnEPI_ptw = MyBase.Columns("EPI_ptw")
            Me.columnRECad_ptw = MyBase.Columns("RECad_ptw")
            Me.columnAPRIck_ptw = MyBase.Columns("APRIck_ptw")
            Me.columnAPRInum_ptw = MyBase.Columns("APRInum_ptw")
            Me.columnCARGAcritCK_ptw = MyBase.Columns("CARGAcritCK_ptw")
            Me.columnLISTAobCK_ptw = MyBase.Columns("LISTAobCK_ptw")
            Me.columnFLUIDOck_ptw = MyBase.Columns("FLUIDOck_ptw")
            Me.columnCESTOck_ptw = MyBase.Columns("CESTOck_ptw")
            Me.columnGUINCHOck_ptw = MyBase.Columns("GUINCHOck_ptw")
            Me.columnOUTROS_ptw = MyBase.Columns("OUTROS_ptw")
            Me.columnTESTEck_ptw = MyBase.Columns("TESTEck_ptw")
            Me.columnDATEtest_ptw = MyBase.Columns("DATEtest_ptw")
            Me.columnTIMEtest_ptw = MyBase.Columns("TIMEtest_ptw")
            Me.columnO2_ptw = MyBase.Columns("O2_ptw")
            Me.columnHC_ptw = MyBase.Columns("HC_ptw")
            Me.columnH2Sppm_ptw = MyBase.Columns("H2Sppm_ptw")
            Me.columnCO_ptw = MyBase.Columns("CO_ptw")
            Me.columnCO2_ptw = MyBase.Columns("CO2_ptw")
            Me.columnCHECKEDby_ptw = MyBase.Columns("CHECKEDby_ptw")
            Me.columnSNdet_ptw = MyBase.Columns("SNdet_ptw")
            Me.columnEXAUSTAOck_ptw = MyBase.Columns("EXAUSTAOck_ptw")
            Me.columnDATEexaust_ptw = MyBase.Columns("DATEexaust_ptw")
            Me.columnTIMEexaust_ptw = MyBase.Columns("TIMEexaust_ptw")
            Me.columnO2_2_ptw = MyBase.Columns("O2_2_ptw")
            Me.columnHC_2_ptw = MyBase.Columns("HC_2_ptw")
            Me.columnH2S_2ppm_ptw = MyBase.Columns("H2S_2ppm_ptw")
            Me.columnCO_2_ptw = MyBase.Columns("CO_2_ptw")
            Me.columnCO2_2_ptw = MyBase.Columns("CO2_2_ptw")
            Me.columnCHECKEDby_2_ptw = MyBase.Columns("CHECKEDby_2_ptw")
            Me.columnSNdet_2_ptw = MyBase.Columns("SNdet_2_ptw")
            Me.columnCRITck_ptw = MyBase.Columns("CRITck_ptw")
            Me.columnOUTofOPck_ptw = MyBase.Columns("OUTofOPck_ptw")
            Me.columnOUTofOPnom_ptw = MyBase.Columns("OUTofOPnom_ptw")
            Me.columnSENSORinCK_ptw = MyBase.Columns("SENSORinCK_ptw")
            Me.columnSENSORregCK_ptw = MyBase.Columns("SENSORregCK_ptw")
            Me.columnPLANOresgCK_ptw = MyBase.Columns("PLANOresgCK_ptw")
            Me.columnEQUIPEcomCK_ptw = MyBase.Columns("EQUIPEcomCK_ptw")
            Me.columnINTERCOMck_ptw = MyBase.Columns("INTERCOMck_ptw")
            Me.columnPESSOALck = MyBase.Columns("PESSOALck")
            Me.columnSUSPmot_ptw = MyBase.Columns("SUSPmot_ptw")
            Me.columnSUSPpor_ptw = MyBase.Columns("SUSPpor_ptw")
            Me.columnSUSPdate_ptw = MyBase.Columns("SUSPdate_ptw")
            Me.columnSUSPtime = MyBase.Columns("SUSPtime")
            Me.columnREATIVpor_ptw = MyBase.Columns("REATIVpor_ptw")
            Me.columnREATIVseg_ptw = MyBase.Columns("REATIVseg_ptw")
            Me.columnREATIVdate_ptw = MyBase.Columns("REATIVdate_ptw")
            Me.columnREATIVtime_ptw = MyBase.Columns("REATIVtime_ptw")
            Me.columnISSUER_ptw = MyBase.Columns("ISSUER_ptw")
            Me.columnSUPERVISOR_ptw = MyBase.Columns("SUPERVISOR_ptw")
            Me.columnSUPERVISOR_R_ptw = MyBase.Columns("SUPERVISOR_R_ptw")
            Me.columnEXECUTANTE01_ptw = MyBase.Columns("EXECUTANTE01_ptw")
            Me.columnEXECUTANTE02_ptw = MyBase.Columns("EXECUTANTE02_ptw")
            Me.columnEXECUTANTE03_ptw = MyBase.Columns("EXECUTANTE03_ptw")
            Me.columnEXECUTANTE04_ptw = MyBase.Columns("EXECUTANTE04_ptw")
            Me.columnEXECUTANTE05_ptw = MyBase.Columns("EXECUTANTE05_ptw")
            Me.columnEXECUTANTE06_ptw = MyBase.Columns("EXECUTANTE06_ptw")
            Me.columnEXECUTANTE07_ptw = MyBase.Columns("EXECUTANTE07_ptw")
            Me.columnEXECUTANTE01_R_ptw = MyBase.Columns("EXECUTANTE01_R_ptw")
            Me.columnEXECUTANTE02_R_ptw = MyBase.Columns("EXECUTANTE02_R_ptw")
            Me.columnEXECUTANTE03_R_ptw = MyBase.Columns("EXECUTANTE03_R_ptw")
            Me.columnEXECUTANTE04_R_ptw = MyBase.Columns("EXECUTANTE04_R_ptw")
            Me.columnEXECUTANTE05_R_ptw = MyBase.Columns("EXECUTANTE05_R_ptw")
            Me.columnEXECUTANTE06_R_ptw = MyBase.Columns("EXECUTANTE06_R_ptw")
            Me.columnEXECUTANTE07_R_ptw = MyBase.Columns("EXECUTANTE07_R_ptw")
            Me.columnLIDER_ptw = MyBase.Columns("LIDER_ptw")
            Me.columnLIDER_R_ptw = MyBase.Columns("LIDER_R_ptw")
            Me.columnLIDERdpt_ptw = MyBase.Columns("LIDERdpt_ptw")
            Me.columnLIBERADOR_ptw = MyBase.Columns("LIBERADOR_ptw")
            Me.columnLIBERADOR_R_ptw = MyBase.Columns("LIBERADOR_R_ptw")
            Me.columnOBSHOT01_ptw = MyBase.Columns("OBSHOT01_ptw")
            Me.columnOBSHOT01_R_ptw = MyBase.Columns("OBSHOT01_R_ptw")
            Me.columnOBSHOT02_ptw = MyBase.Columns("OBSHOT02_ptw")
            Me.columnOBSHOT02_R_ptw = MyBase.Columns("OBSHOT02_R_ptw")
            Me.columnVIGIA01_ptw = MyBase.Columns("VIGIA01_ptw")
            Me.columnVIGIA01_R_ptw = MyBase.Columns("VIGIA01_R_ptw")
            Me.columnVIGIA02_ptw = MyBase.Columns("VIGIA02_ptw")
            Me.columnVIGIA02_R_ptw = MyBase.Columns("VIGIA02_R_ptw")
            Me.columnSAFETY_ptw = MyBase.Columns("SAFETY_ptw")
            Me.columnSAFETY_R_ptw = MyBase.Columns("SAFETY_R_ptw")
            Me.columnOIM_ptW = MyBase.Columns("OIM_ptW")
            Me.columnOIM_R_ptW = MyBase.Columns("OIM_R_ptW")
            Me.columnADMIN_ptw = MyBase.Columns("ADMIN_ptw")
            Me.columnADMIN_R_ptw = MyBase.Columns("ADMIN_R_ptw")
            Me.columnISSUERok_ptw = MyBase.Columns("ISSUERok_ptw")
            Me.columnLIDERok_ptw = MyBase.Columns("LIDERok_ptw")
            Me.columnLIBERADORok_ptw = MyBase.Columns("LIBERADORok_ptw")
            Me.columnSAFETYok_ptw = MyBase.Columns("SAFETYok_ptw")
            Me.columnOIMok_ptW = MyBase.Columns("OIMok_ptW")
            Me.columnADMINok_ptw = MyBase.Columns("ADMINok_ptw")
            Me.columnSUPreq_ptw = MyBase.Columns("SUPreq_ptw")
            Me.columnSUPtipC_ptw = MyBase.Columns("SUPtipC_ptw")
            Me.columnSUPtipP_ptw = MyBase.Columns("SUPtipP_ptw")
            Me.columnSUPtipN_ptw = MyBase.Columns("SUPtipN_ptw")
            Me.columnSUPperiodo01x_PTW = MyBase.Columns("SUPperiodo01x_PTW")
            Me.columnSUPperiodo02x_PTW = MyBase.Columns("SUPperiodo02x_PTW")
            Me.columnSUPperiodo03x_PTW = MyBase.Columns("SUPperiodo03x_PTW")
            Me.columnSUPwho01_ptw = MyBase.Columns("SUPwho01_ptw")
            Me.columnSUPwho02_ptw = MyBase.Columns("SUPwho02_ptw")
            Me.columnSUPwho03_ptw = MyBase.Columns("SUPwho03_ptw")
            Me.columnSUPdate01_ptw = MyBase.Columns("SUPdate01_ptw")
            Me.columnSUPdate02_ptw = MyBase.Columns("SUPdate02_ptw")
            Me.columnSUPdate03_ptw = MyBase.Columns("SUPdate03_ptw")
            Me.columnSUPtime01_ptw = MyBase.Columns("SUPtime01_ptw")
            Me.columnSUPtime02_ptw = MyBase.Columns("SUPtime02_ptw")
            Me.columnSUPtime03_ptw = MyBase.Columns("SUPtime03_ptw")
            Me.columnimpedimentoOBS_ptw = MyBase.Columns("impedimentoOBS_ptw")
            Me.columnISSUERtxt_ptw = MyBase.Columns("ISSUERtxt_ptw")
            Me.columnfISSUER_ptw = MyBase.Columns("fISSUER_ptw")
            Me.columnfISSUERdata_ptw = MyBase.Columns("fISSUERdata_ptw")
            Me.columnfISSUERtime_ptw = MyBase.Columns("fISSUERtime_ptw")
            Me.columnfLIDER_ptw = MyBase.Columns("fLIDER_ptw")
            Me.columnfLIBERADOR_ptw = MyBase.Columns("fLIBERADOR_ptw")
            Me.columnfSAFETY_ptw = MyBase.Columns("fSAFETY_ptw")
            Me.columnfOIM_ptW = MyBase.Columns("fOIM_ptW")
            Me.columnfADMIN_ptw = MyBase.Columns("fADMIN_ptw")
            Me.columnfckTrab_ptw = MyBase.Columns("fckTrab_ptw")
            Me.columnfckTurno_ptw = MyBase.Columns("fckTurno_ptw")
            Me.columnfckCancel_ptw = MyBase.Columns("fckCancel_ptw")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnSTATUS_ptw = New Global.System.Data.DataColumn("STATUS_ptw", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS_ptw)
            Me.columnNUM_ptw = New Global.System.Data.DataColumn("NUM_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUM_ptw)
            Me.columnDATA_ptw = New Global.System.Data.DataColumn("DATA_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA_ptw)
            Me.columnTIME_ptw = New Global.System.Data.DataColumn("TIME_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIME_ptw)
            Me.columnDESC_ptw = New Global.System.Data.DataColumn("DESC_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_ptw)
            Me.columnHOT_ptw = New Global.System.Data.DataColumn("HOT_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHOT_ptw)
            Me.columnLOCAL_ptw = New Global.System.Data.DataColumn("LOCAL_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOCAL_ptw)
            Me.columnLOTOck_ptw = New Global.System.Data.DataColumn("LOTOck_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOTOck_ptw)
            Me.columnLOTOnum_ptw = New Global.System.Data.DataColumn("LOTOnum_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOTOnum_ptw)
            Me.columnATVsim_ptw = New Global.System.Data.DataColumn("ATVsim_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnATVsim_ptw)
            Me.columnRISCOSad_ptw = New Global.System.Data.DataColumn("RISCOSad_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRISCOSad_ptw)
            Me.columnMOCck_ptw = New Global.System.Data.DataColumn("MOCck_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOCck_ptw)
            Me.columnMOCnm_ptw = New Global.System.Data.DataColumn("MOCnm_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOCnm_ptw)
            Me.columnEPI_ptw = New Global.System.Data.DataColumn("EPI_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEPI_ptw)
            Me.columnRECad_ptw = New Global.System.Data.DataColumn("RECad_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRECad_ptw)
            Me.columnAPRIck_ptw = New Global.System.Data.DataColumn("APRIck_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPRIck_ptw)
            Me.columnAPRInum_ptw = New Global.System.Data.DataColumn("APRInum_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPRInum_ptw)
            Me.columnCARGAcritCK_ptw = New Global.System.Data.DataColumn("CARGAcritCK_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARGAcritCK_ptw)
            Me.columnLISTAobCK_ptw = New Global.System.Data.DataColumn("LISTAobCK_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISTAobCK_ptw)
            Me.columnFLUIDOck_ptw = New Global.System.Data.DataColumn("FLUIDOck_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFLUIDOck_ptw)
            Me.columnCESTOck_ptw = New Global.System.Data.DataColumn("CESTOck_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCESTOck_ptw)
            Me.columnGUINCHOck_ptw = New Global.System.Data.DataColumn("GUINCHOck_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUINCHOck_ptw)
            Me.columnOUTROS_ptw = New Global.System.Data.DataColumn("OUTROS_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOUTROS_ptw)
            Me.columnTESTEck_ptw = New Global.System.Data.DataColumn("TESTEck_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTESTEck_ptw)
            Me.columnDATEtest_ptw = New Global.System.Data.DataColumn("DATEtest_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEtest_ptw)
            Me.columnTIMEtest_ptw = New Global.System.Data.DataColumn("TIMEtest_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMEtest_ptw)
            Me.columnO2_ptw = New Global.System.Data.DataColumn("O2_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnO2_ptw)
            Me.columnHC_ptw = New Global.System.Data.DataColumn("HC_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHC_ptw)
            Me.columnH2Sppm_ptw = New Global.System.Data.DataColumn("H2Sppm_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnH2Sppm_ptw)
            Me.columnCO_ptw = New Global.System.Data.DataColumn("CO_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCO_ptw)
            Me.columnCO2_ptw = New Global.System.Data.DataColumn("CO2_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCO2_ptw)
            Me.columnCHECKEDby_ptw = New Global.System.Data.DataColumn("CHECKEDby_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHECKEDby_ptw)
            Me.columnSNdet_ptw = New Global.System.Data.DataColumn("SNdet_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSNdet_ptw)
            Me.columnEXAUSTAOck_ptw = New Global.System.Data.DataColumn("EXAUSTAOck_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXAUSTAOck_ptw)
            Me.columnDATEexaust_ptw = New Global.System.Data.DataColumn("DATEexaust_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEexaust_ptw)
            Me.columnTIMEexaust_ptw = New Global.System.Data.DataColumn("TIMEexaust_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMEexaust_ptw)
            Me.columnO2_2_ptw = New Global.System.Data.DataColumn("O2_2_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnO2_2_ptw)
            Me.columnHC_2_ptw = New Global.System.Data.DataColumn("HC_2_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHC_2_ptw)
            Me.columnH2S_2ppm_ptw = New Global.System.Data.DataColumn("H2S_2ppm_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnH2S_2ppm_ptw)
            Me.columnCO_2_ptw = New Global.System.Data.DataColumn("CO_2_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCO_2_ptw)
            Me.columnCO2_2_ptw = New Global.System.Data.DataColumn("CO2_2_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCO2_2_ptw)
            Me.columnCHECKEDby_2_ptw = New Global.System.Data.DataColumn("CHECKEDby_2_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHECKEDby_2_ptw)
            Me.columnSNdet_2_ptw = New Global.System.Data.DataColumn("SNdet_2_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSNdet_2_ptw)
            Me.columnCRITck_ptw = New Global.System.Data.DataColumn("CRITck_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRITck_ptw)
            Me.columnOUTofOPck_ptw = New Global.System.Data.DataColumn("OUTofOPck_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOUTofOPck_ptw)
            Me.columnOUTofOPnom_ptw = New Global.System.Data.DataColumn("OUTofOPnom_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOUTofOPnom_ptw)
            Me.columnSENSORinCK_ptw = New Global.System.Data.DataColumn("SENSORinCK_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENSORinCK_ptw)
            Me.columnSENSORregCK_ptw = New Global.System.Data.DataColumn("SENSORregCK_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSENSORregCK_ptw)
            Me.columnPLANOresgCK_ptw = New Global.System.Data.DataColumn("PLANOresgCK_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLANOresgCK_ptw)
            Me.columnEQUIPEcomCK_ptw = New Global.System.Data.DataColumn("EQUIPEcomCK_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQUIPEcomCK_ptw)
            Me.columnINTERCOMck_ptw = New Global.System.Data.DataColumn("INTERCOMck_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTERCOMck_ptw)
            Me.columnPESSOALck = New Global.System.Data.DataColumn("PESSOALck", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESSOALck)
            Me.columnSUSPmot_ptw = New Global.System.Data.DataColumn("SUSPmot_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUSPmot_ptw)
            Me.columnSUSPpor_ptw = New Global.System.Data.DataColumn("SUSPpor_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUSPpor_ptw)
            Me.columnSUSPdate_ptw = New Global.System.Data.DataColumn("SUSPdate_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUSPdate_ptw)
            Me.columnSUSPtime = New Global.System.Data.DataColumn("SUSPtime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUSPtime)
            Me.columnREATIVpor_ptw = New Global.System.Data.DataColumn("REATIVpor_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREATIVpor_ptw)
            Me.columnREATIVseg_ptw = New Global.System.Data.DataColumn("REATIVseg_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREATIVseg_ptw)
            Me.columnREATIVdate_ptw = New Global.System.Data.DataColumn("REATIVdate_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREATIVdate_ptw)
            Me.columnREATIVtime_ptw = New Global.System.Data.DataColumn("REATIVtime_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREATIVtime_ptw)
            Me.columnISSUER_ptw = New Global.System.Data.DataColumn("ISSUER_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSUER_ptw)
            Me.columnSUPERVISOR_ptw = New Global.System.Data.DataColumn("SUPERVISOR_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPERVISOR_ptw)
            Me.columnSUPERVISOR_R_ptw = New Global.System.Data.DataColumn("SUPERVISOR_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPERVISOR_R_ptw)
            Me.columnEXECUTANTE01_ptw = New Global.System.Data.DataColumn("EXECUTANTE01_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE01_ptw)
            Me.columnEXECUTANTE02_ptw = New Global.System.Data.DataColumn("EXECUTANTE02_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE02_ptw)
            Me.columnEXECUTANTE03_ptw = New Global.System.Data.DataColumn("EXECUTANTE03_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE03_ptw)
            Me.columnEXECUTANTE04_ptw = New Global.System.Data.DataColumn("EXECUTANTE04_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE04_ptw)
            Me.columnEXECUTANTE05_ptw = New Global.System.Data.DataColumn("EXECUTANTE05_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE05_ptw)
            Me.columnEXECUTANTE06_ptw = New Global.System.Data.DataColumn("EXECUTANTE06_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE06_ptw)
            Me.columnEXECUTANTE07_ptw = New Global.System.Data.DataColumn("EXECUTANTE07_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE07_ptw)
            Me.columnEXECUTANTE01_R_ptw = New Global.System.Data.DataColumn("EXECUTANTE01_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE01_R_ptw)
            Me.columnEXECUTANTE02_R_ptw = New Global.System.Data.DataColumn("EXECUTANTE02_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE02_R_ptw)
            Me.columnEXECUTANTE03_R_ptw = New Global.System.Data.DataColumn("EXECUTANTE03_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE03_R_ptw)
            Me.columnEXECUTANTE04_R_ptw = New Global.System.Data.DataColumn("EXECUTANTE04_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE04_R_ptw)
            Me.columnEXECUTANTE05_R_ptw = New Global.System.Data.DataColumn("EXECUTANTE05_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE05_R_ptw)
            Me.columnEXECUTANTE06_R_ptw = New Global.System.Data.DataColumn("EXECUTANTE06_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE06_R_ptw)
            Me.columnEXECUTANTE07_R_ptw = New Global.System.Data.DataColumn("EXECUTANTE07_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXECUTANTE07_R_ptw)
            Me.columnLIDER_ptw = New Global.System.Data.DataColumn("LIDER_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIDER_ptw)
            Me.columnLIDER_R_ptw = New Global.System.Data.DataColumn("LIDER_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIDER_R_ptw)
            Me.columnLIDERdpt_ptw = New Global.System.Data.DataColumn("LIDERdpt_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIDERdpt_ptw)
            Me.columnLIBERADOR_ptw = New Global.System.Data.DataColumn("LIBERADOR_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIBERADOR_ptw)
            Me.columnLIBERADOR_R_ptw = New Global.System.Data.DataColumn("LIBERADOR_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIBERADOR_R_ptw)
            Me.columnOBSHOT01_ptw = New Global.System.Data.DataColumn("OBSHOT01_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSHOT01_ptw)
            Me.columnOBSHOT01_R_ptw = New Global.System.Data.DataColumn("OBSHOT01_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSHOT01_R_ptw)
            Me.columnOBSHOT02_ptw = New Global.System.Data.DataColumn("OBSHOT02_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSHOT02_ptw)
            Me.columnOBSHOT02_R_ptw = New Global.System.Data.DataColumn("OBSHOT02_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSHOT02_R_ptw)
            Me.columnVIGIA01_ptw = New Global.System.Data.DataColumn("VIGIA01_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIGIA01_ptw)
            Me.columnVIGIA01_R_ptw = New Global.System.Data.DataColumn("VIGIA01_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIGIA01_R_ptw)
            Me.columnVIGIA02_ptw = New Global.System.Data.DataColumn("VIGIA02_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIGIA02_ptw)
            Me.columnVIGIA02_R_ptw = New Global.System.Data.DataColumn("VIGIA02_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIGIA02_R_ptw)
            Me.columnSAFETY_ptw = New Global.System.Data.DataColumn("SAFETY_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAFETY_ptw)
            Me.columnSAFETY_R_ptw = New Global.System.Data.DataColumn("SAFETY_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAFETY_R_ptw)
            Me.columnOIM_ptW = New Global.System.Data.DataColumn("OIM_ptW", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOIM_ptW)
            Me.columnOIM_R_ptW = New Global.System.Data.DataColumn("OIM_R_ptW", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOIM_R_ptW)
            Me.columnADMIN_ptw = New Global.System.Data.DataColumn("ADMIN_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADMIN_ptw)
            Me.columnADMIN_R_ptw = New Global.System.Data.DataColumn("ADMIN_R_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADMIN_R_ptw)
            Me.columnISSUERok_ptw = New Global.System.Data.DataColumn("ISSUERok_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSUERok_ptw)
            Me.columnLIDERok_ptw = New Global.System.Data.DataColumn("LIDERok_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIDERok_ptw)
            Me.columnLIBERADORok_ptw = New Global.System.Data.DataColumn("LIBERADORok_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIBERADORok_ptw)
            Me.columnSAFETYok_ptw = New Global.System.Data.DataColumn("SAFETYok_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAFETYok_ptw)
            Me.columnOIMok_ptW = New Global.System.Data.DataColumn("OIMok_ptW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOIMok_ptW)
            Me.columnADMINok_ptw = New Global.System.Data.DataColumn("ADMINok_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADMINok_ptw)
            Me.columnSUPreq_ptw = New Global.System.Data.DataColumn("SUPreq_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPreq_ptw)
            Me.columnSUPtipC_ptw = New Global.System.Data.DataColumn("SUPtipC_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPtipC_ptw)
            Me.columnSUPtipP_ptw = New Global.System.Data.DataColumn("SUPtipP_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPtipP_ptw)
            Me.columnSUPtipN_ptw = New Global.System.Data.DataColumn("SUPtipN_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPtipN_ptw)
            Me.columnSUPperiodo01x_PTW = New Global.System.Data.DataColumn("SUPperiodo01x_PTW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPperiodo01x_PTW)
            Me.columnSUPperiodo02x_PTW = New Global.System.Data.DataColumn("SUPperiodo02x_PTW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPperiodo02x_PTW)
            Me.columnSUPperiodo03x_PTW = New Global.System.Data.DataColumn("SUPperiodo03x_PTW", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPperiodo03x_PTW)
            Me.columnSUPwho01_ptw = New Global.System.Data.DataColumn("SUPwho01_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPwho01_ptw)
            Me.columnSUPwho02_ptw = New Global.System.Data.DataColumn("SUPwho02_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPwho02_ptw)
            Me.columnSUPwho03_ptw = New Global.System.Data.DataColumn("SUPwho03_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPwho03_ptw)
            Me.columnSUPdate01_ptw = New Global.System.Data.DataColumn("SUPdate01_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPdate01_ptw)
            Me.columnSUPdate02_ptw = New Global.System.Data.DataColumn("SUPdate02_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPdate02_ptw)
            Me.columnSUPdate03_ptw = New Global.System.Data.DataColumn("SUPdate03_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPdate03_ptw)
            Me.columnSUPtime01_ptw = New Global.System.Data.DataColumn("SUPtime01_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPtime01_ptw)
            Me.columnSUPtime02_ptw = New Global.System.Data.DataColumn("SUPtime02_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPtime02_ptw)
            Me.columnSUPtime03_ptw = New Global.System.Data.DataColumn("SUPtime03_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPtime03_ptw)
            Me.columnimpedimentoOBS_ptw = New Global.System.Data.DataColumn("impedimentoOBS_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimpedimentoOBS_ptw)
            Me.columnISSUERtxt_ptw = New Global.System.Data.DataColumn("ISSUERtxt_ptw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISSUERtxt_ptw)
            Me.columnfISSUER_ptw = New Global.System.Data.DataColumn("fISSUER_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfISSUER_ptw)
            Me.columnfISSUERdata_ptw = New Global.System.Data.DataColumn("fISSUERdata_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfISSUERdata_ptw)
            Me.columnfISSUERtime_ptw = New Global.System.Data.DataColumn("fISSUERtime_ptw", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfISSUERtime_ptw)
            Me.columnfLIDER_ptw = New Global.System.Data.DataColumn("fLIDER_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfLIDER_ptw)
            Me.columnfLIBERADOR_ptw = New Global.System.Data.DataColumn("fLIBERADOR_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfLIBERADOR_ptw)
            Me.columnfSAFETY_ptw = New Global.System.Data.DataColumn("fSAFETY_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfSAFETY_ptw)
            Me.columnfOIM_ptW = New Global.System.Data.DataColumn("fOIM_ptW", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfOIM_ptW)
            Me.columnfADMIN_ptw = New Global.System.Data.DataColumn("fADMIN_ptw", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfADMIN_ptw)
            Me.columnfckTrab_ptw = New Global.System.Data.DataColumn("fckTrab_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfckTrab_ptw)
            Me.columnfckTurno_ptw = New Global.System.Data.DataColumn("fckTurno_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfckTurno_ptw)
            Me.columnfckCancel_ptw = New Global.System.Data.DataColumn("fckCancel_ptw", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfckCancel_ptw)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnDESC_ptw.MaxLength = 255
            Me.columnLOCAL_ptw.MaxLength = 255
            Me.columnATVsim_ptw.MaxLength = 255
            Me.columnRISCOSad_ptw.MaxLength = 255
            Me.columnRECad_ptw.MaxLength = 255
            Me.columnOUTROS_ptw.MaxLength = 255
            Me.columnSNdet_ptw.MaxLength = 255
            Me.columnSNdet_2_ptw.MaxLength = 255
            Me.columnOUTofOPnom_ptw.MaxLength = 255
            Me.columnSUSPmot_ptw.MaxLength = 255
            Me.columnLIDERdpt_ptw.MaxLength = 255
            Me.columnimpedimentoOBS_ptw.MaxLength = 255
            Me.columnISSUERtxt_ptw.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewPTopenRow() As PTopenRow
            Return CType(Me.NewRow,PTopenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PTopenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PTopenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PTopenRowChangedEvent) Is Nothing) Then
                RaiseEvent PTopenRowChanged(Me, New PTopenRowChangeEvent(CType(e.Row,PTopenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PTopenRowChangingEvent) Is Nothing) Then
                RaiseEvent PTopenRowChanging(Me, New PTopenRowChangeEvent(CType(e.Row,PTopenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PTopenRowDeletedEvent) Is Nothing) Then
                RaiseEvent PTopenRowDeleted(Me, New PTopenRowChangeEvent(CType(e.Row,PTopenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PTopenRowDeletingEvent) Is Nothing) Then
                RaiseEvent PTopenRowDeleting(Me, New PTopenRowChangeEvent(CType(e.Row,PTopenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovePTopenRow(ByVal row As PTopenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PTW_DB_BackupDataSet = New PTW_DB_BackupDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PTopenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class AppConstantRow
        Inherits Global.System.Data.DataRow
        
        Private tableAppConstant As AppConstantDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAppConstant = CType(Me.Table,AppConstantDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id_app() As Integer
            Get
                Return CType(Me(Me.tableAppConstant.id_appColumn),Integer)
            End Get
            Set
                Me(Me.tableAppConstant.id_appColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Name_app() As String
            Get
                Try 
                    Return CType(Me(Me.tableAppConstant.Name_appColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Name_app' na tabela 'AppConstant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAppConstant.Name_appColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NumAPPe_app() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAppConstant.NumAPPe_appColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'NumAPPe_app' na tabela 'AppConstant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAppConstant.NumAPPe_appColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property onOff_app() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableAppConstant.onOff_appColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'onOff_app' na tabela 'AppConstant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAppConstant.onOff_appColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Cath_app() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAppConstant.Cath_appColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'Cath_app' na tabela 'AppConstant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAppConstant.Cath_appColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property version_app() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAppConstant.version_appColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'version_app' na tabela 'AppConstant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAppConstant.version_appColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsName_appNull() As Boolean
            Return Me.IsNull(Me.tableAppConstant.Name_appColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetName_appNull()
            Me(Me.tableAppConstant.Name_appColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNumAPPe_appNull() As Boolean
            Return Me.IsNull(Me.tableAppConstant.NumAPPe_appColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNumAPPe_appNull()
            Me(Me.tableAppConstant.NumAPPe_appColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsonOff_appNull() As Boolean
            Return Me.IsNull(Me.tableAppConstant.onOff_appColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetonOff_appNull()
            Me(Me.tableAppConstant.onOff_appColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCath_appNull() As Boolean
            Return Me.IsNull(Me.tableAppConstant.Cath_appColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCath_appNull()
            Me(Me.tableAppConstant.Cath_appColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isversion_appNull() As Boolean
            Return Me.IsNull(Me.tableAppConstant.version_appColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setversion_appNull()
            Me(Me.tableAppConstant.version_appColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class AppupdateVersionRow
        Inherits Global.System.Data.DataRow
        
        Private tableAppupdateVersion As AppupdateVersionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAppupdateVersion = CType(Me.Table,AppupdateVersionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableAppupdateVersion.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableAppupdateVersion.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AppUpdateversion_upadte() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAppupdateVersion.AppUpdateversion_upadteColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'AppUpdateversion_upadte' na tabela 'AppupdateVersion' é DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableAppupdateVersion.AppUpdateversion_upadteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property observation_update() As String
            Get
                Try 
                    Return CType(Me(Me.tableAppupdateVersion.observation_updateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'observation_update' na tabela 'AppupdateVersion' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAppupdateVersion.observation_updateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAppUpdateversion_upadteNull() As Boolean
            Return Me.IsNull(Me.tableAppupdateVersion.AppUpdateversion_upadteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAppUpdateversion_upadteNull()
            Me(Me.tableAppupdateVersion.AppUpdateversion_upadteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isobservation_updateNull() As Boolean
            Return Me.IsNull(Me.tableAppupdateVersion.observation_updateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setobservation_updateNull()
            Me(Me.tableAppupdateVersion.observation_updateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class botoesEcontroles_tRow
        Inherits Global.System.Data.DataRow
        
        Private tablebotoesEcontroles_t As botoesEcontroles_tDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablebotoesEcontroles_t = CType(Me.Table,botoesEcontroles_tDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tablebotoesEcontroles_t.IDColumn),Integer)
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id_int_botoes() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.id_int_botoesColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'id_int_botoes' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.id_int_botoesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBQ0() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBQ0Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBQ0' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBQ0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBQ1() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBQ1Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBQ1' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBQ1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBQ2() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBQ2Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBQ2' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBQ2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBQ3() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBQ3Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBQ3' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBQ3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBQ4() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBQ4Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBQ4' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBQ4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBQ5() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBQ5Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBQ5' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBQ5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBQ6() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBQ6Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBQ6' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBQ6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBQ7() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBQ7Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBQ7' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBQ7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBQ8() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBQ8Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBQ8' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBQ8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBL0() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBL0Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBL0' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBL0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBL1() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBL1Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBL1' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBL2() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBL2Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBL2' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBL2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBL3() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBL3Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBL3' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBL3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBL4() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBL4Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBL4' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBL4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBL5() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBL5Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBL5' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBL5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBL6() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBL6Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBL6' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBL6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBL7() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBL7Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBL7' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBL7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BBL8() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BBL8Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BBL8' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BBL8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB01() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB01Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB01' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB02() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB02Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB02' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB11() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB11Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB11' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB21() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB21Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB21' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB22() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB22Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB22' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB23() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB23Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB23' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB31() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB31Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB31' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB31Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB32() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB32Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB32' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB32Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB41() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB41Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB41' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB41Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB51() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB51Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB51' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB51Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB52() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB52Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB52' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB52Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB61() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB61Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB61' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB61Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB71() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB71Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB71' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB71Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB72() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB72Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB72' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB72Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB73() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB73Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB73' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB73Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BB81() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablebotoesEcontroles_t.BB81Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'BB81' na tabela 'botoesEcontroles_t' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebotoesEcontroles_t.BB81Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isid_int_botoesNull() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.id_int_botoesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setid_int_botoesNull()
            Me(Me.tablebotoesEcontroles_t.id_int_botoesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBQ0Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBQ0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBQ0Null()
            Me(Me.tablebotoesEcontroles_t.BBQ0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBQ1Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBQ1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBQ1Null()
            Me(Me.tablebotoesEcontroles_t.BBQ1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBQ2Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBQ2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBQ2Null()
            Me(Me.tablebotoesEcontroles_t.BBQ2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBQ3Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBQ3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBQ3Null()
            Me(Me.tablebotoesEcontroles_t.BBQ3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBQ4Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBQ4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBQ4Null()
            Me(Me.tablebotoesEcontroles_t.BBQ4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBQ5Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBQ5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBQ5Null()
            Me(Me.tablebotoesEcontroles_t.BBQ5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBQ6Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBQ6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBQ6Null()
            Me(Me.tablebotoesEcontroles_t.BBQ6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBQ7Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBQ7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBQ7Null()
            Me(Me.tablebotoesEcontroles_t.BBQ7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBQ8Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBQ8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBQ8Null()
            Me(Me.tablebotoesEcontroles_t.BBQ8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBL0Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBL0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBL0Null()
            Me(Me.tablebotoesEcontroles_t.BBL0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBL1Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBL1Null()
            Me(Me.tablebotoesEcontroles_t.BBL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBL2Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBL2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBL2Null()
            Me(Me.tablebotoesEcontroles_t.BBL2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBL3Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBL3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBL3Null()
            Me(Me.tablebotoesEcontroles_t.BBL3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBL4Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBL4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBL4Null()
            Me(Me.tablebotoesEcontroles_t.BBL4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBL5Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBL5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBL5Null()
            Me(Me.tablebotoesEcontroles_t.BBL5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBL6Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBL6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBL6Null()
            Me(Me.tablebotoesEcontroles_t.BBL6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBL7Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBL7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBL7Null()
            Me(Me.tablebotoesEcontroles_t.BBL7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBBL8Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BBL8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBBL8Null()
            Me(Me.tablebotoesEcontroles_t.BBL8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB01Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB01Null()
            Me(Me.tablebotoesEcontroles_t.BB01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB02Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB02Null()
            Me(Me.tablebotoesEcontroles_t.BB02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB11Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB11Null()
            Me(Me.tablebotoesEcontroles_t.BB11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB21Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB21Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB21Null()
            Me(Me.tablebotoesEcontroles_t.BB21Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB22Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB22Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB22Null()
            Me(Me.tablebotoesEcontroles_t.BB22Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB23Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB23Null()
            Me(Me.tablebotoesEcontroles_t.BB23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB31Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB31Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB31Null()
            Me(Me.tablebotoesEcontroles_t.BB31Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB32Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB32Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB32Null()
            Me(Me.tablebotoesEcontroles_t.BB32Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB41Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB41Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB41Null()
            Me(Me.tablebotoesEcontroles_t.BB41Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB51Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB51Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB51Null()
            Me(Me.tablebotoesEcontroles_t.BB51Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB52Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB52Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB52Null()
            Me(Me.tablebotoesEcontroles_t.BB52Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB61Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB61Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB61Null()
            Me(Me.tablebotoesEcontroles_t.BB61Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB71Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB71Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB71Null()
            Me(Me.tablebotoesEcontroles_t.BB71Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB72Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB72Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB72Null()
            Me(Me.tablebotoesEcontroles_t.BB72Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB73Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB73Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB73Null()
            Me(Me.tablebotoesEcontroles_t.BB73Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBB81Null() As Boolean
            Return Me.IsNull(Me.tablebotoesEcontroles_t.BB81Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBB81Null()
            Me(Me.tablebotoesEcontroles_t.BB81Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class companyRow
        Inherits Global.System.Data.DataRow
        
        Private tablecompany As companyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecompany = CType(Me.Table,companyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id_company() As Integer
            Get
                Return CType(Me(Me.tablecompany.id_companyColumn),Integer)
            End Get
            Set
                Me(Me.tablecompany.id_companyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property name_company() As String
            Get
                Try 
                    Return CType(Me(Me.tablecompany.name_companyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'name_company' na tabela 'company' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.name_companyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property place_company() As String
            Get
                Try 
                    Return CType(Me(Me.tablecompany.place_companyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'place_company' na tabela 'company' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.place_companyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property active_company() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablecompany.active_companyColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'active_company' na tabela 'company' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.active_companyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property obs_company() As String
            Get
                Try 
                    Return CType(Me(Me.tablecompany.obs_companyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'obs_company' na tabela 'company' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecompany.obs_companyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isname_companyNull() As Boolean
            Return Me.IsNull(Me.tablecompany.name_companyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setname_companyNull()
            Me(Me.tablecompany.name_companyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isplace_companyNull() As Boolean
            Return Me.IsNull(Me.tablecompany.place_companyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setplace_companyNull()
            Me(Me.tablecompany.place_companyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isactive_companyNull() As Boolean
            Return Me.IsNull(Me.tablecompany.active_companyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setactive_companyNull()
            Me(Me.tablecompany.active_companyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isobs_companyNull() As Boolean
            Return Me.IsNull(Me.tablecompany.obs_companyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setobs_companyNull()
            Me(Me.tablecompany.obs_companyColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class integrantRow
        Inherits Global.System.Data.DataRow
        
        Private tableintegrant As integrantDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableintegrant = CType(Me.Table,integrantDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id_int() As Integer
            Get
                Return CType(Me(Me.tableintegrant.id_intColumn),Integer)
            End Get
            Set
                Me(Me.tableintegrant.id_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id_job_int() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.id_job_intColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'id_job_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.id_job_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id_job_CONTRATUAL_int() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.id_job_CONTRATUAL_intColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'id_job_CONTRATUAL_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.id_job_CONTRATUAL_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id_company_int() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.id_company_intColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'id_company_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.id_company_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property name_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.name_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'name_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.name_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property unidade_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.unidade_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'unidade_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.unidade_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property address_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.address_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'address_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.address_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tel_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.tel_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'tel_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.tel_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property email_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.email_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'email_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.email_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property active_int() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.active_intColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'active_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.active_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property obs_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.obs_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'obs_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.obs_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property password_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.password_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'password_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.password_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property matricula_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.matricula_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'matricula_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.matricula_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property supervisor_int() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.supervisor_intColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'supervisor_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.supervisor_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property terceirizado_int() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.terceirizado_intColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'terceirizado_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.terceirizado_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PastaLocal_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.PastaLocal_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'PastaLocal_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.PastaLocal_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fotoStr_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.fotoStr_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'fotoStr_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.fotoStr_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property passwordStr_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.passwordStr_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'passwordStr_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.passwordStr_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nivelUsuario_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.nivelUsuario_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'nivelUsuario_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.nivelUsuario_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id_perfil_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.id_perfil_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'id_perfil_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.id_perfil_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property sexo() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.sexoColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'sexo' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.sexoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nacionalidade_int() As String
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.nacionalidade_intColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'nacionalidade_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.nacionalidade_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property admin_int() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.admin_intColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'admin_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.admin_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property admissao_int() As Date
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.admissao_intColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'admissao_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.admissao_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PTWLIDER_int() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableintegrant.PTWLIDER_intColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'PTWLIDER_int' na tabela 'integrant' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableintegrant.PTWLIDER_intColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isid_job_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.id_job_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setid_job_intNull()
            Me(Me.tableintegrant.id_job_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isid_job_CONTRATUAL_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.id_job_CONTRATUAL_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setid_job_CONTRATUAL_intNull()
            Me(Me.tableintegrant.id_job_CONTRATUAL_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isid_company_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.id_company_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setid_company_intNull()
            Me(Me.tableintegrant.id_company_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isname_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.name_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setname_intNull()
            Me(Me.tableintegrant.name_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isunidade_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.unidade_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setunidade_intNull()
            Me(Me.tableintegrant.unidade_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isaddress_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.address_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setaddress_intNull()
            Me(Me.tableintegrant.address_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Istel_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.tel_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Settel_intNull()
            Me(Me.tableintegrant.tel_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isemail_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.email_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setemail_intNull()
            Me(Me.tableintegrant.email_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isactive_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.active_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setactive_intNull()
            Me(Me.tableintegrant.active_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isobs_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.obs_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setobs_intNull()
            Me(Me.tableintegrant.obs_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ispassword_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.password_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setpassword_intNull()
            Me(Me.tableintegrant.password_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ismatricula_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.matricula_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setmatricula_intNull()
            Me(Me.tableintegrant.matricula_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issupervisor_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.supervisor_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsupervisor_intNull()
            Me(Me.tableintegrant.supervisor_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isterceirizado_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.terceirizado_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setterceirizado_intNull()
            Me(Me.tableintegrant.terceirizado_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPastaLocal_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.PastaLocal_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPastaLocal_intNull()
            Me(Me.tableintegrant.PastaLocal_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsfotoStr_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.fotoStr_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetfotoStr_intNull()
            Me(Me.tableintegrant.fotoStr_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspasswordStr_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.passwordStr_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpasswordStr_intNull()
            Me(Me.tableintegrant.passwordStr_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnivelUsuario_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.nivelUsuario_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnivelUsuario_intNull()
            Me(Me.tableintegrant.nivelUsuario_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isid_perfil_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.id_perfil_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setid_perfil_intNull()
            Me(Me.tableintegrant.id_perfil_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IssexoNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.sexoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetsexoNull()
            Me(Me.tableintegrant.sexoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnacionalidade_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.nacionalidade_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnacionalidade_intNull()
            Me(Me.tableintegrant.nacionalidade_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isadmin_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.admin_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setadmin_intNull()
            Me(Me.tableintegrant.admin_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isadmissao_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.admissao_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setadmissao_intNull()
            Me(Me.tableintegrant.admissao_intColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPTWLIDER_intNull() As Boolean
            Return Me.IsNull(Me.tableintegrant.PTWLIDER_intColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPTWLIDER_intNull()
            Me(Me.tableintegrant.PTWLIDER_intColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class jobRow
        Inherits Global.System.Data.DataRow
        
        Private tablejob As jobDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablejob = CType(Me.Table,jobDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id_job() As Integer
            Get
                Return CType(Me(Me.tablejob.id_jobColumn),Integer)
            End Get
            Set
                Me(Me.tablejob.id_jobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property job() As String
            Get
                Try 
                    Return CType(Me(Me.tablejob.jobColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'job' na tabela 'job' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablejob.jobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property dept_job() As String
            Get
                Try 
                    Return CType(Me(Me.tablejob.dept_jobColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'dept_job' na tabela 'job' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablejob.dept_jobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsjobNull() As Boolean
            Return Me.IsNull(Me.tablejob.jobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetjobNull()
            Me(Me.tablejob.jobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isdept_jobNull() As Boolean
            Return Me.IsNull(Me.tablejob.dept_jobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setdept_jobNull()
            Me(Me.tablejob.dept_jobColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PTcloseRow
        Inherits Global.System.Data.DataRow
        
        Private tablePTclose As PTcloseDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePTclose = CType(Me.Table,PTcloseDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tablePTclose.IDColumn),Integer)
            End Get
            Set
                Me(Me.tablePTclose.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MOTIVO_close() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTclose.MOTIVO_closeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'MOTIVO_close' na tabela 'PTclose' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTclose.MOTIVO_closeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PTWnum_close() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTclose.PTWnum_closeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'PTWnum_close' na tabela 'PTclose' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTclose.PTWnum_closeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ISSUER_close() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTclose.ISSUER_closeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ISSUER_close' na tabela 'PTclose' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTclose.ISSUER_closeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LIDER_close() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTclose.LIDER_closeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LIDER_close' na tabela 'PTclose' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTclose.LIDER_closeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LIBERADOR_close() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTclose.LIBERADOR_closeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LIBERADOR_close' na tabela 'PTclose' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTclose.LIBERADOR_closeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SAFETY_close() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTclose.SAFETY_closeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SAFETY_close' na tabela 'PTclose' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTclose.SAFETY_closeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ADMIN_close() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTclose.ADMIN_closeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ADMIN_close' na tabela 'PTclose' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTclose.ADMIN_closeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OIM_close() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTclose.OIM_closeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'OIM_close' na tabela 'PTclose' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTclose.OIM_closeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ALL_close() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTclose.ALL_closeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ALL_close' na tabela 'PTclose' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTclose.ALL_closeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMOTIVO_closeNull() As Boolean
            Return Me.IsNull(Me.tablePTclose.MOTIVO_closeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMOTIVO_closeNull()
            Me(Me.tablePTclose.MOTIVO_closeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPTWnum_closeNull() As Boolean
            Return Me.IsNull(Me.tablePTclose.PTWnum_closeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPTWnum_closeNull()
            Me(Me.tablePTclose.PTWnum_closeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsISSUER_closeNull() As Boolean
            Return Me.IsNull(Me.tablePTclose.ISSUER_closeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetISSUER_closeNull()
            Me(Me.tablePTclose.ISSUER_closeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLIDER_closeNull() As Boolean
            Return Me.IsNull(Me.tablePTclose.LIDER_closeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLIDER_closeNull()
            Me(Me.tablePTclose.LIDER_closeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLIBERADOR_closeNull() As Boolean
            Return Me.IsNull(Me.tablePTclose.LIBERADOR_closeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLIBERADOR_closeNull()
            Me(Me.tablePTclose.LIBERADOR_closeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSAFETY_closeNull() As Boolean
            Return Me.IsNull(Me.tablePTclose.SAFETY_closeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSAFETY_closeNull()
            Me(Me.tablePTclose.SAFETY_closeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsADMIN_closeNull() As Boolean
            Return Me.IsNull(Me.tablePTclose.ADMIN_closeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetADMIN_closeNull()
            Me(Me.tablePTclose.ADMIN_closeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOIM_closeNull() As Boolean
            Return Me.IsNull(Me.tablePTclose.OIM_closeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOIM_closeNull()
            Me(Me.tablePTclose.OIM_closeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsALL_closeNull() As Boolean
            Return Me.IsNull(Me.tablePTclose.ALL_closeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetALL_closeNull()
            Me(Me.tablePTclose.ALL_closeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PTopenRow
        Inherits Global.System.Data.DataRow
        
        Private tablePTopen As PTopenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePTopen = CType(Me.Table,PTopenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tablePTopen.IDColumn),Integer)
            End Get
            Set
                Me(Me.tablePTopen.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property STATUS_ptw() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.STATUS_ptwColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'STATUS_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.STATUS_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NUM_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.NUM_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'NUM_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.NUM_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DATA_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.DATA_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DATA_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.DATA_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIME_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.TIME_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'TIME_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.TIME_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DESC_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.DESC_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DESC_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.DESC_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HOT_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.HOT_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'HOT_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.HOT_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LOCAL_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.LOCAL_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LOCAL_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.LOCAL_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LOTOck_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.LOTOck_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LOTOck_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.LOTOck_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LOTOnum_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.LOTOnum_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LOTOnum_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.LOTOnum_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ATVsim_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.ATVsim_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ATVsim_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.ATVsim_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RISCOSad_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.RISCOSad_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'RISCOSad_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.RISCOSad_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MOCck_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.MOCck_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'MOCck_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.MOCck_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MOCnm_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.MOCnm_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'MOCnm_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.MOCnm_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EPI_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EPI_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EPI_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EPI_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RECad_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.RECad_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'RECad_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.RECad_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property APRIck_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.APRIck_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'APRIck_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.APRIck_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property APRInum_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.APRInum_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'APRInum_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.APRInum_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CARGAcritCK_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.CARGAcritCK_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CARGAcritCK_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.CARGAcritCK_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LISTAobCK_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.LISTAobCK_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LISTAobCK_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.LISTAobCK_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FLUIDOck_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.FLUIDOck_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'FLUIDOck_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.FLUIDOck_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CESTOck_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.CESTOck_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CESTOck_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.CESTOck_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GUINCHOck_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.GUINCHOck_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'GUINCHOck_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.GUINCHOck_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OUTROS_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.OUTROS_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'OUTROS_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.OUTROS_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TESTEck_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.TESTEck_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'TESTEck_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.TESTEck_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DATEtest_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.DATEtest_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DATEtest_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.DATEtest_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIMEtest_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.TIMEtest_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'TIMEtest_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.TIMEtest_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property O2_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.O2_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'O2_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.O2_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HC_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.HC_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'HC_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.HC_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property H2Sppm_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.H2Sppm_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'H2Sppm_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.H2Sppm_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CO_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.CO_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CO_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.CO_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CO2_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.CO2_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CO2_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.CO2_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CHECKEDby_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.CHECKEDby_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CHECKEDby_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.CHECKEDby_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SNdet_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SNdet_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SNdet_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SNdet_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXAUSTAOck_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXAUSTAOck_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXAUSTAOck_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXAUSTAOck_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DATEexaust_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.DATEexaust_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'DATEexaust_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.DATEexaust_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIMEexaust_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.TIMEexaust_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'TIMEexaust_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.TIMEexaust_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property O2_2_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.O2_2_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'O2_2_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.O2_2_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HC_2_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.HC_2_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'HC_2_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.HC_2_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property H2S_2ppm_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.H2S_2ppm_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'H2S_2ppm_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.H2S_2ppm_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CO_2_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.CO_2_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CO_2_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.CO_2_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CO2_2_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.CO2_2_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CO2_2_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.CO2_2_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CHECKEDby_2_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.CHECKEDby_2_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CHECKEDby_2_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.CHECKEDby_2_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SNdet_2_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SNdet_2_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SNdet_2_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SNdet_2_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CRITck_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.CRITck_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'CRITck_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.CRITck_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OUTofOPck_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.OUTofOPck_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'OUTofOPck_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.OUTofOPck_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OUTofOPnom_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.OUTofOPnom_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'OUTofOPnom_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.OUTofOPnom_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SENSORinCK_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SENSORinCK_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SENSORinCK_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SENSORinCK_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SENSORregCK_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SENSORregCK_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SENSORregCK_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SENSORregCK_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PLANOresgCK_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.PLANOresgCK_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'PLANOresgCK_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.PLANOresgCK_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EQUIPEcomCK_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EQUIPEcomCK_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EQUIPEcomCK_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EQUIPEcomCK_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property INTERCOMck_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.INTERCOMck_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'INTERCOMck_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.INTERCOMck_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PESSOALck() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.PESSOALckColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'PESSOALck' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.PESSOALckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUSPmot_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUSPmot_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUSPmot_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUSPmot_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUSPpor_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUSPpor_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUSPpor_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUSPpor_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUSPdate_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUSPdate_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUSPdate_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUSPdate_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUSPtime() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUSPtimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUSPtime' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUSPtimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property REATIVpor_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.REATIVpor_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'REATIVpor_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.REATIVpor_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property REATIVseg_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.REATIVseg_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'REATIVseg_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.REATIVseg_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property REATIVdate_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.REATIVdate_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'REATIVdate_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.REATIVdate_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property REATIVtime_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.REATIVtime_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'REATIVtime_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.REATIVtime_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ISSUER_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.ISSUER_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ISSUER_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.ISSUER_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPERVISOR_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPERVISOR_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPERVISOR_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPERVISOR_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPERVISOR_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPERVISOR_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPERVISOR_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPERVISOR_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE01_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE01_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE01_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE01_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE02_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE02_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE02_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE02_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE03_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE03_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE03_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE03_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE04_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE04_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE04_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE04_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE05_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE05_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE05_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE05_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE06_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE06_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE06_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE06_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE07_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE07_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE07_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE07_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE01_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE01_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE01_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE01_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE02_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE02_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE02_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE02_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE03_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE03_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE03_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE03_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE04_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE04_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE04_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE04_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE05_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE05_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE05_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE05_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE06_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE06_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE06_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE06_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EXECUTANTE07_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.EXECUTANTE07_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'EXECUTANTE07_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.EXECUTANTE07_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LIDER_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.LIDER_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LIDER_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.LIDER_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LIDER_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.LIDER_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LIDER_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.LIDER_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LIDERdpt_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.LIDERdpt_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LIDERdpt_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.LIDERdpt_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LIBERADOR_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.LIBERADOR_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LIBERADOR_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.LIBERADOR_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LIBERADOR_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.LIBERADOR_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LIBERADOR_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.LIBERADOR_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OBSHOT01_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.OBSHOT01_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'OBSHOT01_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.OBSHOT01_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OBSHOT01_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.OBSHOT01_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'OBSHOT01_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.OBSHOT01_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OBSHOT02_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.OBSHOT02_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'OBSHOT02_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.OBSHOT02_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OBSHOT02_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.OBSHOT02_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'OBSHOT02_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.OBSHOT02_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VIGIA01_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.VIGIA01_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VIGIA01_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.VIGIA01_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VIGIA01_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.VIGIA01_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VIGIA01_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.VIGIA01_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VIGIA02_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.VIGIA02_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VIGIA02_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.VIGIA02_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VIGIA02_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.VIGIA02_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'VIGIA02_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.VIGIA02_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SAFETY_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SAFETY_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SAFETY_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SAFETY_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SAFETY_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SAFETY_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SAFETY_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SAFETY_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OIM_ptW() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.OIM_ptWColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'OIM_ptW' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.OIM_ptWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OIM_R_ptW() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.OIM_R_ptWColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'OIM_R_ptW' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.OIM_R_ptWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ADMIN_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.ADMIN_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ADMIN_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.ADMIN_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ADMIN_R_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.ADMIN_R_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ADMIN_R_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.ADMIN_R_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ISSUERok_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.ISSUERok_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ISSUERok_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.ISSUERok_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LIDERok_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.LIDERok_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LIDERok_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.LIDERok_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LIBERADORok_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.LIBERADORok_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'LIBERADORok_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.LIBERADORok_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SAFETYok_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SAFETYok_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SAFETYok_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SAFETYok_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OIMok_ptW() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.OIMok_ptWColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'OIMok_ptW' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.OIMok_ptWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ADMINok_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.ADMINok_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ADMINok_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.ADMINok_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPreq_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPreq_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPreq_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPreq_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPtipC_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPtipC_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPtipC_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPtipC_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPtipP_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPtipP_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPtipP_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPtipP_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPtipN_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPtipN_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPtipN_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPtipN_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPperiodo01x_PTW() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPperiodo01x_PTWColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPperiodo01x_PTW' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPperiodo01x_PTWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPperiodo02x_PTW() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPperiodo02x_PTWColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPperiodo02x_PTW' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPperiodo02x_PTWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPperiodo03x_PTW() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPperiodo03x_PTWColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPperiodo03x_PTW' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPperiodo03x_PTWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPwho01_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPwho01_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPwho01_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPwho01_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPwho02_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPwho02_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPwho02_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPwho02_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPwho03_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPwho03_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPwho03_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPwho03_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPdate01_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPdate01_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPdate01_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPdate01_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPdate02_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPdate02_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPdate02_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPdate02_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPdate03_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPdate03_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPdate03_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPdate03_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPtime01_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPtime01_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPtime01_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPtime01_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPtime02_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPtime02_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPtime02_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPtime02_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SUPtime03_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.SUPtime03_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'SUPtime03_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.SUPtime03_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property impedimentoOBS_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.impedimentoOBS_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'impedimentoOBS_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.impedimentoOBS_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ISSUERtxt_ptw() As String
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.ISSUERtxt_ptwColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'ISSUERtxt_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.ISSUERtxt_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fISSUER_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.fISSUER_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'fISSUER_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.fISSUER_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fISSUERdata_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.fISSUERdata_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'fISSUERdata_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.fISSUERdata_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fISSUERtime_ptw() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.fISSUERtime_ptwColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'fISSUERtime_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.fISSUERtime_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fLIDER_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.fLIDER_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'fLIDER_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.fLIDER_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fLIBERADOR_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.fLIBERADOR_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'fLIBERADOR_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.fLIBERADOR_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fSAFETY_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.fSAFETY_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'fSAFETY_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.fSAFETY_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fOIM_ptW() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.fOIM_ptWColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'fOIM_ptW' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.fOIM_ptWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fADMIN_ptw() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.fADMIN_ptwColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'fADMIN_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.fADMIN_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fckTrab_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.fckTrab_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'fckTrab_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.fckTrab_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fckTurno_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.fckTurno_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'fckTurno_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.fckTurno_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fckCancel_ptw() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePTopen.fckCancel_ptwColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("O valor da coluna 'fckCancel_ptw' na tabela 'PTopen' é DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePTopen.fckCancel_ptwColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSTATUS_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.STATUS_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSTATUS_ptwNull()
            Me(Me.tablePTopen.STATUS_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNUM_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.NUM_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNUM_ptwNull()
            Me(Me.tablePTopen.NUM_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDATA_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.DATA_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDATA_ptwNull()
            Me(Me.tablePTopen.DATA_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTIME_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.TIME_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTIME_ptwNull()
            Me(Me.tablePTopen.TIME_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDESC_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.DESC_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDESC_ptwNull()
            Me(Me.tablePTopen.DESC_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHOT_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.HOT_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHOT_ptwNull()
            Me(Me.tablePTopen.HOT_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLOCAL_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.LOCAL_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLOCAL_ptwNull()
            Me(Me.tablePTopen.LOCAL_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLOTOck_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.LOTOck_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLOTOck_ptwNull()
            Me(Me.tablePTopen.LOTOck_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLOTOnum_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.LOTOnum_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLOTOnum_ptwNull()
            Me(Me.tablePTopen.LOTOnum_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsATVsim_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.ATVsim_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetATVsim_ptwNull()
            Me(Me.tablePTopen.ATVsim_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRISCOSad_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.RISCOSad_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRISCOSad_ptwNull()
            Me(Me.tablePTopen.RISCOSad_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMOCck_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.MOCck_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMOCck_ptwNull()
            Me(Me.tablePTopen.MOCck_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMOCnm_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.MOCnm_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMOCnm_ptwNull()
            Me(Me.tablePTopen.MOCnm_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEPI_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EPI_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEPI_ptwNull()
            Me(Me.tablePTopen.EPI_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRECad_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.RECad_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRECad_ptwNull()
            Me(Me.tablePTopen.RECad_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAPRIck_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.APRIck_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAPRIck_ptwNull()
            Me(Me.tablePTopen.APRIck_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAPRInum_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.APRInum_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAPRInum_ptwNull()
            Me(Me.tablePTopen.APRInum_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCARGAcritCK_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.CARGAcritCK_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCARGAcritCK_ptwNull()
            Me(Me.tablePTopen.CARGAcritCK_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLISTAobCK_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.LISTAobCK_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLISTAobCK_ptwNull()
            Me(Me.tablePTopen.LISTAobCK_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFLUIDOck_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.FLUIDOck_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFLUIDOck_ptwNull()
            Me(Me.tablePTopen.FLUIDOck_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCESTOck_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.CESTOck_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCESTOck_ptwNull()
            Me(Me.tablePTopen.CESTOck_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGUINCHOck_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.GUINCHOck_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGUINCHOck_ptwNull()
            Me(Me.tablePTopen.GUINCHOck_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOUTROS_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.OUTROS_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOUTROS_ptwNull()
            Me(Me.tablePTopen.OUTROS_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTESTEck_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.TESTEck_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTESTEck_ptwNull()
            Me(Me.tablePTopen.TESTEck_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDATEtest_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.DATEtest_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDATEtest_ptwNull()
            Me(Me.tablePTopen.DATEtest_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTIMEtest_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.TIMEtest_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTIMEtest_ptwNull()
            Me(Me.tablePTopen.TIMEtest_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsO2_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.O2_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetO2_ptwNull()
            Me(Me.tablePTopen.O2_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHC_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.HC_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHC_ptwNull()
            Me(Me.tablePTopen.HC_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsH2Sppm_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.H2Sppm_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetH2Sppm_ptwNull()
            Me(Me.tablePTopen.H2Sppm_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCO_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.CO_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCO_ptwNull()
            Me(Me.tablePTopen.CO_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCO2_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.CO2_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCO2_ptwNull()
            Me(Me.tablePTopen.CO2_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCHECKEDby_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.CHECKEDby_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCHECKEDby_ptwNull()
            Me(Me.tablePTopen.CHECKEDby_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSNdet_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SNdet_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSNdet_ptwNull()
            Me(Me.tablePTopen.SNdet_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXAUSTAOck_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXAUSTAOck_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXAUSTAOck_ptwNull()
            Me(Me.tablePTopen.EXAUSTAOck_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDATEexaust_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.DATEexaust_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDATEexaust_ptwNull()
            Me(Me.tablePTopen.DATEexaust_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTIMEexaust_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.TIMEexaust_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTIMEexaust_ptwNull()
            Me(Me.tablePTopen.TIMEexaust_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsO2_2_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.O2_2_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetO2_2_ptwNull()
            Me(Me.tablePTopen.O2_2_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHC_2_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.HC_2_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHC_2_ptwNull()
            Me(Me.tablePTopen.HC_2_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsH2S_2ppm_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.H2S_2ppm_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetH2S_2ppm_ptwNull()
            Me(Me.tablePTopen.H2S_2ppm_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCO_2_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.CO_2_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCO_2_ptwNull()
            Me(Me.tablePTopen.CO_2_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCO2_2_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.CO2_2_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCO2_2_ptwNull()
            Me(Me.tablePTopen.CO2_2_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCHECKEDby_2_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.CHECKEDby_2_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCHECKEDby_2_ptwNull()
            Me(Me.tablePTopen.CHECKEDby_2_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSNdet_2_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SNdet_2_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSNdet_2_ptwNull()
            Me(Me.tablePTopen.SNdet_2_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCRITck_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.CRITck_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCRITck_ptwNull()
            Me(Me.tablePTopen.CRITck_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOUTofOPck_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.OUTofOPck_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOUTofOPck_ptwNull()
            Me(Me.tablePTopen.OUTofOPck_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOUTofOPnom_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.OUTofOPnom_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOUTofOPnom_ptwNull()
            Me(Me.tablePTopen.OUTofOPnom_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSENSORinCK_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SENSORinCK_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSENSORinCK_ptwNull()
            Me(Me.tablePTopen.SENSORinCK_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSENSORregCK_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SENSORregCK_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSENSORregCK_ptwNull()
            Me(Me.tablePTopen.SENSORregCK_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPLANOresgCK_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.PLANOresgCK_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPLANOresgCK_ptwNull()
            Me(Me.tablePTopen.PLANOresgCK_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEQUIPEcomCK_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EQUIPEcomCK_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEQUIPEcomCK_ptwNull()
            Me(Me.tablePTopen.EQUIPEcomCK_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsINTERCOMck_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.INTERCOMck_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetINTERCOMck_ptwNull()
            Me(Me.tablePTopen.INTERCOMck_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPESSOALckNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.PESSOALckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPESSOALckNull()
            Me(Me.tablePTopen.PESSOALckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUSPmot_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUSPmot_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUSPmot_ptwNull()
            Me(Me.tablePTopen.SUSPmot_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUSPpor_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUSPpor_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUSPpor_ptwNull()
            Me(Me.tablePTopen.SUSPpor_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUSPdate_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUSPdate_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUSPdate_ptwNull()
            Me(Me.tablePTopen.SUSPdate_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUSPtimeNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUSPtimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUSPtimeNull()
            Me(Me.tablePTopen.SUSPtimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsREATIVpor_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.REATIVpor_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetREATIVpor_ptwNull()
            Me(Me.tablePTopen.REATIVpor_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsREATIVseg_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.REATIVseg_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetREATIVseg_ptwNull()
            Me(Me.tablePTopen.REATIVseg_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsREATIVdate_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.REATIVdate_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetREATIVdate_ptwNull()
            Me(Me.tablePTopen.REATIVdate_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsREATIVtime_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.REATIVtime_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetREATIVtime_ptwNull()
            Me(Me.tablePTopen.REATIVtime_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsISSUER_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.ISSUER_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetISSUER_ptwNull()
            Me(Me.tablePTopen.ISSUER_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPERVISOR_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPERVISOR_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPERVISOR_ptwNull()
            Me(Me.tablePTopen.SUPERVISOR_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPERVISOR_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPERVISOR_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPERVISOR_R_ptwNull()
            Me(Me.tablePTopen.SUPERVISOR_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE01_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE01_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE01_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE01_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE02_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE02_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE02_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE02_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE03_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE03_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE03_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE03_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE04_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE04_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE04_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE04_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE05_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE05_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE05_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE05_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE06_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE06_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE06_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE06_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE07_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE07_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE07_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE07_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE01_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE01_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE01_R_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE01_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE02_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE02_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE02_R_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE02_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE03_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE03_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE03_R_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE03_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE04_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE04_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE04_R_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE04_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE05_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE05_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE05_R_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE05_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE06_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE06_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE06_R_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE06_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEXECUTANTE07_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.EXECUTANTE07_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEXECUTANTE07_R_ptwNull()
            Me(Me.tablePTopen.EXECUTANTE07_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLIDER_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.LIDER_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLIDER_ptwNull()
            Me(Me.tablePTopen.LIDER_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLIDER_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.LIDER_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLIDER_R_ptwNull()
            Me(Me.tablePTopen.LIDER_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLIDERdpt_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.LIDERdpt_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLIDERdpt_ptwNull()
            Me(Me.tablePTopen.LIDERdpt_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLIBERADOR_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.LIBERADOR_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLIBERADOR_ptwNull()
            Me(Me.tablePTopen.LIBERADOR_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLIBERADOR_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.LIBERADOR_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLIBERADOR_R_ptwNull()
            Me(Me.tablePTopen.LIBERADOR_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOBSHOT01_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.OBSHOT01_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOBSHOT01_ptwNull()
            Me(Me.tablePTopen.OBSHOT01_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOBSHOT01_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.OBSHOT01_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOBSHOT01_R_ptwNull()
            Me(Me.tablePTopen.OBSHOT01_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOBSHOT02_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.OBSHOT02_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOBSHOT02_ptwNull()
            Me(Me.tablePTopen.OBSHOT02_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOBSHOT02_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.OBSHOT02_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOBSHOT02_R_ptwNull()
            Me(Me.tablePTopen.OBSHOT02_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVIGIA01_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.VIGIA01_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVIGIA01_ptwNull()
            Me(Me.tablePTopen.VIGIA01_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVIGIA01_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.VIGIA01_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVIGIA01_R_ptwNull()
            Me(Me.tablePTopen.VIGIA01_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVIGIA02_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.VIGIA02_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVIGIA02_ptwNull()
            Me(Me.tablePTopen.VIGIA02_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVIGIA02_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.VIGIA02_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVIGIA02_R_ptwNull()
            Me(Me.tablePTopen.VIGIA02_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSAFETY_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SAFETY_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSAFETY_ptwNull()
            Me(Me.tablePTopen.SAFETY_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSAFETY_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SAFETY_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSAFETY_R_ptwNull()
            Me(Me.tablePTopen.SAFETY_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOIM_ptWNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.OIM_ptWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOIM_ptWNull()
            Me(Me.tablePTopen.OIM_ptWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOIM_R_ptWNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.OIM_R_ptWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOIM_R_ptWNull()
            Me(Me.tablePTopen.OIM_R_ptWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsADMIN_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.ADMIN_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetADMIN_ptwNull()
            Me(Me.tablePTopen.ADMIN_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsADMIN_R_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.ADMIN_R_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetADMIN_R_ptwNull()
            Me(Me.tablePTopen.ADMIN_R_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsISSUERok_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.ISSUERok_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetISSUERok_ptwNull()
            Me(Me.tablePTopen.ISSUERok_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLIDERok_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.LIDERok_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLIDERok_ptwNull()
            Me(Me.tablePTopen.LIDERok_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLIBERADORok_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.LIBERADORok_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLIBERADORok_ptwNull()
            Me(Me.tablePTopen.LIBERADORok_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSAFETYok_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SAFETYok_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSAFETYok_ptwNull()
            Me(Me.tablePTopen.SAFETYok_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOIMok_ptWNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.OIMok_ptWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOIMok_ptWNull()
            Me(Me.tablePTopen.OIMok_ptWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsADMINok_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.ADMINok_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetADMINok_ptwNull()
            Me(Me.tablePTopen.ADMINok_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPreq_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPreq_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPreq_ptwNull()
            Me(Me.tablePTopen.SUPreq_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPtipC_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPtipC_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPtipC_ptwNull()
            Me(Me.tablePTopen.SUPtipC_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPtipP_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPtipP_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPtipP_ptwNull()
            Me(Me.tablePTopen.SUPtipP_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPtipN_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPtipN_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPtipN_ptwNull()
            Me(Me.tablePTopen.SUPtipN_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPperiodo01x_PTWNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPperiodo01x_PTWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPperiodo01x_PTWNull()
            Me(Me.tablePTopen.SUPperiodo01x_PTWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPperiodo02x_PTWNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPperiodo02x_PTWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPperiodo02x_PTWNull()
            Me(Me.tablePTopen.SUPperiodo02x_PTWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPperiodo03x_PTWNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPperiodo03x_PTWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPperiodo03x_PTWNull()
            Me(Me.tablePTopen.SUPperiodo03x_PTWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPwho01_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPwho01_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPwho01_ptwNull()
            Me(Me.tablePTopen.SUPwho01_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPwho02_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPwho02_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPwho02_ptwNull()
            Me(Me.tablePTopen.SUPwho02_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPwho03_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPwho03_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPwho03_ptwNull()
            Me(Me.tablePTopen.SUPwho03_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPdate01_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPdate01_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPdate01_ptwNull()
            Me(Me.tablePTopen.SUPdate01_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPdate02_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPdate02_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPdate02_ptwNull()
            Me(Me.tablePTopen.SUPdate02_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPdate03_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPdate03_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPdate03_ptwNull()
            Me(Me.tablePTopen.SUPdate03_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPtime01_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPtime01_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPtime01_ptwNull()
            Me(Me.tablePTopen.SUPtime01_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPtime02_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPtime02_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPtime02_ptwNull()
            Me(Me.tablePTopen.SUPtime02_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSUPtime03_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.SUPtime03_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSUPtime03_ptwNull()
            Me(Me.tablePTopen.SUPtime03_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsimpedimentoOBS_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.impedimentoOBS_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetimpedimentoOBS_ptwNull()
            Me(Me.tablePTopen.impedimentoOBS_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsISSUERtxt_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.ISSUERtxt_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetISSUERtxt_ptwNull()
            Me(Me.tablePTopen.ISSUERtxt_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsfISSUER_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.fISSUER_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetfISSUER_ptwNull()
            Me(Me.tablePTopen.fISSUER_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsfISSUERdata_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.fISSUERdata_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetfISSUERdata_ptwNull()
            Me(Me.tablePTopen.fISSUERdata_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsfISSUERtime_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.fISSUERtime_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetfISSUERtime_ptwNull()
            Me(Me.tablePTopen.fISSUERtime_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsfLIDER_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.fLIDER_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetfLIDER_ptwNull()
            Me(Me.tablePTopen.fLIDER_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsfLIBERADOR_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.fLIBERADOR_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetfLIBERADOR_ptwNull()
            Me(Me.tablePTopen.fLIBERADOR_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsfSAFETY_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.fSAFETY_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetfSAFETY_ptwNull()
            Me(Me.tablePTopen.fSAFETY_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsfOIM_ptWNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.fOIM_ptWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetfOIM_ptWNull()
            Me(Me.tablePTopen.fOIM_ptWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsfADMIN_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.fADMIN_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetfADMIN_ptwNull()
            Me(Me.tablePTopen.fADMIN_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsfckTrab_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.fckTrab_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetfckTrab_ptwNull()
            Me(Me.tablePTopen.fckTrab_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsfckTurno_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.fckTurno_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetfckTurno_ptwNull()
            Me(Me.tablePTopen.fckTurno_ptwColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsfckCancel_ptwNull() As Boolean
            Return Me.IsNull(Me.tablePTopen.fckCancel_ptwColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetfckCancel_ptwNull()
            Me(Me.tablePTopen.fckCancel_ptwColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class AppConstantRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AppConstantRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As AppConstantRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As AppConstantRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class AppupdateVersionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AppupdateVersionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As AppupdateVersionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As AppupdateVersionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class botoesEcontroles_tRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As botoesEcontroles_tRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As botoesEcontroles_tRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As botoesEcontroles_tRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class companyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As companyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As companyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As companyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class integrantRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As integrantRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As integrantRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As integrantRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class jobRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As jobRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As jobRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As jobRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class PTcloseRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PTcloseRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As PTcloseRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As PTcloseRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class PTopenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PTopenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As PTopenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As PTopenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace PTW_DB_BackupDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AppConstantTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "AppConstant"
            tableMapping.ColumnMappings.Add("id_app", "id_app")
            tableMapping.ColumnMappings.Add("Name_app", "Name_app")
            tableMapping.ColumnMappings.Add("NumAPPe_app", "NumAPPe_app")
            tableMapping.ColumnMappings.Add("onOff_app", "onOff_app")
            tableMapping.ColumnMappings.Add("Cath_app", "Cath_app")
            tableMapping.ColumnMappings.Add("version_app", "version_app")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `AppConstant` WHERE ((`id_app` = ?) AND ((? = 1 AND `Name_app` IS NUL"& _ 
                "L) OR (`Name_app` = ?)) AND ((? = 1 AND `NumAPPe_app` IS NULL) OR (`NumAPPe_app`"& _ 
                " = ?)) AND ((? = 1 AND `onOff_app` IS NULL) OR (`onOff_app` = ?)) AND ((? = 1 AN"& _ 
                "D `Cath_app` IS NULL) OR (`Cath_app` = ?)) AND ((? = 1 AND `version_app` IS NULL"& _ 
                ") OR (`version_app` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_app", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Name_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Name_app", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Name_app", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Name_app", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NumAPPe_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NumAPPe_app", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NumAPPe_app", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NumAPPe_app", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_onOff_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "onOff_app", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_onOff_app", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "onOff_app", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Cath_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Cath_app", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Cath_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Cath_app", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_version_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "version_app", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_version_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "version_app", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `AppConstant` (`Name_app`, `NumAPPe_app`, `onOff_app`, `Cath_app`, `v"& _ 
                "ersion_app`) VALUES (?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Name_app", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Name_app", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NumAPPe_app", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NumAPPe_app", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("onOff_app", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "onOff_app", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Cath_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Cath_app", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("version_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "version_app", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `AppConstant` SET `Name_app` = ?, `NumAPPe_app` = ?, `onOff_app` = ?, `Cat"& _ 
                "h_app` = ?, `version_app` = ? WHERE ((`id_app` = ?) AND ((? = 1 AND `Name_app` I"& _ 
                "S NULL) OR (`Name_app` = ?)) AND ((? = 1 AND `NumAPPe_app` IS NULL) OR (`NumAPPe"& _ 
                "_app` = ?)) AND ((? = 1 AND `onOff_app` IS NULL) OR (`onOff_app` = ?)) AND ((? ="& _ 
                " 1 AND `Cath_app` IS NULL) OR (`Cath_app` = ?)) AND ((? = 1 AND `version_app` IS"& _ 
                " NULL) OR (`version_app` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Name_app", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Name_app", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NumAPPe_app", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NumAPPe_app", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("onOff_app", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "onOff_app", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Cath_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Cath_app", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("version_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "version_app", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_app", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Name_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Name_app", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Name_app", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Name_app", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NumAPPe_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NumAPPe_app", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NumAPPe_app", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NumAPPe_app", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_onOff_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "onOff_app", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_onOff_app", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "onOff_app", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Cath_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Cath_app", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Cath_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Cath_app", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_version_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "version_app", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_version_app", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "version_app", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MyfirstApp.My.MySettings.Default.PTW_DB_BackupConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT id_app, Name_app, NumAPPe_app, onOff_app, Cath_app, version_app FROM AppCo"& _ 
                "nstant"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PTW_DB_BackupDataSet.AppConstantDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PTW_DB_BackupDataSet.AppConstantDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PTW_DB_BackupDataSet.AppConstantDataTable = New PTW_DB_BackupDataSet.AppConstantDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PTW_DB_BackupDataSet.AppConstantDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PTW_DB_BackupDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "AppConstant")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_id_app As Integer, ByVal Original_Name_app As String, ByVal Original_NumAPPe_app As Global.System.Nullable(Of Double), ByVal Original_onOff_app As Boolean, ByVal Original_Cath_app As Global.System.Nullable(Of Integer), ByVal Original_version_app As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_id_app,Integer)
            If (Original_Name_app Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Name_app,String)
            End If
            If (Original_NumAPPe_app.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_NumAPPe_app.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_onOff_app,Boolean)
            If (Original_Cath_app.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Cath_app.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_version_app.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_version_app.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Name_app As String, ByVal NumAPPe_app As Global.System.Nullable(Of Double), ByVal onOff_app As Boolean, ByVal Cath_app As Global.System.Nullable(Of Integer), ByVal version_app As Global.System.Nullable(Of Integer)) As Integer
            If (Name_app Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Name_app,String)
            End If
            If (NumAPPe_app.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NumAPPe_app.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(onOff_app,Boolean)
            If (Cath_app.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Cath_app.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (version_app.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(version_app.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Name_app As String, ByVal NumAPPe_app As Global.System.Nullable(Of Double), ByVal onOff_app As Boolean, ByVal Cath_app As Global.System.Nullable(Of Integer), ByVal version_app As Global.System.Nullable(Of Integer), ByVal Original_id_app As Integer, ByVal Original_Name_app As String, ByVal Original_NumAPPe_app As Global.System.Nullable(Of Double), ByVal Original_onOff_app As Boolean, ByVal Original_Cath_app As Global.System.Nullable(Of Integer), ByVal Original_version_app As Global.System.Nullable(Of Integer)) As Integer
            If (Name_app Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Name_app,String)
            End If
            If (NumAPPe_app.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NumAPPe_app.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(onOff_app,Boolean)
            If (Cath_app.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Cath_app.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (version_app.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(version_app.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_id_app,Integer)
            If (Original_Name_app Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Name_app,String)
            End If
            If (Original_NumAPPe_app.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_NumAPPe_app.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_onOff_app,Boolean)
            If (Original_Cath_app.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Cath_app.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_version_app.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_version_app.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AppupdateVersionTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "AppupdateVersion"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("AppUpdateversion_upadte", "AppUpdateversion_upadte")
            tableMapping.ColumnMappings.Add("observation_update", "observation_update")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `AppupdateVersion` WHERE ((`ID` = ?) AND ((? = 1 AND `AppUpdateversio"& _ 
                "n_upadte` IS NULL) OR (`AppUpdateversion_upadte` = ?)) AND ((? = 1 AND `observat"& _ 
                "ion_update` IS NULL) OR (`observation_update` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_AppUpdateversion_upadte", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AppUpdateversion_upadte", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_AppUpdateversion_upadte", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AppUpdateversion_upadte", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_observation_update", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "observation_update", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_observation_update", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "observation_update", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `AppupdateVersion` (`AppUpdateversion_upadte`, `observation_update`) "& _ 
                "VALUES (?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("AppUpdateversion_upadte", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AppUpdateversion_upadte", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("observation_update", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "observation_update", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `AppupdateVersion` SET `AppUpdateversion_upadte` = ?, `observation_update`"& _ 
                " = ? WHERE ((`ID` = ?) AND ((? = 1 AND `AppUpdateversion_upadte` IS NULL) OR (`A"& _ 
                "ppUpdateversion_upadte` = ?)) AND ((? = 1 AND `observation_update` IS NULL) OR ("& _ 
                "`observation_update` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("AppUpdateversion_upadte", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AppUpdateversion_upadte", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("observation_update", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "observation_update", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_AppUpdateversion_upadte", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AppUpdateversion_upadte", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_AppUpdateversion_upadte", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AppUpdateversion_upadte", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_observation_update", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "observation_update", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_observation_update", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "observation_update", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MyfirstApp.My.MySettings.Default.PTW_DB_BackupConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, AppUpdateversion_upadte, observation_update FROM AppupdateVersion"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PTW_DB_BackupDataSet.AppupdateVersionDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PTW_DB_BackupDataSet.AppupdateVersionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PTW_DB_BackupDataSet.AppupdateVersionDataTable = New PTW_DB_BackupDataSet.AppupdateVersionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PTW_DB_BackupDataSet.AppupdateVersionDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PTW_DB_BackupDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "AppupdateVersion")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer, ByVal Original_AppUpdateversion_upadte As Global.System.Nullable(Of Double), ByVal Original_observation_update As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_AppUpdateversion_upadte.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_AppUpdateversion_upadte.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_observation_update Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_observation_update,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal AppUpdateversion_upadte As Global.System.Nullable(Of Double), ByVal observation_update As String) As Integer
            If (AppUpdateversion_upadte.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(AppUpdateversion_upadte.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (observation_update Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(observation_update,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal AppUpdateversion_upadte As Global.System.Nullable(Of Double), ByVal observation_update As String, ByVal Original_ID As Integer, ByVal Original_AppUpdateversion_upadte As Global.System.Nullable(Of Double), ByVal Original_observation_update As String) As Integer
            If (AppUpdateversion_upadte.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(AppUpdateversion_upadte.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (observation_update Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(observation_update,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_ID,Integer)
            If (Original_AppUpdateversion_upadte.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_AppUpdateversion_upadte.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_observation_update Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_observation_update,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class botoesEcontroles_tTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "botoesEcontroles_t"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("id_int_botoes", "id_int_botoes")
            tableMapping.ColumnMappings.Add("BBQ0", "BBQ0")
            tableMapping.ColumnMappings.Add("BBQ1", "BBQ1")
            tableMapping.ColumnMappings.Add("BBQ2", "BBQ2")
            tableMapping.ColumnMappings.Add("BBQ3", "BBQ3")
            tableMapping.ColumnMappings.Add("BBQ4", "BBQ4")
            tableMapping.ColumnMappings.Add("BBQ5", "BBQ5")
            tableMapping.ColumnMappings.Add("BBQ6", "BBQ6")
            tableMapping.ColumnMappings.Add("BBQ7", "BBQ7")
            tableMapping.ColumnMappings.Add("BBQ8", "BBQ8")
            tableMapping.ColumnMappings.Add("BBL0", "BBL0")
            tableMapping.ColumnMappings.Add("BBL1", "BBL1")
            tableMapping.ColumnMappings.Add("BBL2", "BBL2")
            tableMapping.ColumnMappings.Add("BBL3", "BBL3")
            tableMapping.ColumnMappings.Add("BBL4", "BBL4")
            tableMapping.ColumnMappings.Add("BBL5", "BBL5")
            tableMapping.ColumnMappings.Add("BBL6", "BBL6")
            tableMapping.ColumnMappings.Add("BBL7", "BBL7")
            tableMapping.ColumnMappings.Add("BBL8", "BBL8")
            tableMapping.ColumnMappings.Add("BB01", "BB01")
            tableMapping.ColumnMappings.Add("BB02", "BB02")
            tableMapping.ColumnMappings.Add("BB11", "BB11")
            tableMapping.ColumnMappings.Add("BB21", "BB21")
            tableMapping.ColumnMappings.Add("BB22", "BB22")
            tableMapping.ColumnMappings.Add("BB23", "BB23")
            tableMapping.ColumnMappings.Add("BB31", "BB31")
            tableMapping.ColumnMappings.Add("BB32", "BB32")
            tableMapping.ColumnMappings.Add("BB41", "BB41")
            tableMapping.ColumnMappings.Add("BB51", "BB51")
            tableMapping.ColumnMappings.Add("BB52", "BB52")
            tableMapping.ColumnMappings.Add("BB61", "BB61")
            tableMapping.ColumnMappings.Add("BB71", "BB71")
            tableMapping.ColumnMappings.Add("BB72", "BB72")
            tableMapping.ColumnMappings.Add("BB73", "BB73")
            tableMapping.ColumnMappings.Add("BB81", "BB81")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `botoesEcontroles_t` WHERE ((`ID` = ?) AND ((? = 1 AND `id_int_botoes"& _ 
                "` IS NULL) OR (`id_int_botoes` = ?)) AND ((? = 1 AND `BBQ0` IS NULL) OR (`BBQ0` "& _ 
                "= ?)) AND ((? = 1 AND `BBQ1` IS NULL) OR (`BBQ1` = ?)) AND ((? = 1 AND `BBQ2` IS"& _ 
                " NULL) OR (`BBQ2` = ?)) AND ((? = 1 AND `BBQ3` IS NULL) OR (`BBQ3` = ?)) AND ((?"& _ 
                " = 1 AND `BBQ4` IS NULL) OR (`BBQ4` = ?)) AND ((? = 1 AND `BBQ5` IS NULL) OR (`B"& _ 
                "BQ5` = ?)) AND ((? = 1 AND `BBQ6` IS NULL) OR (`BBQ6` = ?)) AND ((? = 1 AND `BBQ"& _ 
                "7` IS NULL) OR (`BBQ7` = ?)) AND ((? = 1 AND `BBQ8` IS NULL) OR (`BBQ8` = ?)) AN"& _ 
                "D ((? = 1 AND `BBL0` IS NULL) OR (`BBL0` = ?)) AND ((? = 1 AND `BBL1` IS NULL) O"& _ 
                "R (`BBL1` = ?)) AND ((? = 1 AND `BBL2` IS NULL) OR (`BBL2` = ?)) AND ((? = 1 AND"& _ 
                " `BBL3` IS NULL) OR (`BBL3` = ?)) AND ((? = 1 AND `BBL4` IS NULL) OR (`BBL4` = ?"& _ 
                ")) AND ((? = 1 AND `BBL5` IS NULL) OR (`BBL5` = ?)) AND ((? = 1 AND `BBL6` IS NU"& _ 
                "LL) OR (`BBL6` = ?)) AND ((? = 1 AND `BBL7` IS NULL) OR (`BBL7` = ?)) AND ((? = "& _ 
                "1 AND `BBL8` IS NULL) OR (`BBL8` = ?)) AND ((? = 1 AND `BB01` IS NULL) OR (`BB01"& _ 
                "` = ?)) AND ((? = 1 AND `BB02` IS NULL) OR (`BB02` = ?)) AND ((? = 1 AND `BB11` "& _ 
                "IS NULL) OR (`BB11` = ?)) AND ((? = 1 AND `BB21` IS NULL) OR (`BB21` = ?)) AND ("& _ 
                "(? = 1 AND `BB22` IS NULL) OR (`BB22` = ?)) AND ((? = 1 AND `BB23` IS NULL) OR ("& _ 
                "`BB23` = ?)) AND ((? = 1 AND `BB31` IS NULL) OR (`BB31` = ?)) AND ((? = 1 AND `B"& _ 
                "B32` IS NULL) OR (`BB32` = ?)) AND ((? = 1 AND `BB41` IS NULL) OR (`BB41` = ?)) "& _ 
                "AND ((? = 1 AND `BB51` IS NULL) OR (`BB51` = ?)) AND ((? = 1 AND `BB52` IS NULL)"& _ 
                " OR (`BB52` = ?)) AND ((? = 1 AND `BB61` IS NULL) OR (`BB61` = ?)) AND ((? = 1 A"& _ 
                "ND `BB71` IS NULL) OR (`BB71` = ?)) AND ((? = 1 AND `BB72` IS NULL) OR (`BB72` ="& _ 
                " ?)) AND ((? = 1 AND `BB73` IS NULL) OR (`BB73` = ?)) AND ((? = 1 AND `BB81` IS "& _ 
                "NULL) OR (`BB81` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_id_int_botoes", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_int_botoes", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_int_botoes", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_int_botoes", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ0", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ0", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ0", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ0", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ1", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ2", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ3", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ4", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ5", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ6", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ7", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ7", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ7", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ7", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ8", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ8", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ8", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ8", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL0", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL0", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL0", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL0", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL1", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL2", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL3", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL4", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL5", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL6", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL7", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL7", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL7", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL7", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL8", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL8", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL8", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL8", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB01", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB01", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB01", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB01", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB02", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB02", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB02", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB02", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB11", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB11", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB11", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB11", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB21", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB21", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB21", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB21", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB22", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB22", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB22", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB22", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB23", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB23", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB23", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB23", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB31", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB31", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB31", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB31", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB32", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB32", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB32", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB32", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB41", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB41", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB41", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB41", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB51", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB51", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB51", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB51", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB52", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB52", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB52", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB52", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB61", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB61", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB61", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB61", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB71", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB71", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB71", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB71", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB72", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB72", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB72", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB72", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB73", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB73", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB73", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB73", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB81", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB81", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB81", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB81", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `botoesEcontroles_t` (`id_int_botoes`, `BBQ0`, `BBQ1`, `BBQ2`, `BBQ3`"& _ 
                ", `BBQ4`, `BBQ5`, `BBQ6`, `BBQ7`, `BBQ8`, `BBL0`, `BBL1`, `BBL2`, `BBL3`, `BBL4`"& _ 
                ", `BBL5`, `BBL6`, `BBL7`, `BBL8`, `BB01`, `BB02`, `BB11`, `BB21`, `BB22`, `BB23`"& _ 
                ", `BB31`, `BB32`, `BB41`, `BB51`, `BB52`, `BB61`, `BB71`, `BB72`, `BB73`, `BB81`"& _ 
                ") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("id_int_botoes", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_int_botoes", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ0", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ0", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ1", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ2", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ3", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ4", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ5", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ6", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ7", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ7", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ8", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ8", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL0", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL0", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL1", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL2", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL3", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL4", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL5", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL6", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL7", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL7", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL8", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL8", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB01", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB01", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB02", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB02", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB11", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB11", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB21", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB21", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB22", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB22", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB23", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB23", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB31", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB31", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB32", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB32", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB41", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB41", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB51", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB51", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB52", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB52", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB61", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB61", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB71", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB71", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB72", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB72", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB73", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB73", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB81", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB81", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `botoesEcontroles_t` SET `id_int_botoes` = ?, `BBQ0` = ?, `BBQ1` = ?, `BBQ"& _ 
                "2` = ?, `BBQ3` = ?, `BBQ4` = ?, `BBQ5` = ?, `BBQ6` = ?, `BBQ7` = ?, `BBQ8` = ?, "& _ 
                "`BBL0` = ?, `BBL1` = ?, `BBL2` = ?, `BBL3` = ?, `BBL4` = ?, `BBL5` = ?, `BBL6` ="& _ 
                " ?, `BBL7` = ?, `BBL8` = ?, `BB01` = ?, `BB02` = ?, `BB11` = ?, `BB21` = ?, `BB2"& _ 
                "2` = ?, `BB23` = ?, `BB31` = ?, `BB32` = ?, `BB41` = ?, `BB51` = ?, `BB52` = ?, "& _ 
                "`BB61` = ?, `BB71` = ?, `BB72` = ?, `BB73` = ?, `BB81` = ? WHERE ((`ID` = ?) AND"& _ 
                " ((? = 1 AND `id_int_botoes` IS NULL) OR (`id_int_botoes` = ?)) AND ((? = 1 AND "& _ 
                "`BBQ0` IS NULL) OR (`BBQ0` = ?)) AND ((? = 1 AND `BBQ1` IS NULL) OR (`BBQ1` = ?)"& _ 
                ") AND ((? = 1 AND `BBQ2` IS NULL) OR (`BBQ2` = ?)) AND ((? = 1 AND `BBQ3` IS NUL"& _ 
                "L) OR (`BBQ3` = ?)) AND ((? = 1 AND `BBQ4` IS NULL) OR (`BBQ4` = ?)) AND ((? = 1"& _ 
                " AND `BBQ5` IS NULL) OR (`BBQ5` = ?)) AND ((? = 1 AND `BBQ6` IS NULL) OR (`BBQ6`"& _ 
                " = ?)) AND ((? = 1 AND `BBQ7` IS NULL) OR (`BBQ7` = ?)) AND ((? = 1 AND `BBQ8` I"& _ 
                "S NULL) OR (`BBQ8` = ?)) AND ((? = 1 AND `BBL0` IS NULL) OR (`BBL0` = ?)) AND (("& _ 
                "? = 1 AND `BBL1` IS NULL) OR (`BBL1` = ?)) AND ((? = 1 AND `BBL2` IS NULL) OR (`"& _ 
                "BBL2` = ?)) AND ((? = 1 AND `BBL3` IS NULL) OR (`BBL3` = ?)) AND ((? = 1 AND `BB"& _ 
                "L4` IS NULL) OR (`BBL4` = ?)) AND ((? = 1 AND `BBL5` IS NULL) OR (`BBL5` = ?)) A"& _ 
                "ND ((? = 1 AND `BBL6` IS NULL) OR (`BBL6` = ?)) AND ((? = 1 AND `BBL7` IS NULL) "& _ 
                "OR (`BBL7` = ?)) AND ((? = 1 AND `BBL8` IS NULL) OR (`BBL8` = ?)) AND ((? = 1 AN"& _ 
                "D `BB01` IS NULL) OR (`BB01` = ?)) AND ((? = 1 AND `BB02` IS NULL) OR (`BB02` = "& _ 
                "?)) AND ((? = 1 AND `BB11` IS NULL) OR (`BB11` = ?)) AND ((? = 1 AND `BB21` IS N"& _ 
                "ULL) OR (`BB21` = ?)) AND ((? = 1 AND `BB22` IS NULL) OR (`BB22` = ?)) AND ((? ="& _ 
                " 1 AND `BB23` IS NULL) OR (`BB23` = ?)) AND ((? = 1 AND `BB31` IS NULL) OR (`BB3"& _ 
                "1` = ?)) AND ((? = 1 AND `BB32` IS NULL) OR (`BB32` = ?)) AND ((? = 1 AND `BB41`"& _ 
                " IS NULL) OR (`BB41` = ?)) AND ((? = 1 AND `BB51` IS NULL) OR (`BB51` = ?)) AND "& _ 
                "((? = 1 AND `BB52` IS NULL) OR (`BB52` = ?)) AND ((? = 1 AND `BB61` IS NULL) OR "& _ 
                "(`BB61` = ?)) AND ((? = 1 AND `BB71` IS NULL) OR (`BB71` = ?)) AND ((? = 1 AND `"& _ 
                "BB72` IS NULL) OR (`BB72` = ?)) AND ((? = 1 AND `BB73` IS NULL) OR (`BB73` = ?))"& _ 
                " AND ((? = 1 AND `BB81` IS NULL) OR (`BB81` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("id_int_botoes", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_int_botoes", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ0", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ0", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ1", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ2", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ3", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ4", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ5", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ6", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ7", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ7", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBQ8", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ8", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL0", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL0", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL1", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL2", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL3", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL4", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL5", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL6", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL7", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL7", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BBL8", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL8", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB01", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB01", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB02", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB02", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB11", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB11", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB21", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB21", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB22", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB22", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB23", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB23", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB31", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB31", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB32", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB32", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB41", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB41", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB51", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB51", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB52", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB52", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB61", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB61", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB71", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB71", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB72", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB72", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB73", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB73", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BB81", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB81", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_id_int_botoes", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_int_botoes", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_int_botoes", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_int_botoes", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ0", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ0", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ0", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ0", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ1", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ2", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ3", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ4", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ5", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ6", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ7", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ7", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ7", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ7", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBQ8", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ8", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBQ8", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBQ8", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL0", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL0", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL0", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL0", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL1", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL2", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL3", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL4", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL5", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL6", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL7", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL7", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL7", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL7", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BBL8", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL8", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BBL8", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BBL8", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB01", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB01", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB01", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB01", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB02", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB02", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB02", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB02", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB11", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB11", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB11", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB11", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB21", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB21", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB21", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB21", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB22", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB22", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB22", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB22", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB23", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB23", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB23", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB23", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB31", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB31", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB31", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB31", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB32", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB32", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB32", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB32", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB41", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB41", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB41", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB41", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB51", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB51", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB51", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB51", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB52", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB52", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB52", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB52", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB61", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB61", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB61", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB61", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB71", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB71", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB71", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB71", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB72", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB72", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB72", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB72", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB73", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB73", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB73", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB73", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BB81", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB81", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BB81", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BB81", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MyfirstApp.My.MySettings.Default.PTW_DB_BackupConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, id_int_botoes, BBQ0, BBQ1, BBQ2, BBQ3, BBQ4, BBQ5, BBQ6, BBQ7, BBQ8, B"& _ 
                "BL0, BBL1, BBL2, BBL3, BBL4, BBL5, BBL6, BBL7, BBL8, BB01, BB02, BB11, BB21, BB2"& _ 
                "2, BB23, BB31, BB32, BB41, BB51, BB52, BB61, BB71, BB72, BB73, BB81 FROM botoesE"& _ 
                "controles_t"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PTW_DB_BackupDataSet.botoesEcontroles_tDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PTW_DB_BackupDataSet.botoesEcontroles_tDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PTW_DB_BackupDataSet.botoesEcontroles_tDataTable = New PTW_DB_BackupDataSet.botoesEcontroles_tDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PTW_DB_BackupDataSet.botoesEcontroles_tDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PTW_DB_BackupDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "botoesEcontroles_t")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_id_int_botoes As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BBQ0 As Boolean,  _
                    ByVal Original_BBQ1 As Boolean,  _
                    ByVal Original_BBQ2 As Boolean,  _
                    ByVal Original_BBQ3 As Boolean,  _
                    ByVal Original_BBQ4 As Boolean,  _
                    ByVal Original_BBQ5 As Boolean,  _
                    ByVal Original_BBQ6 As Boolean,  _
                    ByVal Original_BBQ7 As Boolean,  _
                    ByVal Original_BBQ8 As Boolean,  _
                    ByVal Original_BBL0 As Boolean,  _
                    ByVal Original_BBL1 As Boolean,  _
                    ByVal Original_BBL2 As Boolean,  _
                    ByVal Original_BBL3 As Boolean,  _
                    ByVal Original_BBL4 As Boolean,  _
                    ByVal Original_BBL5 As Boolean,  _
                    ByVal Original_BBL6 As Boolean,  _
                    ByVal Original_BBL7 As Boolean,  _
                    ByVal Original_BBL8 As Boolean,  _
                    ByVal Original_BB01 As Boolean,  _
                    ByVal Original_BB02 As Boolean,  _
                    ByVal Original_BB11 As Boolean,  _
                    ByVal Original_BB21 As Boolean,  _
                    ByVal Original_BB22 As Boolean,  _
                    ByVal Original_BB23 As Boolean,  _
                    ByVal Original_BB31 As Boolean,  _
                    ByVal Original_BB32 As Boolean,  _
                    ByVal Original_BB41 As Boolean,  _
                    ByVal Original_BB51 As Boolean,  _
                    ByVal Original_BB52 As Boolean,  _
                    ByVal Original_BB61 As Boolean,  _
                    ByVal Original_BB71 As Boolean,  _
                    ByVal Original_BB72 As Boolean,  _
                    ByVal Original_BB73 As Boolean,  _
                    ByVal Original_BB81 As Boolean) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_id_int_botoes.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_id_int_botoes.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_BBQ0,Boolean)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_BBQ1,Boolean)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_BBQ2,Boolean)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_BBQ3,Boolean)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_BBQ4,Boolean)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_BBQ5,Boolean)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_BBQ6,Boolean)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_BBQ7,Boolean)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_BBQ8,Boolean)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_BBL0,Boolean)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_BBL1,Boolean)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_BBL2,Boolean)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_BBL3,Boolean)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_BBL4,Boolean)
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_BBL5,Boolean)
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_BBL6,Boolean)
            Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_BBL7,Boolean)
            Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_BBL8,Boolean)
            Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_BB01,Boolean)
            Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_BB02,Boolean)
            Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_BB11,Boolean)
            Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_BB21,Boolean)
            Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_BB22,Boolean)
            Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_BB23,Boolean)
            Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_BB31,Boolean)
            Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_BB32,Boolean)
            Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_BB41,Boolean)
            Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_BB51,Boolean)
            Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_BB52,Boolean)
            Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_BB61,Boolean)
            Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_BB71,Boolean)
            Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_BB72,Boolean)
            Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_BB73,Boolean)
            Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_BB81,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal id_int_botoes As Global.System.Nullable(Of Integer),  _
                    ByVal BBQ0 As Boolean,  _
                    ByVal BBQ1 As Boolean,  _
                    ByVal BBQ2 As Boolean,  _
                    ByVal BBQ3 As Boolean,  _
                    ByVal BBQ4 As Boolean,  _
                    ByVal BBQ5 As Boolean,  _
                    ByVal BBQ6 As Boolean,  _
                    ByVal BBQ7 As Boolean,  _
                    ByVal BBQ8 As Boolean,  _
                    ByVal BBL0 As Boolean,  _
                    ByVal BBL1 As Boolean,  _
                    ByVal BBL2 As Boolean,  _
                    ByVal BBL3 As Boolean,  _
                    ByVal BBL4 As Boolean,  _
                    ByVal BBL5 As Boolean,  _
                    ByVal BBL6 As Boolean,  _
                    ByVal BBL7 As Boolean,  _
                    ByVal BBL8 As Boolean,  _
                    ByVal BB01 As Boolean,  _
                    ByVal BB02 As Boolean,  _
                    ByVal BB11 As Boolean,  _
                    ByVal BB21 As Boolean,  _
                    ByVal BB22 As Boolean,  _
                    ByVal BB23 As Boolean,  _
                    ByVal BB31 As Boolean,  _
                    ByVal BB32 As Boolean,  _
                    ByVal BB41 As Boolean,  _
                    ByVal BB51 As Boolean,  _
                    ByVal BB52 As Boolean,  _
                    ByVal BB61 As Boolean,  _
                    ByVal BB71 As Boolean,  _
                    ByVal BB72 As Boolean,  _
                    ByVal BB73 As Boolean,  _
                    ByVal BB81 As Boolean) As Integer
            If (id_int_botoes.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(id_int_botoes.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(BBQ0,Boolean)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(BBQ1,Boolean)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(BBQ2,Boolean)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(BBQ3,Boolean)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(BBQ4,Boolean)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(BBQ5,Boolean)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(BBQ6,Boolean)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(BBQ7,Boolean)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(BBQ8,Boolean)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(BBL0,Boolean)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(BBL1,Boolean)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(BBL2,Boolean)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(BBL3,Boolean)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(BBL4,Boolean)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(BBL5,Boolean)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(BBL6,Boolean)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(BBL7,Boolean)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(BBL8,Boolean)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(BB01,Boolean)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(BB02,Boolean)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(BB11,Boolean)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(BB21,Boolean)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(BB22,Boolean)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(BB23,Boolean)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(BB31,Boolean)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(BB32,Boolean)
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(BB41,Boolean)
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(BB51,Boolean)
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(BB52,Boolean)
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(BB61,Boolean)
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(BB71,Boolean)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(BB72,Boolean)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(BB73,Boolean)
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(BB81,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal id_int_botoes As Global.System.Nullable(Of Integer),  _
                    ByVal BBQ0 As Boolean,  _
                    ByVal BBQ1 As Boolean,  _
                    ByVal BBQ2 As Boolean,  _
                    ByVal BBQ3 As Boolean,  _
                    ByVal BBQ4 As Boolean,  _
                    ByVal BBQ5 As Boolean,  _
                    ByVal BBQ6 As Boolean,  _
                    ByVal BBQ7 As Boolean,  _
                    ByVal BBQ8 As Boolean,  _
                    ByVal BBL0 As Boolean,  _
                    ByVal BBL1 As Boolean,  _
                    ByVal BBL2 As Boolean,  _
                    ByVal BBL3 As Boolean,  _
                    ByVal BBL4 As Boolean,  _
                    ByVal BBL5 As Boolean,  _
                    ByVal BBL6 As Boolean,  _
                    ByVal BBL7 As Boolean,  _
                    ByVal BBL8 As Boolean,  _
                    ByVal BB01 As Boolean,  _
                    ByVal BB02 As Boolean,  _
                    ByVal BB11 As Boolean,  _
                    ByVal BB21 As Boolean,  _
                    ByVal BB22 As Boolean,  _
                    ByVal BB23 As Boolean,  _
                    ByVal BB31 As Boolean,  _
                    ByVal BB32 As Boolean,  _
                    ByVal BB41 As Boolean,  _
                    ByVal BB51 As Boolean,  _
                    ByVal BB52 As Boolean,  _
                    ByVal BB61 As Boolean,  _
                    ByVal BB71 As Boolean,  _
                    ByVal BB72 As Boolean,  _
                    ByVal BB73 As Boolean,  _
                    ByVal BB81 As Boolean,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_id_int_botoes As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BBQ0 As Boolean,  _
                    ByVal Original_BBQ1 As Boolean,  _
                    ByVal Original_BBQ2 As Boolean,  _
                    ByVal Original_BBQ3 As Boolean,  _
                    ByVal Original_BBQ4 As Boolean,  _
                    ByVal Original_BBQ5 As Boolean,  _
                    ByVal Original_BBQ6 As Boolean,  _
                    ByVal Original_BBQ7 As Boolean,  _
                    ByVal Original_BBQ8 As Boolean,  _
                    ByVal Original_BBL0 As Boolean,  _
                    ByVal Original_BBL1 As Boolean,  _
                    ByVal Original_BBL2 As Boolean,  _
                    ByVal Original_BBL3 As Boolean,  _
                    ByVal Original_BBL4 As Boolean,  _
                    ByVal Original_BBL5 As Boolean,  _
                    ByVal Original_BBL6 As Boolean,  _
                    ByVal Original_BBL7 As Boolean,  _
                    ByVal Original_BBL8 As Boolean,  _
                    ByVal Original_BB01 As Boolean,  _
                    ByVal Original_BB02 As Boolean,  _
                    ByVal Original_BB11 As Boolean,  _
                    ByVal Original_BB21 As Boolean,  _
                    ByVal Original_BB22 As Boolean,  _
                    ByVal Original_BB23 As Boolean,  _
                    ByVal Original_BB31 As Boolean,  _
                    ByVal Original_BB32 As Boolean,  _
                    ByVal Original_BB41 As Boolean,  _
                    ByVal Original_BB51 As Boolean,  _
                    ByVal Original_BB52 As Boolean,  _
                    ByVal Original_BB61 As Boolean,  _
                    ByVal Original_BB71 As Boolean,  _
                    ByVal Original_BB72 As Boolean,  _
                    ByVal Original_BB73 As Boolean,  _
                    ByVal Original_BB81 As Boolean) As Integer
            If (id_int_botoes.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(id_int_botoes.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(BBQ0,Boolean)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(BBQ1,Boolean)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(BBQ2,Boolean)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(BBQ3,Boolean)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(BBQ4,Boolean)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(BBQ5,Boolean)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(BBQ6,Boolean)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(BBQ7,Boolean)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(BBQ8,Boolean)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(BBL0,Boolean)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(BBL1,Boolean)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(BBL2,Boolean)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(BBL3,Boolean)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(BBL4,Boolean)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(BBL5,Boolean)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(BBL6,Boolean)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(BBL7,Boolean)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(BBL8,Boolean)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(BB01,Boolean)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(BB02,Boolean)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(BB11,Boolean)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(BB21,Boolean)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(BB22,Boolean)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(BB23,Boolean)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(BB31,Boolean)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(BB32,Boolean)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(BB41,Boolean)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(BB51,Boolean)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(BB52,Boolean)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(BB61,Boolean)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(BB71,Boolean)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(BB72,Boolean)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(BB73,Boolean)
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(BB81,Boolean)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_ID,Integer)
            If (Original_id_int_botoes.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_id_int_botoes.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_BBQ0,Boolean)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_BBQ1,Boolean)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_BBQ2,Boolean)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_BBQ3,Boolean)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_BBQ4,Boolean)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_BBQ5,Boolean)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_BBQ6,Boolean)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_BBQ7,Boolean)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_BBQ8,Boolean)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_BBL0,Boolean)
            Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_BBL1,Boolean)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_BBL2,Boolean)
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_BBL3,Boolean)
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_BBL4,Boolean)
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_BBL5,Boolean)
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_BBL6,Boolean)
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_BBL7,Boolean)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_BBL8,Boolean)
            Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_BB01,Boolean)
            Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_BB02,Boolean)
            Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_BB11,Boolean)
            Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_BB21,Boolean)
            Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_BB22,Boolean)
            Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_BB23,Boolean)
            Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_BB31,Boolean)
            Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_BB32,Boolean)
            Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_BB41,Boolean)
            Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_BB51,Boolean)
            Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_BB52,Boolean)
            Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_BB61,Boolean)
            Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_BB71,Boolean)
            Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_BB72,Boolean)
            Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_BB73,Boolean)
            Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_BB81,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class companyTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "company"
            tableMapping.ColumnMappings.Add("id_company", "id_company")
            tableMapping.ColumnMappings.Add("name_company", "name_company")
            tableMapping.ColumnMappings.Add("place_company", "place_company")
            tableMapping.ColumnMappings.Add("active_company", "active_company")
            tableMapping.ColumnMappings.Add("obs_company", "obs_company")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `company` WHERE ((`id_company` = ?) AND ((? = 1 AND `name_company` IS"& _ 
                " NULL) OR (`name_company` = ?)) AND ((? = 1 AND `place_company` IS NULL) OR (`pl"& _ 
                "ace_company` = ?)) AND ((? = 1 AND `active_company` IS NULL) OR (`active_company"& _ 
                "` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_company", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_company", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_name_company", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name_company", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_name_company", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name_company", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_place_company", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "place_company", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_place_company", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "place_company", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_active_company", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "active_company", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_active_company", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "active_company", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `company` (`name_company`, `place_company`, `active_company`, `obs_co"& _ 
                "mpany`) VALUES (?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("name_company", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name_company", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("place_company", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "place_company", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("active_company", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "active_company", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("obs_company", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "obs_company", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `company` SET `name_company` = ?, `place_company` = ?, `active_company` = "& _ 
                "?, `obs_company` = ? WHERE ((`id_company` = ?) AND ((? = 1 AND `name_company` IS"& _ 
                " NULL) OR (`name_company` = ?)) AND ((? = 1 AND `place_company` IS NULL) OR (`pl"& _ 
                "ace_company` = ?)) AND ((? = 1 AND `active_company` IS NULL) OR (`active_company"& _ 
                "` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("name_company", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name_company", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("place_company", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "place_company", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("active_company", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "active_company", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("obs_company", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "obs_company", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_company", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_company", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_name_company", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name_company", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_name_company", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name_company", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_place_company", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "place_company", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_place_company", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "place_company", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_active_company", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "active_company", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_active_company", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "active_company", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MyfirstApp.My.MySettings.Default.PTW_DB_BackupConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT id_company, name_company, place_company, active_company, obs_company FROM "& _ 
                "company"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PTW_DB_BackupDataSet.companyDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PTW_DB_BackupDataSet.companyDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PTW_DB_BackupDataSet.companyDataTable = New PTW_DB_BackupDataSet.companyDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PTW_DB_BackupDataSet.companyDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PTW_DB_BackupDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "company")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_id_company As Integer, ByVal Original_name_company As String, ByVal Original_place_company As String, ByVal Original_active_company As Boolean) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_id_company,Integer)
            If (Original_name_company Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_name_company,String)
            End If
            If (Original_place_company Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_place_company,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_active_company,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal name_company As String, ByVal place_company As String, ByVal active_company As Boolean, ByVal obs_company As String) As Integer
            If (name_company Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(name_company,String)
            End If
            If (place_company Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(place_company,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(active_company,Boolean)
            If (obs_company Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(obs_company,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal name_company As String, ByVal place_company As String, ByVal active_company As Boolean, ByVal obs_company As String, ByVal Original_id_company As Integer, ByVal Original_name_company As String, ByVal Original_place_company As String, ByVal Original_active_company As Boolean) As Integer
            If (name_company Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(name_company,String)
            End If
            If (place_company Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(place_company,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(active_company,Boolean)
            If (obs_company Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(obs_company,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_id_company,Integer)
            If (Original_name_company Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_name_company,String)
            End If
            If (Original_place_company Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_place_company,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_active_company,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class integrantTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "integrant"
            tableMapping.ColumnMappings.Add("id_int", "id_int")
            tableMapping.ColumnMappings.Add("id_job_int", "id_job_int")
            tableMapping.ColumnMappings.Add("id_job_CONTRATUAL_int", "id_job_CONTRATUAL_int")
            tableMapping.ColumnMappings.Add("id_company_int", "id_company_int")
            tableMapping.ColumnMappings.Add("name_int", "name_int")
            tableMapping.ColumnMappings.Add("unidade_int", "unidade_int")
            tableMapping.ColumnMappings.Add("address_int", "address_int")
            tableMapping.ColumnMappings.Add("tel_int", "tel_int")
            tableMapping.ColumnMappings.Add("email_int", "email_int")
            tableMapping.ColumnMappings.Add("active_int", "active_int")
            tableMapping.ColumnMappings.Add("obs_int", "obs_int")
            tableMapping.ColumnMappings.Add("password_int", "password_int")
            tableMapping.ColumnMappings.Add("matricula_int", "matricula_int")
            tableMapping.ColumnMappings.Add("supervisor_int", "supervisor_int")
            tableMapping.ColumnMappings.Add("terceirizado_int", "terceirizado_int")
            tableMapping.ColumnMappings.Add("PastaLocal_int", "PastaLocal_int")
            tableMapping.ColumnMappings.Add("fotoStr_int", "fotoStr_int")
            tableMapping.ColumnMappings.Add("passwordStr_int", "passwordStr_int")
            tableMapping.ColumnMappings.Add("nivelUsuario_int", "nivelUsuario_int")
            tableMapping.ColumnMappings.Add("id_perfil_int", "id_perfil_int")
            tableMapping.ColumnMappings.Add("sexo", "sexo")
            tableMapping.ColumnMappings.Add("nacionalidade_int", "nacionalidade_int")
            tableMapping.ColumnMappings.Add("admin_int", "admin_int")
            tableMapping.ColumnMappings.Add("admissao_int", "admissao_int")
            tableMapping.ColumnMappings.Add("PTWLIDER_int", "PTWLIDER_int")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `integrant` WHERE ((`id_int` = ?) AND ((? = 1 AND `id_job_int` IS NUL"& _ 
                "L) OR (`id_job_int` = ?)) AND ((? = 1 AND `id_job_CONTRATUAL_int` IS NULL) OR (`"& _ 
                "id_job_CONTRATUAL_int` = ?)) AND ((? = 1 AND `id_company_int` IS NULL) OR (`id_c"& _ 
                "ompany_int` = ?)) AND ((? = 1 AND `name_int` IS NULL) OR (`name_int` = ?)) AND ("& _ 
                "(? = 1 AND `unidade_int` IS NULL) OR (`unidade_int` = ?)) AND ((? = 1 AND `tel_i"& _ 
                "nt` IS NULL) OR (`tel_int` = ?)) AND ((? = 1 AND `email_int` IS NULL) OR (`email"& _ 
                "_int` = ?)) AND ((? = 1 AND `active_int` IS NULL) OR (`active_int` = ?)) AND ((?"& _ 
                " = 1 AND `password_int` IS NULL) OR (`password_int` = ?)) AND ((? = 1 AND `matri"& _ 
                "cula_int` IS NULL) OR (`matricula_int` = ?)) AND ((? = 1 AND `supervisor_int` IS"& _ 
                " NULL) OR (`supervisor_int` = ?)) AND ((? = 1 AND `terceirizado_int` IS NULL) OR"& _ 
                " (`terceirizado_int` = ?)) AND ((? = 1 AND `nivelUsuario_int` IS NULL) OR (`nive"& _ 
                "lUsuario_int` = ?)) AND ((? = 1 AND `sexo` IS NULL) OR (`sexo` = ?)) AND ((? = 1"& _ 
                " AND `nacionalidade_int` IS NULL) OR (`nacionalidade_int` = ?)) AND ((? = 1 AND "& _ 
                "`admin_int` IS NULL) OR (`admin_int` = ?)) AND ((? = 1 AND `admissao_int` IS NUL"& _ 
                "L) OR (`admissao_int` = ?)) AND ((? = 1 AND `PTWLIDER_int` IS NULL) OR (`PTWLIDE"& _ 
                "R_int` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_id_job_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_job_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_id_job_CONTRATUAL_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job_CONTRATUAL_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_job_CONTRATUAL_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job_CONTRATUAL_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_id_company_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_company_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_company_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_company_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_name_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_name_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_unidade_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "unidade_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_unidade_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "unidade_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_tel_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "tel_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_tel_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "tel_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_email_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "email_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_email_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "email_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_active_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "active_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_active_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "active_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_password_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "password_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_password_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "password_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_matricula_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "matricula_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_matricula_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "matricula_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_supervisor_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "supervisor_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_supervisor_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "supervisor_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_terceirizado_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "terceirizado_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_terceirizado_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "terceirizado_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_nivelUsuario_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nivelUsuario_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_nivelUsuario_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nivelUsuario_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_sexo", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "sexo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_sexo", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "sexo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_nacionalidade_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nacionalidade_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_nacionalidade_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nacionalidade_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_admin_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "admin_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_admin_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "admin_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_admissao_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "admissao_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_admissao_int", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "admissao_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PTWLIDER_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PTWLIDER_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PTWLIDER_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PTWLIDER_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `integrant` (`id_job_int`, `id_job_CONTRATUAL_int`, `id_company_int`,"& _ 
                " `name_int`, `unidade_int`, `address_int`, `tel_int`, `email_int`, `active_int`,"& _ 
                " `obs_int`, `password_int`, `matricula_int`, `supervisor_int`, `terceirizado_int"& _ 
                "`, `PastaLocal_int`, `fotoStr_int`, `passwordStr_int`, `nivelUsuario_int`, `id_p"& _ 
                "erfil_int`, `sexo`, `nacionalidade_int`, `admin_int`, `admissao_int`, `PTWLIDER_"& _ 
                "int`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("id_job_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("id_job_CONTRATUAL_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job_CONTRATUAL_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("id_company_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_company_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("name_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("unidade_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "unidade_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("address_int", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "address_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("tel_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "tel_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("email_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "email_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("active_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "active_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("obs_int", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "obs_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("password_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "password_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("matricula_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "matricula_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("supervisor_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "supervisor_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("terceirizado_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "terceirizado_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PastaLocal_int", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PastaLocal_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fotoStr_int", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fotoStr_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("passwordStr_int", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwordStr_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("nivelUsuario_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nivelUsuario_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("id_perfil_int", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_perfil_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("sexo", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "sexo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("nacionalidade_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nacionalidade_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("admin_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "admin_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("admissao_int", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "admissao_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PTWLIDER_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PTWLIDER_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `integrant` SET `id_job_int` = ?, `id_job_CONTRATUAL_int` = ?, `id_company"& _ 
                "_int` = ?, `name_int` = ?, `unidade_int` = ?, `address_int` = ?, `tel_int` = ?, "& _ 
                "`email_int` = ?, `active_int` = ?, `obs_int` = ?, `password_int` = ?, `matricula"& _ 
                "_int` = ?, `supervisor_int` = ?, `terceirizado_int` = ?, `PastaLocal_int` = ?, `"& _ 
                "fotoStr_int` = ?, `passwordStr_int` = ?, `nivelUsuario_int` = ?, `id_perfil_int`"& _ 
                " = ?, `sexo` = ?, `nacionalidade_int` = ?, `admin_int` = ?, `admissao_int` = ?, "& _ 
                "`PTWLIDER_int` = ? WHERE ((`id_int` = ?) AND ((? = 1 AND `id_job_int` IS NULL) O"& _ 
                "R (`id_job_int` = ?)) AND ((? = 1 AND `id_job_CONTRATUAL_int` IS NULL) OR (`id_j"& _ 
                "ob_CONTRATUAL_int` = ?)) AND ((? = 1 AND `id_company_int` IS NULL) OR (`id_compa"& _ 
                "ny_int` = ?)) AND ((? = 1 AND `name_int` IS NULL) OR (`name_int` = ?)) AND ((? ="& _ 
                " 1 AND `unidade_int` IS NULL) OR (`unidade_int` = ?)) AND ((? = 1 AND `tel_int` "& _ 
                "IS NULL) OR (`tel_int` = ?)) AND ((? = 1 AND `email_int` IS NULL) OR (`email_int"& _ 
                "` = ?)) AND ((? = 1 AND `active_int` IS NULL) OR (`active_int` = ?)) AND ((? = 1"& _ 
                " AND `password_int` IS NULL) OR (`password_int` = ?)) AND ((? = 1 AND `matricula"& _ 
                "_int` IS NULL) OR (`matricula_int` = ?)) AND ((? = 1 AND `supervisor_int` IS NUL"& _ 
                "L) OR (`supervisor_int` = ?)) AND ((? = 1 AND `terceirizado_int` IS NULL) OR (`t"& _ 
                "erceirizado_int` = ?)) AND ((? = 1 AND `nivelUsuario_int` IS NULL) OR (`nivelUsu"& _ 
                "ario_int` = ?)) AND ((? = 1 AND `sexo` IS NULL) OR (`sexo` = ?)) AND ((? = 1 AND"& _ 
                " `nacionalidade_int` IS NULL) OR (`nacionalidade_int` = ?)) AND ((? = 1 AND `adm"& _ 
                "in_int` IS NULL) OR (`admin_int` = ?)) AND ((? = 1 AND `admissao_int` IS NULL) O"& _ 
                "R (`admissao_int` = ?)) AND ((? = 1 AND `PTWLIDER_int` IS NULL) OR (`PTWLIDER_in"& _ 
                "t` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("id_job_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("id_job_CONTRATUAL_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job_CONTRATUAL_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("id_company_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_company_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("name_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("unidade_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "unidade_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("address_int", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "address_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("tel_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "tel_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("email_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "email_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("active_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "active_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("obs_int", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "obs_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("password_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "password_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("matricula_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "matricula_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("supervisor_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "supervisor_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("terceirizado_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "terceirizado_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PastaLocal_int", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PastaLocal_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fotoStr_int", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fotoStr_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("passwordStr_int", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwordStr_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("nivelUsuario_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nivelUsuario_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("id_perfil_int", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_perfil_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("sexo", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "sexo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("nacionalidade_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nacionalidade_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("admin_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "admin_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("admissao_int", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "admissao_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PTWLIDER_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PTWLIDER_int", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_id_job_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_job_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_id_job_CONTRATUAL_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job_CONTRATUAL_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_job_CONTRATUAL_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job_CONTRATUAL_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_id_company_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_company_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_company_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_company_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_name_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_name_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "name_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_unidade_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "unidade_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_unidade_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "unidade_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_tel_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "tel_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_tel_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "tel_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_email_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "email_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_email_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "email_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_active_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "active_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_active_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "active_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_password_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "password_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_password_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "password_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_matricula_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "matricula_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_matricula_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "matricula_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_supervisor_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "supervisor_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_supervisor_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "supervisor_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_terceirizado_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "terceirizado_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_terceirizado_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "terceirizado_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_nivelUsuario_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nivelUsuario_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_nivelUsuario_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nivelUsuario_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_sexo", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "sexo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_sexo", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "sexo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_nacionalidade_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nacionalidade_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_nacionalidade_int", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "nacionalidade_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_admin_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "admin_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_admin_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "admin_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_admissao_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "admissao_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_admissao_int", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "admissao_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PTWLIDER_int", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PTWLIDER_int", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PTWLIDER_int", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PTWLIDER_int", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MyfirstApp.My.MySettings.Default.PTW_DB_BackupConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT id_int, id_job_int, id_job_CONTRATUAL_int, id_company_int, name_int, unida"& _ 
                "de_int, address_int, tel_int, email_int, active_int, obs_int, password_int, matr"& _ 
                "icula_int, supervisor_int, terceirizado_int, PastaLocal_int, fotoStr_int, passwo"& _ 
                "rdStr_int, nivelUsuario_int, id_perfil_int, sexo, nacionalidade_int, admin_int, "& _ 
                "admissao_int, PTWLIDER_int FROM integrant"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PTW_DB_BackupDataSet.integrantDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PTW_DB_BackupDataSet.integrantDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PTW_DB_BackupDataSet.integrantDataTable = New PTW_DB_BackupDataSet.integrantDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PTW_DB_BackupDataSet.integrantDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PTW_DB_BackupDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "integrant")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_id_int As Integer,  _
                    ByVal Original_id_job_int As Global.System.Nullable(Of Integer),  _
                    ByVal Original_id_job_CONTRATUAL_int As Global.System.Nullable(Of Integer),  _
                    ByVal Original_id_company_int As Global.System.Nullable(Of Integer),  _
                    ByVal Original_name_int As String,  _
                    ByVal Original_unidade_int As String,  _
                    ByVal Original_tel_int As String,  _
                    ByVal Original_email_int As String,  _
                    ByVal Original_active_int As Boolean,  _
                    ByVal Original_password_int As String,  _
                    ByVal Original_matricula_int As String,  _
                    ByVal Original_supervisor_int As Boolean,  _
                    ByVal Original_terceirizado_int As Boolean,  _
                    ByVal Original_nivelUsuario_int As String,  _
                    ByVal Original_sexo As Boolean,  _
                    ByVal Original_nacionalidade_int As String,  _
                    ByVal Original_admin_int As Boolean,  _
                    ByVal Original_admissao_int As Global.System.Nullable(Of Date),  _
                    ByVal Original_PTWLIDER_int As Boolean) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_id_int,Integer)
            If (Original_id_job_int.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_id_job_int.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_id_job_CONTRATUAL_int.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_id_job_CONTRATUAL_int.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_id_company_int.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_id_company_int.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_name_int Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_name_int,String)
            End If
            If (Original_unidade_int Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_unidade_int,String)
            End If
            If (Original_tel_int Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_tel_int,String)
            End If
            If (Original_email_int Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_email_int,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_active_int,Boolean)
            If (Original_password_int Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_password_int,String)
            End If
            If (Original_matricula_int Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_matricula_int,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_supervisor_int,Boolean)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_terceirizado_int,Boolean)
            If (Original_nivelUsuario_int Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_nivelUsuario_int,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_sexo,Boolean)
            If (Original_nacionalidade_int Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_nacionalidade_int,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_admin_int,Boolean)
            If (Original_admissao_int.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_admissao_int.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_PTWLIDER_int,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal id_job_int As Global.System.Nullable(Of Integer),  _
                    ByVal id_job_CONTRATUAL_int As Global.System.Nullable(Of Integer),  _
                    ByVal id_company_int As Global.System.Nullable(Of Integer),  _
                    ByVal name_int As String,  _
                    ByVal unidade_int As String,  _
                    ByVal address_int As String,  _
                    ByVal tel_int As String,  _
                    ByVal email_int As String,  _
                    ByVal active_int As Boolean,  _
                    ByVal obs_int As String,  _
                    ByVal password_int As String,  _
                    ByVal matricula_int As String,  _
                    ByVal supervisor_int As Boolean,  _
                    ByVal terceirizado_int As Boolean,  _
                    ByVal PastaLocal_int As String,  _
                    ByVal fotoStr_int As String,  _
                    ByVal passwordStr_int As String,  _
                    ByVal nivelUsuario_int As String,  _
                    ByVal id_perfil_int As String,  _
                    ByVal sexo As Boolean,  _
                    ByVal nacionalidade_int As String,  _
                    ByVal admin_int As Boolean,  _
                    ByVal admissao_int As Global.System.Nullable(Of Date),  _
                    ByVal PTWLIDER_int As Boolean) As Integer
            If (id_job_int.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(id_job_int.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (id_job_CONTRATUAL_int.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(id_job_CONTRATUAL_int.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (id_company_int.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(id_company_int.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (name_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(name_int,String)
            End If
            If (unidade_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(unidade_int,String)
            End If
            If (address_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(address_int,String)
            End If
            If (tel_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(tel_int,String)
            End If
            If (email_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(email_int,String)
            End If
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(active_int,Boolean)
            If (obs_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(obs_int,String)
            End If
            If (password_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(password_int,String)
            End If
            If (matricula_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(matricula_int,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(supervisor_int,Boolean)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(terceirizado_int,Boolean)
            If (PastaLocal_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PastaLocal_int,String)
            End If
            If (fotoStr_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(fotoStr_int,String)
            End If
            If (passwordStr_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(passwordStr_int,String)
            End If
            If (nivelUsuario_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(nivelUsuario_int,String)
            End If
            If (id_perfil_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(id_perfil_int,String)
            End If
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(sexo,Boolean)
            If (nacionalidade_int Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(nacionalidade_int,String)
            End If
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(admin_int,Boolean)
            If (admissao_int.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(admissao_int.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(PTWLIDER_int,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal id_job_int As Global.System.Nullable(Of Integer),  _
                    ByVal id_job_CONTRATUAL_int As Global.System.Nullable(Of Integer),  _
                    ByVal id_company_int As Global.System.Nullable(Of Integer),  _
                    ByVal name_int As String,  _
                    ByVal unidade_int As String,  _
                    ByVal address_int As String,  _
                    ByVal tel_int As String,  _
                    ByVal email_int As String,  _
                    ByVal active_int As Boolean,  _
                    ByVal obs_int As String,  _
                    ByVal password_int As String,  _
                    ByVal matricula_int As String,  _
                    ByVal supervisor_int As Boolean,  _
                    ByVal terceirizado_int As Boolean,  _
                    ByVal PastaLocal_int As String,  _
                    ByVal fotoStr_int As String,  _
                    ByVal passwordStr_int As String,  _
                    ByVal nivelUsuario_int As String,  _
                    ByVal id_perfil_int As String,  _
                    ByVal sexo As Boolean,  _
                    ByVal nacionalidade_int As String,  _
                    ByVal admin_int As Boolean,  _
                    ByVal admissao_int As Global.System.Nullable(Of Date),  _
                    ByVal PTWLIDER_int As Boolean,  _
                    ByVal Original_id_int As Integer,  _
                    ByVal Original_id_job_int As Global.System.Nullable(Of Integer),  _
                    ByVal Original_id_job_CONTRATUAL_int As Global.System.Nullable(Of Integer),  _
                    ByVal Original_id_company_int As Global.System.Nullable(Of Integer),  _
                    ByVal Original_name_int As String,  _
                    ByVal Original_unidade_int As String,  _
                    ByVal Original_tel_int As String,  _
                    ByVal Original_email_int As String,  _
                    ByVal Original_active_int As Boolean,  _
                    ByVal Original_password_int As String,  _
                    ByVal Original_matricula_int As String,  _
                    ByVal Original_supervisor_int As Boolean,  _
                    ByVal Original_terceirizado_int As Boolean,  _
                    ByVal Original_nivelUsuario_int As String,  _
                    ByVal Original_sexo As Boolean,  _
                    ByVal Original_nacionalidade_int As String,  _
                    ByVal Original_admin_int As Boolean,  _
                    ByVal Original_admissao_int As Global.System.Nullable(Of Date),  _
                    ByVal Original_PTWLIDER_int As Boolean) As Integer
            If (id_job_int.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(id_job_int.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (id_job_CONTRATUAL_int.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(id_job_CONTRATUAL_int.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (id_company_int.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(id_company_int.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (name_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(name_int,String)
            End If
            If (unidade_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(unidade_int,String)
            End If
            If (address_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(address_int,String)
            End If
            If (tel_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(tel_int,String)
            End If
            If (email_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(email_int,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(active_int,Boolean)
            If (obs_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(obs_int,String)
            End If
            If (password_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(password_int,String)
            End If
            If (matricula_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(matricula_int,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(supervisor_int,Boolean)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(terceirizado_int,Boolean)
            If (PastaLocal_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PastaLocal_int,String)
            End If
            If (fotoStr_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(fotoStr_int,String)
            End If
            If (passwordStr_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(passwordStr_int,String)
            End If
            If (nivelUsuario_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(nivelUsuario_int,String)
            End If
            If (id_perfil_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(id_perfil_int,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(sexo,Boolean)
            If (nacionalidade_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(nacionalidade_int,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(admin_int,Boolean)
            If (admissao_int.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(admissao_int.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(PTWLIDER_int,Boolean)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_id_int,Integer)
            If (Original_id_job_int.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_id_job_int.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_id_job_CONTRATUAL_int.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_id_job_CONTRATUAL_int.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_id_company_int.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_id_company_int.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_name_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_name_int,String)
            End If
            If (Original_unidade_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_unidade_int,String)
            End If
            If (Original_tel_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_tel_int,String)
            End If
            If (Original_email_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_email_int,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_active_int,Boolean)
            If (Original_password_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_password_int,String)
            End If
            If (Original_matricula_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_matricula_int,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_supervisor_int,Boolean)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_terceirizado_int,Boolean)
            If (Original_nivelUsuario_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_nivelUsuario_int,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_sexo,Boolean)
            If (Original_nacionalidade_int Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_nacionalidade_int,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_admin_int,Boolean)
            If (Original_admissao_int.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_admissao_int.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_PTWLIDER_int,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class jobTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "job"
            tableMapping.ColumnMappings.Add("id_job", "id_job")
            tableMapping.ColumnMappings.Add("job", "job")
            tableMapping.ColumnMappings.Add("dept_job", "dept_job")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `job` WHERE ((`id_job` = ?) AND ((? = 1 AND `job` IS NULL) OR (`job` "& _ 
                "= ?)) AND ((? = 1 AND `dept_job` IS NULL) OR (`dept_job` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_job", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_job", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "job", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_job", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "job", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_dept_job", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dept_job", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_dept_job", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dept_job", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `job` (`job`, `dept_job`) VALUES (?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("job", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "job", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("dept_job", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dept_job", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `job` SET `job` = ?, `dept_job` = ? WHERE ((`id_job` = ?) AND ((? = 1 AND "& _ 
                "`job` IS NULL) OR (`job` = ?)) AND ((? = 1 AND `dept_job` IS NULL) OR (`dept_job"& _ 
                "` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("job", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "job", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("dept_job", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dept_job", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_id_job", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id_job", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_job", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "job", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_job", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "job", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_dept_job", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dept_job", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_dept_job", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "dept_job", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MyfirstApp.My.MySettings.Default.PTW_DB_BackupConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT id_job, job, dept_job FROM job"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PTW_DB_BackupDataSet.jobDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PTW_DB_BackupDataSet.jobDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PTW_DB_BackupDataSet.jobDataTable = New PTW_DB_BackupDataSet.jobDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PTW_DB_BackupDataSet.jobDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PTW_DB_BackupDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "job")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_id_job As Integer, ByVal Original_job As String, ByVal Original_dept_job As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_id_job,Integer)
            If (Original_job Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_job,String)
            End If
            If (Original_dept_job Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_dept_job,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal job As String, ByVal dept_job As String) As Integer
            If (job Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(job,String)
            End If
            If (dept_job Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(dept_job,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal job As String, ByVal dept_job As String, ByVal Original_id_job As Integer, ByVal Original_job As String, ByVal Original_dept_job As String) As Integer
            If (job Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(job,String)
            End If
            If (dept_job Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(dept_job,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_id_job,Integer)
            If (Original_job Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_job,String)
            End If
            If (Original_dept_job Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_dept_job,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PTcloseTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PTclose"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("MOTIVO_close", "MOTIVO_close")
            tableMapping.ColumnMappings.Add("PTWnum_close", "PTWnum_close")
            tableMapping.ColumnMappings.Add("ISSUER_close", "ISSUER_close")
            tableMapping.ColumnMappings.Add("LIDER_close", "LIDER_close")
            tableMapping.ColumnMappings.Add("LIBERADOR_close", "LIBERADOR_close")
            tableMapping.ColumnMappings.Add("SAFETY_close", "SAFETY_close")
            tableMapping.ColumnMappings.Add("ADMIN_close", "ADMIN_close")
            tableMapping.ColumnMappings.Add("OIM_close", "OIM_close")
            tableMapping.ColumnMappings.Add("ALL_close", "ALL_close")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `PTclose` WHERE ((`ID` = ?) AND ((? = 1 AND `MOTIVO_close` IS NULL) O"& _ 
                "R (`MOTIVO_close` = ?)) AND ((? = 1 AND `PTWnum_close` IS NULL) OR (`PTWnum_clos"& _ 
                "e` = ?)) AND ((? = 1 AND `ISSUER_close` IS NULL) OR (`ISSUER_close` = ?)) AND (("& _ 
                "? = 1 AND `LIDER_close` IS NULL) OR (`LIDER_close` = ?)) AND ((? = 1 AND `LIBERA"& _ 
                "DOR_close` IS NULL) OR (`LIBERADOR_close` = ?)) AND ((? = 1 AND `SAFETY_close` I"& _ 
                "S NULL) OR (`SAFETY_close` = ?)) AND ((? = 1 AND `ADMIN_close` IS NULL) OR (`ADM"& _ 
                "IN_close` = ?)) AND ((? = 1 AND `OIM_close` IS NULL) OR (`OIM_close` = ?)) AND ("& _ 
                "(? = 1 AND `ALL_close` IS NULL) OR (`ALL_close` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_MOTIVO_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOTIVO_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_MOTIVO_close", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOTIVO_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PTWnum_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PTWnum_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PTWnum_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PTWnum_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ISSUER_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUER_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ISSUER_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUER_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIDER_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIDER_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIBERADOR_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIBERADOR_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SAFETY_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SAFETY_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ADMIN_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ADMIN_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OIM_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OIM_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ALL_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ALL_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ALL_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ALL_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `PTclose` (`MOTIVO_close`, `PTWnum_close`, `ISSUER_close`, `LIDER_clo"& _ 
                "se`, `LIBERADOR_close`, `SAFETY_close`, `ADMIN_close`, `OIM_close`, `ALL_close`)"& _ 
                " VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("MOTIVO_close", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOTIVO_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PTWnum_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PTWnum_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ISSUER_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUER_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIDER_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIBERADOR_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SAFETY_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ADMIN_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OIM_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ALL_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ALL_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `PTclose` SET `MOTIVO_close` = ?, `PTWnum_close` = ?, `ISSUER_close` = ?, "& _ 
                "`LIDER_close` = ?, `LIBERADOR_close` = ?, `SAFETY_close` = ?, `ADMIN_close` = ?,"& _ 
                " `OIM_close` = ?, `ALL_close` = ? WHERE ((`ID` = ?) AND ((? = 1 AND `MOTIVO_clos"& _ 
                "e` IS NULL) OR (`MOTIVO_close` = ?)) AND ((? = 1 AND `PTWnum_close` IS NULL) OR "& _ 
                "(`PTWnum_close` = ?)) AND ((? = 1 AND `ISSUER_close` IS NULL) OR (`ISSUER_close`"& _ 
                " = ?)) AND ((? = 1 AND `LIDER_close` IS NULL) OR (`LIDER_close` = ?)) AND ((? = "& _ 
                "1 AND `LIBERADOR_close` IS NULL) OR (`LIBERADOR_close` = ?)) AND ((? = 1 AND `SA"& _ 
                "FETY_close` IS NULL) OR (`SAFETY_close` = ?)) AND ((? = 1 AND `ADMIN_close` IS N"& _ 
                "ULL) OR (`ADMIN_close` = ?)) AND ((? = 1 AND `OIM_close` IS NULL) OR (`OIM_close"& _ 
                "` = ?)) AND ((? = 1 AND `ALL_close` IS NULL) OR (`ALL_close` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("MOTIVO_close", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOTIVO_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PTWnum_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PTWnum_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ISSUER_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUER_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIDER_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIBERADOR_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SAFETY_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ADMIN_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OIM_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ALL_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ALL_close", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_MOTIVO_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOTIVO_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_MOTIVO_close", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOTIVO_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PTWnum_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PTWnum_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PTWnum_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PTWnum_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ISSUER_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUER_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ISSUER_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUER_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIDER_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIDER_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIBERADOR_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIBERADOR_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SAFETY_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SAFETY_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ADMIN_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ADMIN_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OIM_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OIM_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ALL_close", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ALL_close", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ALL_close", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ALL_close", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MyfirstApp.My.MySettings.Default.PTW_DB_BackupConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, MOTIVO_close, PTWnum_close, ISSUER_close, LIDER_close, LIBERADOR_close"& _ 
                ", SAFETY_close, ADMIN_close, OIM_close, ALL_close FROM PTclose"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PTW_DB_BackupDataSet.PTcloseDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PTW_DB_BackupDataSet.PTcloseDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PTW_DB_BackupDataSet.PTcloseDataTable = New PTW_DB_BackupDataSet.PTcloseDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PTW_DB_BackupDataSet.PTcloseDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PTW_DB_BackupDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "PTclose")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer, ByVal Original_MOTIVO_close As String, ByVal Original_PTWnum_close As Global.System.Nullable(Of Integer), ByVal Original_ISSUER_close As Boolean, ByVal Original_LIDER_close As Boolean, ByVal Original_LIBERADOR_close As Boolean, ByVal Original_SAFETY_close As Boolean, ByVal Original_ADMIN_close As Boolean, ByVal Original_OIM_close As Boolean, ByVal Original_ALL_close As Boolean) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_MOTIVO_close Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_MOTIVO_close,String)
            End If
            If (Original_PTWnum_close.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_PTWnum_close.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ISSUER_close,Boolean)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_LIDER_close,Boolean)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_LIBERADOR_close,Boolean)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_SAFETY_close,Boolean)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_ADMIN_close,Boolean)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_OIM_close,Boolean)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_ALL_close,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal MOTIVO_close As String, ByVal PTWnum_close As Global.System.Nullable(Of Integer), ByVal ISSUER_close As Boolean, ByVal LIDER_close As Boolean, ByVal LIBERADOR_close As Boolean, ByVal SAFETY_close As Boolean, ByVal ADMIN_close As Boolean, ByVal OIM_close As Boolean, ByVal ALL_close As Boolean) As Integer
            If (MOTIVO_close Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(MOTIVO_close,String)
            End If
            If (PTWnum_close.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PTWnum_close.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(ISSUER_close,Boolean)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(LIDER_close,Boolean)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(LIBERADOR_close,Boolean)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(SAFETY_close,Boolean)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(ADMIN_close,Boolean)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(OIM_close,Boolean)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(ALL_close,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal MOTIVO_close As String,  _
                    ByVal PTWnum_close As Global.System.Nullable(Of Integer),  _
                    ByVal ISSUER_close As Boolean,  _
                    ByVal LIDER_close As Boolean,  _
                    ByVal LIBERADOR_close As Boolean,  _
                    ByVal SAFETY_close As Boolean,  _
                    ByVal ADMIN_close As Boolean,  _
                    ByVal OIM_close As Boolean,  _
                    ByVal ALL_close As Boolean,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_MOTIVO_close As String,  _
                    ByVal Original_PTWnum_close As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ISSUER_close As Boolean,  _
                    ByVal Original_LIDER_close As Boolean,  _
                    ByVal Original_LIBERADOR_close As Boolean,  _
                    ByVal Original_SAFETY_close As Boolean,  _
                    ByVal Original_ADMIN_close As Boolean,  _
                    ByVal Original_OIM_close As Boolean,  _
                    ByVal Original_ALL_close As Boolean) As Integer
            If (MOTIVO_close Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(MOTIVO_close,String)
            End If
            If (PTWnum_close.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PTWnum_close.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ISSUER_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(LIDER_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(LIBERADOR_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SAFETY_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ADMIN_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(OIM_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ALL_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_ID,Integer)
            If (Original_MOTIVO_close Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_MOTIVO_close,String)
            End If
            If (Original_PTWnum_close.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_PTWnum_close.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_ISSUER_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_LIDER_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_LIBERADOR_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_SAFETY_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ADMIN_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_OIM_close,Boolean)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_ALL_close,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PTopenTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PTopen"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("STATUS_ptw", "STATUS_ptw")
            tableMapping.ColumnMappings.Add("NUM_ptw", "NUM_ptw")
            tableMapping.ColumnMappings.Add("DATA_ptw", "DATA_ptw")
            tableMapping.ColumnMappings.Add("TIME_ptw", "TIME_ptw")
            tableMapping.ColumnMappings.Add("DESC_ptw", "DESC_ptw")
            tableMapping.ColumnMappings.Add("HOT_ptw", "HOT_ptw")
            tableMapping.ColumnMappings.Add("LOCAL_ptw", "LOCAL_ptw")
            tableMapping.ColumnMappings.Add("LOTOck_ptw", "LOTOck_ptw")
            tableMapping.ColumnMappings.Add("LOTOnum_ptw", "LOTOnum_ptw")
            tableMapping.ColumnMappings.Add("ATVsim_ptw", "ATVsim_ptw")
            tableMapping.ColumnMappings.Add("RISCOSad_ptw", "RISCOSad_ptw")
            tableMapping.ColumnMappings.Add("MOCck_ptw", "MOCck_ptw")
            tableMapping.ColumnMappings.Add("MOCnm_ptw", "MOCnm_ptw")
            tableMapping.ColumnMappings.Add("EPI_ptw", "EPI_ptw")
            tableMapping.ColumnMappings.Add("RECad_ptw", "RECad_ptw")
            tableMapping.ColumnMappings.Add("APRIck_ptw", "APRIck_ptw")
            tableMapping.ColumnMappings.Add("APRInum_ptw", "APRInum_ptw")
            tableMapping.ColumnMappings.Add("CARGAcritCK_ptw", "CARGAcritCK_ptw")
            tableMapping.ColumnMappings.Add("LISTAobCK_ptw", "LISTAobCK_ptw")
            tableMapping.ColumnMappings.Add("FLUIDOck_ptw", "FLUIDOck_ptw")
            tableMapping.ColumnMappings.Add("CESTOck_ptw", "CESTOck_ptw")
            tableMapping.ColumnMappings.Add("GUINCHOck_ptw", "GUINCHOck_ptw")
            tableMapping.ColumnMappings.Add("OUTROS_ptw", "OUTROS_ptw")
            tableMapping.ColumnMappings.Add("TESTEck_ptw", "TESTEck_ptw")
            tableMapping.ColumnMappings.Add("DATEtest_ptw", "DATEtest_ptw")
            tableMapping.ColumnMappings.Add("TIMEtest_ptw", "TIMEtest_ptw")
            tableMapping.ColumnMappings.Add("O2_ptw", "O2_ptw")
            tableMapping.ColumnMappings.Add("HC_ptw", "HC_ptw")
            tableMapping.ColumnMappings.Add("H2Sppm_ptw", "H2Sppm_ptw")
            tableMapping.ColumnMappings.Add("CO_ptw", "CO_ptw")
            tableMapping.ColumnMappings.Add("CO2_ptw", "CO2_ptw")
            tableMapping.ColumnMappings.Add("CHECKEDby_ptw", "CHECKEDby_ptw")
            tableMapping.ColumnMappings.Add("SNdet_ptw", "SNdet_ptw")
            tableMapping.ColumnMappings.Add("EXAUSTAOck_ptw", "EXAUSTAOck_ptw")
            tableMapping.ColumnMappings.Add("DATEexaust_ptw", "DATEexaust_ptw")
            tableMapping.ColumnMappings.Add("TIMEexaust_ptw", "TIMEexaust_ptw")
            tableMapping.ColumnMappings.Add("O2_2_ptw", "O2_2_ptw")
            tableMapping.ColumnMappings.Add("HC_2_ptw", "HC_2_ptw")
            tableMapping.ColumnMappings.Add("H2S_2ppm_ptw", "H2S_2ppm_ptw")
            tableMapping.ColumnMappings.Add("CO_2_ptw", "CO_2_ptw")
            tableMapping.ColumnMappings.Add("CO2_2_ptw", "CO2_2_ptw")
            tableMapping.ColumnMappings.Add("CHECKEDby_2_ptw", "CHECKEDby_2_ptw")
            tableMapping.ColumnMappings.Add("SNdet_2_ptw", "SNdet_2_ptw")
            tableMapping.ColumnMappings.Add("CRITck_ptw", "CRITck_ptw")
            tableMapping.ColumnMappings.Add("OUTofOPck_ptw", "OUTofOPck_ptw")
            tableMapping.ColumnMappings.Add("OUTofOPnom_ptw", "OUTofOPnom_ptw")
            tableMapping.ColumnMappings.Add("SENSORinCK_ptw", "SENSORinCK_ptw")
            tableMapping.ColumnMappings.Add("SENSORregCK_ptw", "SENSORregCK_ptw")
            tableMapping.ColumnMappings.Add("PLANOresgCK_ptw", "PLANOresgCK_ptw")
            tableMapping.ColumnMappings.Add("EQUIPEcomCK_ptw", "EQUIPEcomCK_ptw")
            tableMapping.ColumnMappings.Add("INTERCOMck_ptw", "INTERCOMck_ptw")
            tableMapping.ColumnMappings.Add("PESSOALck", "PESSOALck")
            tableMapping.ColumnMappings.Add("SUSPmot_ptw", "SUSPmot_ptw")
            tableMapping.ColumnMappings.Add("SUSPpor_ptw", "SUSPpor_ptw")
            tableMapping.ColumnMappings.Add("SUSPdate_ptw", "SUSPdate_ptw")
            tableMapping.ColumnMappings.Add("SUSPtime", "SUSPtime")
            tableMapping.ColumnMappings.Add("REATIVpor_ptw", "REATIVpor_ptw")
            tableMapping.ColumnMappings.Add("REATIVseg_ptw", "REATIVseg_ptw")
            tableMapping.ColumnMappings.Add("REATIVdate_ptw", "REATIVdate_ptw")
            tableMapping.ColumnMappings.Add("REATIVtime_ptw", "REATIVtime_ptw")
            tableMapping.ColumnMappings.Add("ISSUER_ptw", "ISSUER_ptw")
            tableMapping.ColumnMappings.Add("SUPERVISOR_ptw", "SUPERVISOR_ptw")
            tableMapping.ColumnMappings.Add("SUPERVISOR_R_ptw", "SUPERVISOR_R_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE01_ptw", "EXECUTANTE01_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE02_ptw", "EXECUTANTE02_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE03_ptw", "EXECUTANTE03_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE04_ptw", "EXECUTANTE04_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE05_ptw", "EXECUTANTE05_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE06_ptw", "EXECUTANTE06_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE07_ptw", "EXECUTANTE07_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE01_R_ptw", "EXECUTANTE01_R_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE02_R_ptw", "EXECUTANTE02_R_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE03_R_ptw", "EXECUTANTE03_R_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE04_R_ptw", "EXECUTANTE04_R_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE05_R_ptw", "EXECUTANTE05_R_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE06_R_ptw", "EXECUTANTE06_R_ptw")
            tableMapping.ColumnMappings.Add("EXECUTANTE07_R_ptw", "EXECUTANTE07_R_ptw")
            tableMapping.ColumnMappings.Add("LIDER_ptw", "LIDER_ptw")
            tableMapping.ColumnMappings.Add("LIDER_R_ptw", "LIDER_R_ptw")
            tableMapping.ColumnMappings.Add("LIDERdpt_ptw", "LIDERdpt_ptw")
            tableMapping.ColumnMappings.Add("LIBERADOR_ptw", "LIBERADOR_ptw")
            tableMapping.ColumnMappings.Add("LIBERADOR_R_ptw", "LIBERADOR_R_ptw")
            tableMapping.ColumnMappings.Add("OBSHOT01_ptw", "OBSHOT01_ptw")
            tableMapping.ColumnMappings.Add("OBSHOT01_R_ptw", "OBSHOT01_R_ptw")
            tableMapping.ColumnMappings.Add("OBSHOT02_ptw", "OBSHOT02_ptw")
            tableMapping.ColumnMappings.Add("OBSHOT02_R_ptw", "OBSHOT02_R_ptw")
            tableMapping.ColumnMappings.Add("VIGIA01_ptw", "VIGIA01_ptw")
            tableMapping.ColumnMappings.Add("VIGIA01_R_ptw", "VIGIA01_R_ptw")
            tableMapping.ColumnMappings.Add("VIGIA02_ptw", "VIGIA02_ptw")
            tableMapping.ColumnMappings.Add("VIGIA02_R_ptw", "VIGIA02_R_ptw")
            tableMapping.ColumnMappings.Add("SAFETY_ptw", "SAFETY_ptw")
            tableMapping.ColumnMappings.Add("SAFETY_R_ptw", "SAFETY_R_ptw")
            tableMapping.ColumnMappings.Add("OIM_ptW", "OIM_ptW")
            tableMapping.ColumnMappings.Add("OIM_R_ptW", "OIM_R_ptW")
            tableMapping.ColumnMappings.Add("ADMIN_ptw", "ADMIN_ptw")
            tableMapping.ColumnMappings.Add("ADMIN_R_ptw", "ADMIN_R_ptw")
            tableMapping.ColumnMappings.Add("ISSUERok_ptw", "ISSUERok_ptw")
            tableMapping.ColumnMappings.Add("LIDERok_ptw", "LIDERok_ptw")
            tableMapping.ColumnMappings.Add("LIBERADORok_ptw", "LIBERADORok_ptw")
            tableMapping.ColumnMappings.Add("SAFETYok_ptw", "SAFETYok_ptw")
            tableMapping.ColumnMappings.Add("OIMok_ptW", "OIMok_ptW")
            tableMapping.ColumnMappings.Add("ADMINok_ptw", "ADMINok_ptw")
            tableMapping.ColumnMappings.Add("SUPreq_ptw", "SUPreq_ptw")
            tableMapping.ColumnMappings.Add("SUPtipC_ptw", "SUPtipC_ptw")
            tableMapping.ColumnMappings.Add("SUPtipP_ptw", "SUPtipP_ptw")
            tableMapping.ColumnMappings.Add("SUPtipN_ptw", "SUPtipN_ptw")
            tableMapping.ColumnMappings.Add("SUPperiodo01x_PTW", "SUPperiodo01x_PTW")
            tableMapping.ColumnMappings.Add("SUPperiodo02x_PTW", "SUPperiodo02x_PTW")
            tableMapping.ColumnMappings.Add("SUPperiodo03x_PTW", "SUPperiodo03x_PTW")
            tableMapping.ColumnMappings.Add("SUPwho01_ptw", "SUPwho01_ptw")
            tableMapping.ColumnMappings.Add("SUPwho02_ptw", "SUPwho02_ptw")
            tableMapping.ColumnMappings.Add("SUPwho03_ptw", "SUPwho03_ptw")
            tableMapping.ColumnMappings.Add("SUPdate01_ptw", "SUPdate01_ptw")
            tableMapping.ColumnMappings.Add("SUPdate02_ptw", "SUPdate02_ptw")
            tableMapping.ColumnMappings.Add("SUPdate03_ptw", "SUPdate03_ptw")
            tableMapping.ColumnMappings.Add("SUPtime01_ptw", "SUPtime01_ptw")
            tableMapping.ColumnMappings.Add("SUPtime02_ptw", "SUPtime02_ptw")
            tableMapping.ColumnMappings.Add("SUPtime03_ptw", "SUPtime03_ptw")
            tableMapping.ColumnMappings.Add("impedimentoOBS_ptw", "impedimentoOBS_ptw")
            tableMapping.ColumnMappings.Add("ISSUERtxt_ptw", "ISSUERtxt_ptw")
            tableMapping.ColumnMappings.Add("fISSUER_ptw", "fISSUER_ptw")
            tableMapping.ColumnMappings.Add("fISSUERdata_ptw", "fISSUERdata_ptw")
            tableMapping.ColumnMappings.Add("fISSUERtime_ptw", "fISSUERtime_ptw")
            tableMapping.ColumnMappings.Add("fLIDER_ptw", "fLIDER_ptw")
            tableMapping.ColumnMappings.Add("fLIBERADOR_ptw", "fLIBERADOR_ptw")
            tableMapping.ColumnMappings.Add("fSAFETY_ptw", "fSAFETY_ptw")
            tableMapping.ColumnMappings.Add("fOIM_ptW", "fOIM_ptW")
            tableMapping.ColumnMappings.Add("fADMIN_ptw", "fADMIN_ptw")
            tableMapping.ColumnMappings.Add("fckTrab_ptw", "fckTrab_ptw")
            tableMapping.ColumnMappings.Add("fckTurno_ptw", "fckTurno_ptw")
            tableMapping.ColumnMappings.Add("fckCancel_ptw", "fckCancel_ptw")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `PTopen` WHERE ((`ID` = ?) AND ((? = 1 AND `STATUS_ptw` IS NULL) OR ("& _ 
                "`STATUS_ptw` = ?)) AND ((? = 1 AND `NUM_ptw` IS NULL) OR (`NUM_ptw` = ?)) AND (("& _ 
                "? = 1 AND `DATA_ptw` IS NULL) OR (`DATA_ptw` = ?)) AND ((? = 1 AND `TIME_ptw` IS"& _ 
                " NULL) OR (`TIME_ptw` = ?)) AND ((? = 1 AND `DESC_ptw` IS NULL) OR (`DESC_ptw` ="& _ 
                " ?)) AND ((? = 1 AND `HOT_ptw` IS NULL) OR (`HOT_ptw` = ?)) AND ((? = 1 AND `LOC"& _ 
                "AL_ptw` IS NULL) OR (`LOCAL_ptw` = ?)) AND ((? = 1 AND `LOTOck_ptw` IS NULL) OR "& _ 
                "(`LOTOck_ptw` = ?)) AND ((? = 1 AND `LOTOnum_ptw` IS NULL) OR (`LOTOnum_ptw` = ?"& _ 
                ")) AND ((? = 1 AND `ATVsim_ptw` IS NULL) OR (`ATVsim_ptw` = ?)) AND ((? = 1 AND "& _ 
                "`RISCOSad_ptw` IS NULL) OR (`RISCOSad_ptw` = ?)) AND ((? = 1 AND `MOCck_ptw` IS "& _ 
                "NULL) OR (`MOCck_ptw` = ?)) AND ((? = 1 AND `MOCnm_ptw` IS NULL) OR (`MOCnm_ptw`"& _ 
                " = ?)) AND ((? = 1 AND `EPI_ptw` IS NULL) OR (`EPI_ptw` = ?)) AND ((? = 1 AND `R"& _ 
                "ECad_ptw` IS NULL) OR (`RECad_ptw` = ?)) AND ((? = 1 AND `APRIck_ptw` IS NULL) O"& _ 
                "R (`APRIck_ptw` = ?)) AND ((? = 1 AND `APRInum_ptw` IS NULL) OR (`APRInum_ptw` ="& _ 
                " ?)) AND ((? = 1 AND `CARGAcritCK_ptw` IS NULL) OR (`CARGAcritCK_ptw` = ?)) AND "& _ 
                "((? = 1 AND `LISTAobCK_ptw` IS NULL) OR (`LISTAobCK_ptw` = ?)) AND ((? = 1 AND `"& _ 
                "FLUIDOck_ptw` IS NULL) OR (`FLUIDOck_ptw` = ?)) AND ((? = 1 AND `CESTOck_ptw` IS"& _ 
                " NULL) OR (`CESTOck_ptw` = ?)) AND ((? = 1 AND `GUINCHOck_ptw` IS NULL) OR (`GUI"& _ 
                "NCHOck_ptw` = ?)) AND ((? = 1 AND `OUTROS_ptw` IS NULL) OR (`OUTROS_ptw` = ?)) A"& _ 
                "ND ((? = 1 AND `TESTEck_ptw` IS NULL) OR (`TESTEck_ptw` = ?)) AND ((? = 1 AND `D"& _ 
                "ATEtest_ptw` IS NULL) OR (`DATEtest_ptw` = ?)) AND ((? = 1 AND `TIMEtest_ptw` IS"& _ 
                " NULL) OR (`TIMEtest_ptw` = ?)) AND ((? = 1 AND `O2_ptw` IS NULL) OR (`O2_ptw` ="& _ 
                " ?)) AND ((? = 1 AND `HC_ptw` IS NULL) OR (`HC_ptw` = ?)) AND ((? = 1 AND `H2Spp"& _ 
                "m_ptw` IS NULL) OR (`H2Sppm_ptw` = ?)) AND ((? = 1 AND `CO_ptw` IS NULL) OR (`CO"& _ 
                "_ptw` = ?)) AND ((? = 1 AND `CO2_ptw` IS NULL) OR (`CO2_ptw` = ?)) AND ((? = 1 A"& _ 
                "ND `CHECKEDby_ptw` IS NULL) OR (`CHECKEDby_ptw` = ?)) AND ((? = 1 AND `SNdet_ptw"& _ 
                "` IS NULL) OR (`SNdet_ptw` = ?)) AND ((? = 1 AND `EXAUSTAOck_ptw` IS NULL) OR (`"& _ 
                "EXAUSTAOck_ptw` = ?)) AND ((? = 1 AND `DATEexaust_ptw` IS NULL) OR (`DATEexaust_"& _ 
                "ptw` = ?)) AND ((? = 1 AND `TIMEexaust_ptw` IS NULL) OR (`TIMEexaust_ptw` = ?)) "& _ 
                "AND ((? = 1 AND `O2_2_ptw` IS NULL) OR (`O2_2_ptw` = ?)) AND ((? = 1 AND `HC_2_p"& _ 
                "tw` IS NULL) OR (`HC_2_ptw` = ?)) AND ((? = 1 AND `H2S_2ppm_ptw` IS NULL) OR (`H"& _ 
                "2S_2ppm_ptw` = ?)) AND ((? = 1 AND `CO_2_ptw` IS NULL) OR (`CO_2_ptw` = ?)) AND "& _ 
                "((? = 1 AND `CO2_2_ptw` IS NULL) OR (`CO2_2_ptw` = ?)) AND ((? = 1 AND `CHECKEDb"& _ 
                "y_2_ptw` IS NULL) OR (`CHECKEDby_2_ptw` = ?)) AND ((? = 1 AND `SNdet_2_ptw` IS N"& _ 
                "ULL) OR (`SNdet_2_ptw` = ?)) AND ((? = 1 AND `CRITck_ptw` IS NULL) OR (`CRITck_p"& _ 
                "tw` = ?)) AND ((? = 1 AND `OUTofOPck_ptw` IS NULL) OR (`OUTofOPck_ptw` = ?)) AND"& _ 
                " ((? = 1 AND `OUTofOPnom_ptw` IS NULL) OR (`OUTofOPnom_ptw` = ?)) AND ((? = 1 AN"& _ 
                "D `SENSORinCK_ptw` IS NULL) OR (`SENSORinCK_ptw` = ?)) AND ((? = 1 AND `SENSORre"& _ 
                "gCK_ptw` IS NULL) OR (`SENSORregCK_ptw` = ?)) AND ((? = 1 AND `PLANOresgCK_ptw` "& _ 
                "IS NULL) OR (`PLANOresgCK_ptw` = ?)) AND ((? = 1 AND `EQUIPEcomCK_ptw` IS NULL) "& _ 
                "OR (`EQUIPEcomCK_ptw` = ?)) AND ((? = 1 AND `INTERCOMck_ptw` IS NULL) OR (`INTER"& _ 
                "COMck_ptw` = ?)) AND ((? = 1 AND `PESSOALck` IS NULL) OR (`PESSOALck` = ?)) AND "& _ 
                "((? = 1 AND `SUSPmot_ptw` IS NULL) OR (`SUSPmot_ptw` = ?)) AND ((? = 1 AND `SUSP"& _ 
                "por_ptw` IS NULL) OR (`SUSPpor_ptw` = ?)) AND ((? = 1 AND `SUSPdate_ptw` IS NULL"& _ 
                ") OR (`SUSPdate_ptw` = ?)) AND ((? = 1 AND `SUSPtime` IS NULL) OR (`SUSPtime` = "& _ 
                "?)) AND ((? = 1 AND `REATIVpor_ptw` IS NULL) OR (`REATIVpor_ptw` = ?)) AND ((? ="& _ 
                " 1 AND `REATIVseg_ptw` IS NULL) OR (`REATIVseg_ptw` = ?)) AND ((? = 1 AND `REATI"& _ 
                "Vdate_ptw` IS NULL) OR (`REATIVdate_ptw` = ?)) AND ((? = 1 AND `REATIVtime_ptw` "& _ 
                "IS NULL) OR (`REATIVtime_ptw` = ?)) AND ((? = 1 AND `ISSUER_ptw` IS NULL) OR (`I"& _ 
                "SSUER_ptw` = ?)) AND ((? = 1 AND `SUPERVISOR_ptw` IS NULL) OR (`SUPERVISOR_ptw` "& _ 
                "= ?)) AND ((? = 1 AND `SUPERVISOR_R_ptw` IS NULL) OR (`SUPERVISOR_R_ptw` = ?)) A"& _ 
                "ND ((? = 1 AND `EXECUTANTE01_ptw` IS NULL) OR (`EXECUTANTE01_ptw` = ?)) AND ((? "& _ 
                "= 1 AND `EXECUTANTE02_ptw` IS NULL) OR (`EXECUTANTE02_ptw` = ?)) AND ((? = 1 AND"& _ 
                " `EXECUTANTE03_ptw` IS NULL) OR (`EXECUTANTE03_ptw` = ?)) AND ((? = 1 AND `EXECU"& _ 
                "TANTE04_ptw` IS NULL) OR (`EXECUTANTE04_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE05"& _ 
                "_ptw` IS NULL) OR (`EXECUTANTE05_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE06_ptw` I"& _ 
                "S NULL) OR (`EXECUTANTE06_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE07_ptw` IS NULL)"& _ 
                " OR (`EXECUTANTE07_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE01_R_ptw` IS NULL) OR ("& _ 
                "`EXECUTANTE01_R_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE02_R_ptw` IS NULL) OR (`EX"& _ 
                "ECUTANTE02_R_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE03_R_ptw` IS NULL) OR (`EXECU"& _ 
                "TANTE03_R_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE04_R_ptw` IS NULL) OR (`EXECUTAN"& _ 
                "TE04_R_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE05_R_ptw` IS NULL) OR (`EXECUTANTE0"& _ 
                "5_R_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE06_R_ptw` IS NULL) OR (`EXECUTANTE06_R"& _ 
                "_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE07_R_ptw` IS NULL) OR (`EXECUTANTE07_R_pt"& _ 
                "w` = ?)) AND ((? = 1 AND `LIDER_ptw` IS NULL) OR (`LIDER_ptw` = ?)) AND ((? = 1 "& _ 
                "AND `LIDER_R_ptw` IS NULL) OR (`LIDER_R_ptw` = ?)) AND ((? = 1 AND `LIDERdpt_ptw"& _ 
                "` IS NULL) OR (`LIDERdpt_ptw` = ?)) AND ((? = 1 AND `LIBERADOR_ptw` IS NULL) OR "& _ 
                "(`LIBERADOR_ptw` = ?)) AND ((? = 1 AND `LIBERADOR_R_ptw` IS NULL) OR (`LIBERADOR"& _ 
                "_R_ptw` = ?)) AND ((? = 1 AND `OBSHOT01_ptw` IS NULL) OR (`OBSHOT01_ptw` = ?)) A"& _ 
                "ND ((? = 1 AND `OBSHOT01_R_ptw` IS NULL) OR (`OBSHOT01_R_ptw` = ?)) AND ((? = 1 "& _ 
                "AND `OBSHOT02_ptw` IS NULL) OR (`OBSHOT02_ptw` = ?)) AND ((? = 1 AND `OBSHOT02_R"& _ 
                "_ptw` IS NULL) OR (`OBSHOT02_R_ptw` = ?)) AND ((? = 1 AND `VIGIA01_ptw` IS NULL)"& _ 
                " OR (`VIGIA01_ptw` = ?)) AND ((? = 1 AND `VIGIA01_R_ptw` IS NULL) OR (`VIGIA01_R"& _ 
                "_ptw` = ?)) AND ((? = 1 AND `VIGIA02_ptw` IS NULL) OR (`VIGIA02_ptw` = ?)) AND ("& _ 
                "(? = 1 AND `VIGIA02_R_ptw` IS NULL) OR (`VIGIA02_R_ptw` = ?)) AND ((? = 1 AND `S"& _ 
                "AFETY_ptw` IS NULL) OR (`SAFETY_ptw` = ?)) AND ((? = 1 AND `SAFETY_R_ptw` IS NUL"& _ 
                "L) OR (`SAFETY_R_ptw` = ?)) AND ((? = 1 AND `OIM_ptW` IS NULL) OR (`OIM_ptW` = ?"& _ 
                ")) AND ((? = 1 AND `OIM_R_ptW` IS NULL) OR (`OIM_R_ptW` = ?)) AND ((? = 1 AND `A"& _ 
                "DMIN_ptw` IS NULL) OR (`ADMIN_ptw` = ?)) AND ((? = 1 AND `ADMIN_R_ptw` IS NULL) "& _ 
                "OR (`ADMIN_R_ptw` = ?)) AND ((? = 1 AND `ISSUERok_ptw` IS NULL) OR (`ISSUERok_pt"& _ 
                "w` = ?)) AND ((? = 1 AND `LIDERok_ptw` IS NULL) OR (`LIDERok_ptw` = ?)) AND ((? "& _ 
                "= 1 AND `LIBERADORok_ptw` IS NULL) OR (`LIBERADORok_ptw` = ?)) AND ((? = 1 AND `"& _ 
                "SAFETYok_ptw` IS NULL) OR (`SAFETYok_ptw` = ?)) AND ((? = 1 AND `OIMok_ptW` IS N"& _ 
                "ULL) OR (`OIMok_ptW` = ?)) AND ((? = 1 AND `ADMINok_ptw` IS NULL) OR (`ADMINok_p"& _ 
                "tw` = ?)) AND ((? = 1 AND `SUPreq_ptw` IS NULL) OR (`SUPreq_ptw` = ?)) AND ((? ="& _ 
                " 1 AND `SUPtipC_ptw` IS NULL) OR (`SUPtipC_ptw` = ?)) AND ((? = 1 AND `SUPtipP_p"& _ 
                "tw` IS NULL) OR (`SUPtipP_ptw` = ?)) AND ((? = 1 AND `SUPtipN_ptw` IS NULL) OR ("& _ 
                "`SUPtipN_ptw` = ?)) AND ((? = 1 AND `SUPperiodo01x_PTW` IS NULL) OR (`SUPperiodo"& _ 
                "01x_PTW` = ?)) AND ((? = 1 AND `SUPperiodo02x_PTW` IS NULL) OR (`SUPperiodo02x_P"& _ 
                "TW` = ?)) AND ((? = 1 AND `SUPperiodo03x_PTW` IS NULL) OR (`SUPperiodo03x_PTW` ="& _ 
                " ?)) AND ((? = 1 AND `SUPwho01_ptw` IS NULL) OR (`SUPwho01_ptw` = ?)) AND ((? = "& _ 
                "1 AND `SUPwho02_ptw` IS NULL) OR (`SUPwho02_ptw` = ?)) AND ((? = 1 AND `SUPwho03"& _ 
                "_ptw` IS NULL) OR (`SUPwho03_ptw` = ?)) AND ((? = 1 AND `SUPdate01_ptw` IS NULL)"& _ 
                " OR (`SUPdate01_ptw` = ?)) AND ((? = 1 AND `SUPdate02_ptw` IS NULL) OR (`SUPdate"& _ 
                "02_ptw` = ?)) AND ((? = 1 AND `SUPdate03_ptw` IS NULL) OR (`SUPdate03_ptw` = ?))"& _ 
                " AND ((? = 1 AND `SUPtime01_ptw` IS NULL) OR (`SUPtime01_ptw` = ?)) AND ((? = 1 "& _ 
                "AND `SUPtime02_ptw` IS NULL) OR (`SUPtime02_ptw` = ?)) AND ((? = 1 AND `SUPtime0"& _ 
                "3_ptw` IS NULL) OR (`SUPtime03_ptw` = ?)) AND ((? = 1 AND `impedimentoOBS_ptw` I"& _ 
                "S NULL) OR (`impedimentoOBS_ptw` = ?)) AND ((? = 1 AND `ISSUERtxt_ptw` IS NULL) "& _ 
                "OR (`ISSUERtxt_ptw` = ?)) AND ((? = 1 AND `fISSUER_ptw` IS NULL) OR (`fISSUER_pt"& _ 
                "w` = ?)) AND ((? = 1 AND `fISSUERdata_ptw` IS NULL) OR (`fISSUERdata_ptw` = ?)) "& _ 
                "AND ((? = 1 AND `fISSUERtime_ptw` IS NULL) OR (`fISSUERtime_ptw` = ?)) AND ((? ="& _ 
                " 1 AND `fLIDER_ptw` IS NULL) OR (`fLIDER_ptw` = ?)) AND ((? = 1 AND `fLIBERADOR_"& _ 
                "ptw` IS NULL) OR (`fLIBERADOR_ptw` = ?)) AND ((? = 1 AND `fSAFETY_ptw` IS NULL) "& _ 
                "OR (`fSAFETY_ptw` = ?)) AND ((? = 1 AND `fOIM_ptW` IS NULL) OR (`fOIM_ptW` = ?))"& _ 
                " AND ((? = 1 AND `fADMIN_ptw` IS NULL) OR (`fADMIN_ptw` = ?)) AND ((? = 1 AND `f"& _ 
                "ckTrab_ptw` IS NULL) OR (`fckTrab_ptw` = ?)) AND ((? = 1 AND `fckTurno_ptw` IS N"& _ 
                "ULL) OR (`fckTurno_ptw` = ?)) AND ((? = 1 AND `fckCancel_ptw` IS NULL) OR (`fckC"& _ 
                "ancel_ptw` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_STATUS_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STATUS_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_STATUS_ptw", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STATUS_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NUM_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NUM_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NUM_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NUM_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DATA_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATA_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DATA_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATA_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TIME_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIME_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TIME_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIME_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DESC_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DESC_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DESC_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DESC_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_HOT_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HOT_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_HOT_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HOT_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LOCAL_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOCAL_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LOCAL_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOCAL_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LOTOck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOTOck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LOTOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOTOck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LOTOnum_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOTOnum_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LOTOnum_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOTOnum_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ATVsim_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ATVsim_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ATVsim_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ATVsim_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RISCOSad_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RISCOSad_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RISCOSad_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RISCOSad_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_MOCck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOCck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_MOCck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOCck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_MOCnm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOCnm_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_MOCnm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOCnm_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EPI_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EPI_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EPI_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EPI_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RECad_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECad_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RECad_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECad_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_APRIck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APRIck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_APRIck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APRIck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_APRInum_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APRInum_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_APRInum_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APRInum_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CARGAcritCK_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CARGAcritCK_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CARGAcritCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CARGAcritCK_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LISTAobCK_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LISTAobCK_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LISTAobCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LISTAobCK_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FLUIDOck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FLUIDOck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FLUIDOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FLUIDOck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CESTOck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CESTOck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CESTOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CESTOck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_GUINCHOck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GUINCHOck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_GUINCHOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GUINCHOck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OUTROS_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTROS_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OUTROS_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTROS_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TESTEck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TESTEck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TESTEck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TESTEck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DATEtest_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATEtest_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DATEtest_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATEtest_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TIMEtest_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIMEtest_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TIMEtest_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIMEtest_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_O2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "O2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_O2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "O2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_HC_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HC_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_HC_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HC_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_H2Sppm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "H2Sppm_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_H2Sppm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "H2Sppm_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CO_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CO_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CO2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CO2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CHECKEDby_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHECKEDby_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CHECKEDby_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHECKEDby_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SNdet_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SNdet_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SNdet_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SNdet_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXAUSTAOck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXAUSTAOck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXAUSTAOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXAUSTAOck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DATEexaust_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATEexaust_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DATEexaust_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATEexaust_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TIMEexaust_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIMEexaust_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TIMEexaust_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIMEexaust_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_O2_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "O2_2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_O2_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "O2_2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_HC_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HC_2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_HC_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HC_2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_H2S_2ppm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "H2S_2ppm_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_H2S_2ppm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "H2S_2ppm_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CO_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO_2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CO_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO_2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CO2_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO2_2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CO2_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO2_2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CHECKEDby_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHECKEDby_2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CHECKEDby_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHECKEDby_2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SNdet_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SNdet_2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SNdet_2_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SNdet_2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CRITck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CRITck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CRITck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CRITck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OUTofOPck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTofOPck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OUTofOPck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTofOPck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OUTofOPnom_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTofOPnom_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OUTofOPnom_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTofOPnom_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SENSORinCK_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENSORinCK_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SENSORinCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENSORinCK_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SENSORregCK_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENSORregCK_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SENSORregCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENSORregCK_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PLANOresgCK_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PLANOresgCK_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PLANOresgCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PLANOresgCK_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EQUIPEcomCK_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EQUIPEcomCK_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EQUIPEcomCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EQUIPEcomCK_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_INTERCOMck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "INTERCOMck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_INTERCOMck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "INTERCOMck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PESSOALck", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PESSOALck", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PESSOALck", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PESSOALck", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUSPmot_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPmot_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUSPmot_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPmot_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUSPpor_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPpor_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUSPpor_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPpor_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUSPdate_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPdate_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUSPdate_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPdate_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUSPtime", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPtime", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUSPtime", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPtime", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_REATIVpor_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVpor_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_REATIVpor_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVpor_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_REATIVseg_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVseg_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_REATIVseg_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVseg_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_REATIVdate_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVdate_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_REATIVdate_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVdate_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_REATIVtime_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVtime_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_REATIVtime_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVtime_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ISSUER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUER_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ISSUER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUER_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPERVISOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPERVISOR_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPERVISOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPERVISOR_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPERVISOR_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPERVISOR_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPERVISOR_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPERVISOR_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE01_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE01_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE02_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE02_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE03_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE03_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE04_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE04_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE04_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE04_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE05_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE05_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE05_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE05_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE06_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE06_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE06_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE06_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE07_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE07_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE07_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE07_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE01_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE01_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE02_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE02_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE03_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE03_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE03_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE03_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE04_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE04_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE04_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE04_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE05_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE05_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE05_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE05_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE06_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE06_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE06_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE06_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE07_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE07_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE07_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE07_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIDER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIDER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIDER_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIDER_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIDERdpt_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDERdpt_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIDERdpt_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDERdpt_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIBERADOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIBERADOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIBERADOR_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIBERADOR_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OBSHOT01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT01_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OBSHOT01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT01_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OBSHOT01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT01_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OBSHOT01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT01_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OBSHOT02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT02_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OBSHOT02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT02_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OBSHOT02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT02_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OBSHOT02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT02_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VIGIA01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA01_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VIGIA01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA01_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VIGIA01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA01_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VIGIA01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA01_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VIGIA02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA02_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VIGIA02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA02_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VIGIA02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA02_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VIGIA02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA02_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SAFETY_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SAFETY_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SAFETY_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SAFETY_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OIM_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_ptW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OIM_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_ptW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OIM_R_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_R_ptW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OIM_R_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_R_ptW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ADMIN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ADMIN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ADMIN_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ADMIN_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ISSUERok_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUERok_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ISSUERok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUERok_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIDERok_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDERok_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIDERok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDERok_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIBERADORok_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADORok_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIBERADORok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADORok_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SAFETYok_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETYok_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SAFETYok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETYok_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OIMok_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIMok_ptW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OIMok_ptW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIMok_ptW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ADMINok_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMINok_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ADMINok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMINok_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPreq_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPreq_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPreq_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPreq_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPtipC_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipC_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPtipC_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipC_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPtipP_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipP_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPtipP_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipP_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPtipN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipN_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPtipN_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipN_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPperiodo01x_PTW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo01x_PTW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPperiodo01x_PTW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo01x_PTW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPperiodo02x_PTW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo02x_PTW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPperiodo02x_PTW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo02x_PTW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPperiodo03x_PTW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo03x_PTW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPperiodo03x_PTW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo03x_PTW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPwho01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho01_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPwho01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho01_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPwho02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho02_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPwho02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho02_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPwho03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho03_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPwho03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho03_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPdate01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate01_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPdate01_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate01_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPdate02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate02_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPdate02_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate02_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPdate03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate03_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPdate03_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate03_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPtime01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime01_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPtime01_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime01_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPtime02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime02_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPtime02_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime02_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPtime03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime03_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPtime03_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime03_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_impedimentoOBS_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "impedimentoOBS_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_impedimentoOBS_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "impedimentoOBS_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ISSUERtxt_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUERtxt_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ISSUERtxt_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUERtxt_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fISSUER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUER_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fISSUER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUER_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fISSUERdata_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUERdata_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fISSUERdata_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUERdata_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fISSUERtime_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUERtime_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fISSUERtime_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUERtime_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fLIDER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fLIDER_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fLIDER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fLIDER_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fLIBERADOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fLIBERADOR_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fLIBERADOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fLIBERADOR_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fSAFETY_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fSAFETY_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fSAFETY_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fSAFETY_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fOIM_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fOIM_ptW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fOIM_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fOIM_ptW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fADMIN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fADMIN_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fADMIN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fADMIN_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fckTrab_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckTrab_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fckTrab_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckTrab_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fckTurno_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckTurno_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fckTurno_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckTurno_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fckCancel_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckCancel_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fckCancel_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckCancel_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `PTopen` (`STATUS_ptw`, `NUM_ptw`, `DATA_ptw`, `TIME_ptw`, `DESC_ptw`"& _ 
                ", `HOT_ptw`, `LOCAL_ptw`, `LOTOck_ptw`, `LOTOnum_ptw`, `ATVsim_ptw`, `RISCOSad_p"& _ 
                "tw`, `MOCck_ptw`, `MOCnm_ptw`, `EPI_ptw`, `RECad_ptw`, `APRIck_ptw`, `APRInum_pt"& _ 
                "w`, `CARGAcritCK_ptw`, `LISTAobCK_ptw`, `FLUIDOck_ptw`, `CESTOck_ptw`, `GUINCHOc"& _ 
                "k_ptw`, `OUTROS_ptw`, `TESTEck_ptw`, `DATEtest_ptw`, `TIMEtest_ptw`, `O2_ptw`, `"& _ 
                "HC_ptw`, `H2Sppm_ptw`, `CO_ptw`, `CO2_ptw`, `CHECKEDby_ptw`, `SNdet_ptw`, `EXAUS"& _ 
                "TAOck_ptw`, `DATEexaust_ptw`, `TIMEexaust_ptw`, `O2_2_ptw`, `HC_2_ptw`, `H2S_2pp"& _ 
                "m_ptw`, `CO_2_ptw`, `CO2_2_ptw`, `CHECKEDby_2_ptw`, `SNdet_2_ptw`, `CRITck_ptw`,"& _ 
                " `OUTofOPck_ptw`, `OUTofOPnom_ptw`, `SENSORinCK_ptw`, `SENSORregCK_ptw`, `PLANOr"& _ 
                "esgCK_ptw`, `EQUIPEcomCK_ptw`, `INTERCOMck_ptw`, `PESSOALck`, `SUSPmot_ptw`, `SU"& _ 
                "SPpor_ptw`, `SUSPdate_ptw`, `SUSPtime`, `REATIVpor_ptw`, `REATIVseg_ptw`, `REATI"& _ 
                "Vdate_ptw`, `REATIVtime_ptw`, `ISSUER_ptw`, `SUPERVISOR_ptw`, `SUPERVISOR_R_ptw`"& _ 
                ", `EXECUTANTE01_ptw`, `EXECUTANTE02_ptw`, `EXECUTANTE03_ptw`, `EXECUTANTE04_ptw`"& _ 
                ", `EXECUTANTE05_ptw`, `EXECUTANTE06_ptw`, `EXECUTANTE07_ptw`, `EXECUTANTE01_R_pt"& _ 
                "w`, `EXECUTANTE02_R_ptw`, `EXECUTANTE03_R_ptw`, `EXECUTANTE04_R_ptw`, `EXECUTANT"& _ 
                "E05_R_ptw`, `EXECUTANTE06_R_ptw`, `EXECUTANTE07_R_ptw`, `LIDER_ptw`, `LIDER_R_pt"& _ 
                "w`, `LIDERdpt_ptw`, `LIBERADOR_ptw`, `LIBERADOR_R_ptw`, `OBSHOT01_ptw`, `OBSHOT0"& _ 
                "1_R_ptw`, `OBSHOT02_ptw`, `OBSHOT02_R_ptw`, `VIGIA01_ptw`, `VIGIA01_R_ptw`, `VIG"& _ 
                "IA02_ptw`, `VIGIA02_R_ptw`, `SAFETY_ptw`, `SAFETY_R_ptw`, `OIM_ptW`, `OIM_R_ptW`"& _ 
                ", `ADMIN_ptw`, `ADMIN_R_ptw`, `ISSUERok_ptw`, `LIDERok_ptw`, `LIBERADORok_ptw`, "& _ 
                "`SAFETYok_ptw`, `OIMok_ptW`, `ADMINok_ptw`, `SUPreq_ptw`, `SUPtipC_ptw`, `SUPtip"& _ 
                "P_ptw`, `SUPtipN_ptw`, `SUPperiodo01x_PTW`, `SUPperiodo02x_PTW`, `SUPperiodo03x_"& _ 
                "PTW`, `SUPwho01_ptw`, `SUPwho02_ptw`, `SUPwho03_ptw`, `SUPdate01_ptw`, `SUPdate0"& _ 
                "2_ptw`, `SUPdate03_ptw`, `SUPtime01_ptw`, `SUPtime02_ptw`, `SUPtime03_ptw`, `imp"& _ 
                "edimentoOBS_ptw`, `ISSUERtxt_ptw`, `fISSUER_ptw`, `fISSUERdata_ptw`, `fISSUERtim"& _ 
                "e_ptw`, `fLIDER_ptw`, `fLIBERADOR_ptw`, `fSAFETY_ptw`, `fOIM_ptW`, `fADMIN_ptw`,"& _ 
                " `fckTrab_ptw`, `fckTurno_ptw`, `fckCancel_ptw`) VALUES (?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("STATUS_ptw", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STATUS_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NUM_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NUM_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DATA_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATA_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TIME_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIME_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DESC_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DESC_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HOT_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HOT_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LOCAL_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOCAL_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LOTOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOTOck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LOTOnum_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOTOnum_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ATVsim_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ATVsim_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RISCOSad_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RISCOSad_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("MOCck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOCck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("MOCnm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOCnm_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EPI_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EPI_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RECad_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECad_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APRIck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APRIck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APRInum_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APRInum_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CARGAcritCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CARGAcritCK_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LISTAobCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LISTAobCK_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FLUIDOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FLUIDOck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CESTOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CESTOck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("GUINCHOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GUINCHOck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OUTROS_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTROS_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TESTEck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TESTEck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DATEtest_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATEtest_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TIMEtest_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIMEtest_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("O2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "O2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HC_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HC_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("H2Sppm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "H2Sppm_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CO_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CO2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CHECKEDby_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHECKEDby_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SNdet_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SNdet_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXAUSTAOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXAUSTAOck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DATEexaust_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATEexaust_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TIMEexaust_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIMEexaust_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("O2_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "O2_2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HC_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HC_2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("H2S_2ppm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "H2S_2ppm_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CO_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO_2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CO2_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO2_2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CHECKEDby_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHECKEDby_2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SNdet_2_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SNdet_2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CRITck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CRITck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OUTofOPck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTofOPck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OUTofOPnom_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTofOPnom_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SENSORinCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENSORinCK_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SENSORregCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENSORregCK_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PLANOresgCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PLANOresgCK_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EQUIPEcomCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EQUIPEcomCK_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("INTERCOMck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "INTERCOMck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PESSOALck", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PESSOALck", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUSPmot_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPmot_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUSPpor_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPpor_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUSPdate_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPdate_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUSPtime", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPtime", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("REATIVpor_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVpor_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("REATIVseg_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVseg_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("REATIVdate_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVdate_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("REATIVtime_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVtime_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ISSUER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUER_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPERVISOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPERVISOR_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPERVISOR_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPERVISOR_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE01_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE02_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE03_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE04_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE04_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE05_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE05_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE06_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE06_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE07_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE07_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE01_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE02_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE03_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE03_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE04_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE04_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE05_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE05_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE06_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE06_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE07_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE07_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIDER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIDER_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIDERdpt_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDERdpt_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIBERADOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIBERADOR_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OBSHOT01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT01_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OBSHOT01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT01_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OBSHOT02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT02_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OBSHOT02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT02_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VIGIA01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA01_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VIGIA01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA01_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VIGIA02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA02_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VIGIA02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA02_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SAFETY_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SAFETY_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OIM_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_ptW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OIM_R_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_R_ptW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ADMIN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ADMIN_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ISSUERok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUERok_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIDERok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDERok_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIBERADORok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADORok_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SAFETYok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETYok_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OIMok_ptW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIMok_ptW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ADMINok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMINok_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPreq_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPreq_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPtipC_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipC_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPtipP_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipP_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPtipN_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipN_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPperiodo01x_PTW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo01x_PTW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPperiodo02x_PTW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo02x_PTW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPperiodo03x_PTW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo03x_PTW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPwho01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho01_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPwho02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho02_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPwho03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho03_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPdate01_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate01_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPdate02_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate02_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPdate03_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate03_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPtime01_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime01_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPtime02_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime02_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPtime03_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime03_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("impedimentoOBS_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "impedimentoOBS_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ISSUERtxt_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUERtxt_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fISSUER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUER_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fISSUERdata_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUERdata_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fISSUERtime_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUERtime_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fLIDER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fLIDER_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fLIBERADOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fLIBERADOR_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fSAFETY_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fSAFETY_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fOIM_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fOIM_ptW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fADMIN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fADMIN_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fckTrab_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckTrab_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fckTurno_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckTurno_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fckCancel_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckCancel_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `PTopen` SET `STATUS_ptw` = ?, `NUM_ptw` = ?, `DATA_ptw` = ?, `TIME_ptw` ="& _ 
                " ?, `DESC_ptw` = ?, `HOT_ptw` = ?, `LOCAL_ptw` = ?, `LOTOck_ptw` = ?, `LOTOnum_p"& _ 
                "tw` = ?, `ATVsim_ptw` = ?, `RISCOSad_ptw` = ?, `MOCck_ptw` = ?, `MOCnm_ptw` = ?,"& _ 
                " `EPI_ptw` = ?, `RECad_ptw` = ?, `APRIck_ptw` = ?, `APRInum_ptw` = ?, `CARGAcrit"& _ 
                "CK_ptw` = ?, `LISTAobCK_ptw` = ?, `FLUIDOck_ptw` = ?, `CESTOck_ptw` = ?, `GUINCH"& _ 
                "Ock_ptw` = ?, `OUTROS_ptw` = ?, `TESTEck_ptw` = ?, `DATEtest_ptw` = ?, `TIMEtest"& _ 
                "_ptw` = ?, `O2_ptw` = ?, `HC_ptw` = ?, `H2Sppm_ptw` = ?, `CO_ptw` = ?, `CO2_ptw`"& _ 
                " = ?, `CHECKEDby_ptw` = ?, `SNdet_ptw` = ?, `EXAUSTAOck_ptw` = ?, `DATEexaust_pt"& _ 
                "w` = ?, `TIMEexaust_ptw` = ?, `O2_2_ptw` = ?, `HC_2_ptw` = ?, `H2S_2ppm_ptw` = ?"& _ 
                ", `CO_2_ptw` = ?, `CO2_2_ptw` = ?, `CHECKEDby_2_ptw` = ?, `SNdet_2_ptw` = ?, `CR"& _ 
                "ITck_ptw` = ?, `OUTofOPck_ptw` = ?, `OUTofOPnom_ptw` = ?, `SENSORinCK_ptw` = ?, "& _ 
                "`SENSORregCK_ptw` = ?, `PLANOresgCK_ptw` = ?, `EQUIPEcomCK_ptw` = ?, `INTERCOMck"& _ 
                "_ptw` = ?, `PESSOALck` = ?, `SUSPmot_ptw` = ?, `SUSPpor_ptw` = ?, `SUSPdate_ptw`"& _ 
                " = ?, `SUSPtime` = ?, `REATIVpor_ptw` = ?, `REATIVseg_ptw` = ?, `REATIVdate_ptw`"& _ 
                " = ?, `REATIVtime_ptw` = ?, `ISSUER_ptw` = ?, `SUPERVISOR_ptw` = ?, `SUPERVISOR_"& _ 
                "R_ptw` = ?, `EXECUTANTE01_ptw` = ?, `EXECUTANTE02_ptw` = ?, `EXECUTANTE03_ptw` ="& _ 
                " ?, `EXECUTANTE04_ptw` = ?, `EXECUTANTE05_ptw` = ?, `EXECUTANTE06_ptw` = ?, `EXE"& _ 
                "CUTANTE07_ptw` = ?, `EXECUTANTE01_R_ptw` = ?, `EXECUTANTE02_R_ptw` = ?, `EXECUTA"& _ 
                "NTE03_R_ptw` = ?, `EXECUTANTE04_R_ptw` = ?, `EXECUTANTE05_R_ptw` = ?, `EXECUTANT"& _ 
                "E06_R_ptw` = ?, `EXECUTANTE07_R_ptw` = ?, `LIDER_ptw` = ?, `LIDER_R_ptw` = ?, `L"& _ 
                "IDERdpt_ptw` = ?, `LIBERADOR_ptw` = ?, `LIBERADOR_R_ptw` = ?, `OBSHOT01_ptw` = ?"& _ 
                ", `OBSHOT01_R_ptw` = ?, `OBSHOT02_ptw` = ?, `OBSHOT02_R_ptw` = ?, `VIGIA01_ptw` "& _ 
                "= ?, `VIGIA01_R_ptw` = ?, `VIGIA02_ptw` = ?, `VIGIA02_R_ptw` = ?, `SAFETY_ptw` ="& _ 
                " ?, `SAFETY_R_ptw` = ?, `OIM_ptW` = ?, `OIM_R_ptW` = ?, `ADMIN_ptw` = ?, `ADMIN_"& _ 
                "R_ptw` = ?, `ISSUERok_ptw` = ?, `LIDERok_ptw` = ?, `LIBERADORok_ptw` = ?, `SAFET"& _ 
                "Yok_ptw` = ?, `OIMok_ptW` = ?, `ADMINok_ptw` = ?, `SUPreq_ptw` = ?, `SUPtipC_ptw"& _ 
                "` = ?, `SUPtipP_ptw` = ?, `SUPtipN_ptw` = ?, `SUPperiodo01x_PTW` = ?, `SUPperiod"& _ 
                "o02x_PTW` = ?, `SUPperiodo03x_PTW` = ?, `SUPwho01_ptw` = ?, `SUPwho02_ptw` = ?, "& _ 
                "`SUPwho03_ptw` = ?, `SUPdate01_ptw` = ?, `SUPdate02_ptw` = ?, `SUPdate03_ptw` = "& _ 
                "?, `SUPtime01_ptw` = ?, `SUPtime02_ptw` = ?, `SUPtime03_ptw` = ?, `impedimentoOB"& _ 
                "S_ptw` = ?, `ISSUERtxt_ptw` = ?, `fISSUER_ptw` = ?, `fISSUERdata_ptw` = ?, `fISS"& _ 
                "UERtime_ptw` = ?, `fLIDER_ptw` = ?, `fLIBERADOR_ptw` = ?, `fSAFETY_ptw` = ?, `fO"& _ 
                "IM_ptW` = ?, `fADMIN_ptw` = ?, `fckTrab_ptw` = ?, `fckTurno_ptw` = ?, `fckCancel"& _ 
                "_ptw` = ? WHERE ((`ID` = ?) AND ((? = 1 AND `STATUS_ptw` IS NULL) OR (`STATUS_pt"& _ 
                "w` = ?)) AND ((? = 1 AND `NUM_ptw` IS NULL) OR (`NUM_ptw` = ?)) AND ((? = 1 AND "& _ 
                "`DATA_ptw` IS NULL) OR (`DATA_ptw` = ?)) AND ((? = 1 AND `TIME_ptw` IS NULL) OR "& _ 
                "(`TIME_ptw` = ?)) AND ((? = 1 AND `DESC_ptw` IS NULL) OR (`DESC_ptw` = ?)) AND ("& _ 
                "(? = 1 AND `HOT_ptw` IS NULL) OR (`HOT_ptw` = ?)) AND ((? = 1 AND `LOCAL_ptw` IS"& _ 
                " NULL) OR (`LOCAL_ptw` = ?)) AND ((? = 1 AND `LOTOck_ptw` IS NULL) OR (`LOTOck_p"& _ 
                "tw` = ?)) AND ((? = 1 AND `LOTOnum_ptw` IS NULL) OR (`LOTOnum_ptw` = ?)) AND ((?"& _ 
                " = 1 AND `ATVsim_ptw` IS NULL) OR (`ATVsim_ptw` = ?)) AND ((? = 1 AND `RISCOSad_"& _ 
                "ptw` IS NULL) OR (`RISCOSad_ptw` = ?)) AND ((? = 1 AND `MOCck_ptw` IS NULL) OR ("& _ 
                "`MOCck_ptw` = ?)) AND ((? = 1 AND `MOCnm_ptw` IS NULL) OR (`MOCnm_ptw` = ?)) AND"& _ 
                " ((? = 1 AND `EPI_ptw` IS NULL) OR (`EPI_ptw` = ?)) AND ((? = 1 AND `RECad_ptw` "& _ 
                "IS NULL) OR (`RECad_ptw` = ?)) AND ((? = 1 AND `APRIck_ptw` IS NULL) OR (`APRIck"& _ 
                "_ptw` = ?)) AND ((? = 1 AND `APRInum_ptw` IS NULL) OR (`APRInum_ptw` = ?)) AND ("& _ 
                "(? = 1 AND `CARGAcritCK_ptw` IS NULL) OR (`CARGAcritCK_ptw` = ?)) AND ((? = 1 AN"& _ 
                "D `LISTAobCK_ptw` IS NULL) OR (`LISTAobCK_ptw` = ?)) AND ((? = 1 AND `FLUIDOck_p"& _ 
                "tw` IS NULL) OR (`FLUIDOck_ptw` = ?)) AND ((? = 1 AND `CESTOck_ptw` IS NULL) OR "& _ 
                "(`CESTOck_ptw` = ?)) AND ((? = 1 AND `GUINCHOck_ptw` IS NULL) OR (`GUINCHOck_ptw"& _ 
                "` = ?)) AND ((? = 1 AND `OUTROS_ptw` IS NULL) OR (`OUTROS_ptw` = ?)) AND ((? = 1"& _ 
                " AND `TESTEck_ptw` IS NULL) OR (`TESTEck_ptw` = ?)) AND ((? = 1 AND `DATEtest_pt"& _ 
                "w` IS NULL) OR (`DATEtest_ptw` = ?)) AND ((? = 1 AND `TIMEtest_ptw` IS NULL) OR "& _ 
                "(`TIMEtest_ptw` = ?)) AND ((? = 1 AND `O2_ptw` IS NULL) OR (`O2_ptw` = ?)) AND ("& _ 
                "(? = 1 AND `HC_ptw` IS NULL) OR (`HC_ptw` = ?)) AND ((? = 1 AND `H2Sppm_ptw` IS "& _ 
                "NULL) OR (`H2Sppm_ptw` = ?)) AND ((? = 1 AND `CO_ptw` IS NULL) OR (`CO_ptw` = ?)"& _ 
                ") AND ((? = 1 AND `CO2_ptw` IS NULL) OR (`CO2_ptw` = ?)) AND ((? = 1 AND `CHECKE"& _ 
                "Dby_ptw` IS NULL) OR (`CHECKEDby_ptw` = ?)) AND ((? = 1 AND `SNdet_ptw` IS NULL)"& _ 
                " OR (`SNdet_ptw` = ?)) AND ((? = 1 AND `EXAUSTAOck_ptw` IS NULL) OR (`EXAUSTAOck"& _ 
                "_ptw` = ?)) AND ((? = 1 AND `DATEexaust_ptw` IS NULL) OR (`DATEexaust_ptw` = ?))"& _ 
                " AND ((? = 1 AND `TIMEexaust_ptw` IS NULL) OR (`TIMEexaust_ptw` = ?)) AND ((? = "& _ 
                "1 AND `O2_2_ptw` IS NULL) OR (`O2_2_ptw` = ?)) AND ((? = 1 AND `HC_2_ptw` IS NUL"& _ 
                "L) OR (`HC_2_ptw` = ?)) AND ((? = 1 AND `H2S_2ppm_ptw` IS NULL) OR (`H2S_2ppm_pt"& _ 
                "w` = ?)) AND ((? = 1 AND `CO_2_ptw` IS NULL) OR (`CO_2_ptw` = ?)) AND ((? = 1 AN"& _ 
                "D `CO2_2_ptw` IS NULL) OR (`CO2_2_ptw` = ?)) AND ((? = 1 AND `CHECKEDby_2_ptw` I"& _ 
                "S NULL) OR (`CHECKEDby_2_ptw` = ?)) AND ((? = 1 AND `SNdet_2_ptw` IS NULL) OR (`"& _ 
                "SNdet_2_ptw` = ?)) AND ((? = 1 AND `CRITck_ptw` IS NULL) OR (`CRITck_ptw` = ?)) "& _ 
                "AND ((? = 1 AND `OUTofOPck_ptw` IS NULL) OR (`OUTofOPck_ptw` = ?)) AND ((? = 1 A"& _ 
                "ND `OUTofOPnom_ptw` IS NULL) OR (`OUTofOPnom_ptw` = ?)) AND ((? = 1 AND `SENSORi"& _ 
                "nCK_ptw` IS NULL) OR (`SENSORinCK_ptw` = ?)) AND ((? = 1 AND `SENSORregCK_ptw` I"& _ 
                "S NULL) OR (`SENSORregCK_ptw` = ?)) AND ((? = 1 AND `PLANOresgCK_ptw` IS NULL) O"& _ 
                "R (`PLANOresgCK_ptw` = ?)) AND ((? = 1 AND `EQUIPEcomCK_ptw` IS NULL) OR (`EQUIP"& _ 
                "EcomCK_ptw` = ?)) AND ((? = 1 AND `INTERCOMck_ptw` IS NULL) OR (`INTERCOMck_ptw`"& _ 
                " = ?)) AND ((? = 1 AND `PESSOALck` IS NULL) OR (`PESSOALck` = ?)) AND ((? = 1 AN"& _ 
                "D `SUSPmot_ptw` IS NULL) OR (`SUSPmot_ptw` = ?)) AND ((? = 1 AND `SUSPpor_ptw` I"& _ 
                "S NULL) OR (`SUSPpor_ptw` = ?)) AND ((? = 1 AND `SUSPdate_ptw` IS NULL) OR (`SUS"& _ 
                "Pdate_ptw` = ?)) AND ((? = 1 AND `SUSPtime` IS NULL) OR (`SUSPtime` = ?)) AND (("& _ 
                "? = 1 AND `REATIVpor_ptw` IS NULL) OR (`REATIVpor_ptw` = ?)) AND ((? = 1 AND `RE"& _ 
                "ATIVseg_ptw` IS NULL) OR (`REATIVseg_ptw` = ?)) AND ((? = 1 AND `REATIVdate_ptw`"& _ 
                " IS NULL) OR (`REATIVdate_ptw` = ?)) AND ((? = 1 AND `REATIVtime_ptw` IS NULL) O"& _ 
                "R (`REATIVtime_ptw` = ?)) AND ((? = 1 AND `ISSUER_ptw` IS NULL) OR (`ISSUER_ptw`"& _ 
                " = ?)) AND ((? = 1 AND `SUPERVISOR_ptw` IS NULL) OR (`SUPERVISOR_ptw` = ?)) AND "& _ 
                "((? = 1 AND `SUPERVISOR_R_ptw` IS NULL) OR (`SUPERVISOR_R_ptw` = ?)) AND ((? = 1"& _ 
                " AND `EXECUTANTE01_ptw` IS NULL) OR (`EXECUTANTE01_ptw` = ?)) AND ((? = 1 AND `E"& _ 
                "XECUTANTE02_ptw` IS NULL) OR (`EXECUTANTE02_ptw` = ?)) AND ((? = 1 AND `EXECUTAN"& _ 
                "TE03_ptw` IS NULL) OR (`EXECUTANTE03_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE04_pt"& _ 
                "w` IS NULL) OR (`EXECUTANTE04_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE05_ptw` IS N"& _ 
                "ULL) OR (`EXECUTANTE05_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE06_ptw` IS NULL) OR"& _ 
                " (`EXECUTANTE06_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE07_ptw` IS NULL) OR (`EXEC"& _ 
                "UTANTE07_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE01_R_ptw` IS NULL) OR (`EXECUTANT"& _ 
                "E01_R_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE02_R_ptw` IS NULL) OR (`EXECUTANTE02"& _ 
                "_R_ptw` = ?)) AND ((? = 1 AND `EXECUTANTE03_R_ptw` IS NULL) OR (`EXECUTANTE03_R_"& _ 
                "ptw` = ?)) AND ((? = 1 AND `EXECUTANTE04_R_ptw` IS NULL) OR (`EXECUTANTE04_R_ptw"& _ 
                "` = ?)) AND ((? = 1 AND `EXECUTANTE05_R_ptw` IS NULL) OR (`EXECUTANTE05_R_ptw` ="& _ 
                " ?)) AND ((? = 1 AND `EXECUTANTE06_R_ptw` IS NULL) OR (`EXECUTANTE06_R_ptw` = ?)"& _ 
                ") AND ((? = 1 AND `EXECUTANTE07_R_ptw` IS NULL) OR (`EXECUTANTE07_R_ptw` = ?)) A"& _ 
                "ND ((? = 1 AND `LIDER_ptw` IS NULL) OR (`LIDER_ptw` = ?)) AND ((? = 1 AND `LIDER"& _ 
                "_R_ptw` IS NULL) OR (`LIDER_R_ptw` = ?)) AND ((? = 1 AND `LIDERdpt_ptw` IS NULL)"& _ 
                " OR (`LIDERdpt_ptw` = ?)) AND ((? = 1 AND `LIBERADOR_ptw` IS NULL) OR (`LIBERADO"& _ 
                "R_ptw` = ?)) AND ((? = 1 AND `LIBERADOR_R_ptw` IS NULL) OR (`LIBERADOR_R_ptw` = "& _ 
                "?)) AND ((? = 1 AND `OBSHOT01_ptw` IS NULL) OR (`OBSHOT01_ptw` = ?)) AND ((? = 1"& _ 
                " AND `OBSHOT01_R_ptw` IS NULL) OR (`OBSHOT01_R_ptw` = ?)) AND ((? = 1 AND `OBSHO"& _ 
                "T02_ptw` IS NULL) OR (`OBSHOT02_ptw` = ?)) AND ((? = 1 AND `OBSHOT02_R_ptw` IS N"& _ 
                "ULL) OR (`OBSHOT02_R_ptw` = ?)) AND ((? = 1 AND `VIGIA01_ptw` IS NULL) OR (`VIGI"& _ 
                "A01_ptw` = ?)) AND ((? = 1 AND `VIGIA01_R_ptw` IS NULL) OR (`VIGIA01_R_ptw` = ?)"& _ 
                ") AND ((? = 1 AND `VIGIA02_ptw` IS NULL) OR (`VIGIA02_ptw` = ?)) AND ((? = 1 AND"& _ 
                " `VIGIA02_R_ptw` IS NULL) OR (`VIGIA02_R_ptw` = ?)) AND ((? = 1 AND `SAFETY_ptw`"& _ 
                " IS NULL) OR (`SAFETY_ptw` = ?)) AND ((? = 1 AND `SAFETY_R_ptw` IS NULL) OR (`SA"& _ 
                "FETY_R_ptw` = ?)) AND ((? = 1 AND `OIM_ptW` IS NULL) OR (`OIM_ptW` = ?)) AND ((?"& _ 
                " = 1 AND `OIM_R_ptW` IS NULL) OR (`OIM_R_ptW` = ?)) AND ((? = 1 AND `ADMIN_ptw` "& _ 
                "IS NULL) OR (`ADMIN_ptw` = ?)) AND ((? = 1 AND `ADMIN_R_ptw` IS NULL) OR (`ADMIN"& _ 
                "_R_ptw` = ?)) AND ((? = 1 AND `ISSUERok_ptw` IS NULL) OR (`ISSUERok_ptw` = ?)) A"& _ 
                "ND ((? = 1 AND `LIDERok_ptw` IS NULL) OR (`LIDERok_ptw` = ?)) AND ((? = 1 AND `L"& _ 
                "IBERADORok_ptw` IS NULL) OR (`LIBERADORok_ptw` = ?)) AND ((? = 1 AND `SAFETYok_p"& _ 
                "tw` IS NULL) OR (`SAFETYok_ptw` = ?)) AND ((? = 1 AND `OIMok_ptW` IS NULL) OR (`"& _ 
                "OIMok_ptW` = ?)) AND ((? = 1 AND `ADMINok_ptw` IS NULL) OR (`ADMINok_ptw` = ?)) "& _ 
                "AND ((? = 1 AND `SUPreq_ptw` IS NULL) OR (`SUPreq_ptw` = ?)) AND ((? = 1 AND `SU"& _ 
                "PtipC_ptw` IS NULL) OR (`SUPtipC_ptw` = ?)) AND ((? = 1 AND `SUPtipP_ptw` IS NUL"& _ 
                "L) OR (`SUPtipP_ptw` = ?)) AND ((? = 1 AND `SUPtipN_ptw` IS NULL) OR (`SUPtipN_p"& _ 
                "tw` = ?)) AND ((? = 1 AND `SUPperiodo01x_PTW` IS NULL) OR (`SUPperiodo01x_PTW` ="& _ 
                " ?)) AND ((? = 1 AND `SUPperiodo02x_PTW` IS NULL) OR (`SUPperiodo02x_PTW` = ?)) "& _ 
                "AND ((? = 1 AND `SUPperiodo03x_PTW` IS NULL) OR (`SUPperiodo03x_PTW` = ?)) AND ("& _ 
                "(? = 1 AND `SUPwho01_ptw` IS NULL) OR (`SUPwho01_ptw` = ?)) AND ((? = 1 AND `SUP"& _ 
                "who02_ptw` IS NULL) OR (`SUPwho02_ptw` = ?)) AND ((? = 1 AND `SUPwho03_ptw` IS N"& _ 
                "ULL) OR (`SUPwho03_ptw` = ?)) AND ((? = 1 AND `SUPdate01_ptw` IS NULL) OR (`SUPd"& _ 
                "ate01_ptw` = ?)) AND ((? = 1 AND `SUPdate02_ptw` IS NULL) OR (`SUPdate02_ptw` = "& _ 
                "?)) AND ((? = 1 AND `SUPdate03_ptw` IS NULL) OR (`SUPdate03_ptw` = ?)) AND ((? ="& _ 
                " 1 AND `SUPtime01_ptw` IS NULL) OR (`SUPtime01_ptw` = ?)) AND ((? = 1 AND `SUPti"& _ 
                "me02_ptw` IS NULL) OR (`SUPtime02_ptw` = ?)) AND ((? = 1 AND `SUPtime03_ptw` IS "& _ 
                "NULL) OR (`SUPtime03_ptw` = ?)) AND ((? = 1 AND `impedimentoOBS_ptw` IS NULL) OR"& _ 
                " (`impedimentoOBS_ptw` = ?)) AND ((? = 1 AND `ISSUERtxt_ptw` IS NULL) OR (`ISSUE"& _ 
                "Rtxt_ptw` = ?)) AND ((? = 1 AND `fISSUER_ptw` IS NULL) OR (`fISSUER_ptw` = ?)) A"& _ 
                "ND ((? = 1 AND `fISSUERdata_ptw` IS NULL) OR (`fISSUERdata_ptw` = ?)) AND ((? = "& _ 
                "1 AND `fISSUERtime_ptw` IS NULL) OR (`fISSUERtime_ptw` = ?)) AND ((? = 1 AND `fL"& _ 
                "IDER_ptw` IS NULL) OR (`fLIDER_ptw` = ?)) AND ((? = 1 AND `fLIBERADOR_ptw` IS NU"& _ 
                "LL) OR (`fLIBERADOR_ptw` = ?)) AND ((? = 1 AND `fSAFETY_ptw` IS NULL) OR (`fSAFE"& _ 
                "TY_ptw` = ?)) AND ((? = 1 AND `fOIM_ptW` IS NULL) OR (`fOIM_ptW` = ?)) AND ((? ="& _ 
                " 1 AND `fADMIN_ptw` IS NULL) OR (`fADMIN_ptw` = ?)) AND ((? = 1 AND `fckTrab_ptw"& _ 
                "` IS NULL) OR (`fckTrab_ptw` = ?)) AND ((? = 1 AND `fckTurno_ptw` IS NULL) OR (`"& _ 
                "fckTurno_ptw` = ?)) AND ((? = 1 AND `fckCancel_ptw` IS NULL) OR (`fckCancel_ptw`"& _ 
                " = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("STATUS_ptw", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STATUS_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NUM_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NUM_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DATA_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATA_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TIME_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIME_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DESC_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DESC_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HOT_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HOT_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LOCAL_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOCAL_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LOTOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOTOck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LOTOnum_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOTOnum_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ATVsim_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ATVsim_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RISCOSad_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RISCOSad_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("MOCck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOCck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("MOCnm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOCnm_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EPI_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EPI_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RECad_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECad_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APRIck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APRIck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("APRInum_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APRInum_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CARGAcritCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CARGAcritCK_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LISTAobCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LISTAobCK_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FLUIDOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FLUIDOck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CESTOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CESTOck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("GUINCHOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GUINCHOck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OUTROS_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTROS_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TESTEck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TESTEck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DATEtest_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATEtest_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TIMEtest_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIMEtest_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("O2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "O2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HC_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HC_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("H2Sppm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "H2Sppm_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CO_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CO2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CHECKEDby_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHECKEDby_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SNdet_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SNdet_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXAUSTAOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXAUSTAOck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DATEexaust_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATEexaust_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TIMEexaust_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIMEexaust_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("O2_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "O2_2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HC_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HC_2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("H2S_2ppm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "H2S_2ppm_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CO_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO_2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CO2_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO2_2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CHECKEDby_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHECKEDby_2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SNdet_2_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SNdet_2_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CRITck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CRITck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OUTofOPck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTofOPck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OUTofOPnom_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTofOPnom_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SENSORinCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENSORinCK_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SENSORregCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENSORregCK_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PLANOresgCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PLANOresgCK_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EQUIPEcomCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EQUIPEcomCK_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("INTERCOMck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "INTERCOMck_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PESSOALck", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PESSOALck", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUSPmot_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPmot_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUSPpor_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPpor_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUSPdate_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPdate_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUSPtime", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPtime", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("REATIVpor_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVpor_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("REATIVseg_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVseg_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("REATIVdate_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVdate_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("REATIVtime_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVtime_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ISSUER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUER_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPERVISOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPERVISOR_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPERVISOR_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPERVISOR_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE01_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE02_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE03_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE04_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE04_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE05_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE05_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE06_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE06_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE07_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE07_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE01_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE02_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE03_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE03_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE04_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE04_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE05_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE05_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE06_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE06_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EXECUTANTE07_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE07_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIDER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIDER_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIDERdpt_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDERdpt_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIBERADOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIBERADOR_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OBSHOT01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT01_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OBSHOT01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT01_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OBSHOT02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT02_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OBSHOT02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT02_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VIGIA01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA01_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VIGIA01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA01_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VIGIA02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA02_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VIGIA02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA02_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SAFETY_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SAFETY_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OIM_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_ptW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OIM_R_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_R_ptW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ADMIN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ADMIN_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_R_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ISSUERok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUERok_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIDERok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDERok_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LIBERADORok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADORok_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SAFETYok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETYok_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OIMok_ptW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIMok_ptW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ADMINok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMINok_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPreq_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPreq_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPtipC_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipC_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPtipP_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipP_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPtipN_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipN_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPperiodo01x_PTW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo01x_PTW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPperiodo02x_PTW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo02x_PTW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPperiodo03x_PTW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo03x_PTW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPwho01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho01_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPwho02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho02_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPwho03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho03_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPdate01_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate01_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPdate02_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate02_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPdate03_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate03_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPtime01_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime01_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPtime02_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime02_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SUPtime03_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime03_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("impedimentoOBS_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "impedimentoOBS_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ISSUERtxt_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUERtxt_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fISSUER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUER_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fISSUERdata_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUERdata_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fISSUERtime_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUERtime_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fLIDER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fLIDER_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fLIBERADOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fLIBERADOR_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fSAFETY_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fSAFETY_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fOIM_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fOIM_ptW", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fADMIN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fADMIN_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fckTrab_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckTrab_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fckTurno_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckTurno_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fckCancel_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckCancel_ptw", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_STATUS_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STATUS_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_STATUS_ptw", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STATUS_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NUM_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NUM_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NUM_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NUM_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DATA_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATA_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DATA_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATA_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TIME_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIME_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TIME_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIME_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DESC_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DESC_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DESC_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DESC_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_HOT_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HOT_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_HOT_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HOT_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LOCAL_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOCAL_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LOCAL_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOCAL_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LOTOck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOTOck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LOTOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOTOck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LOTOnum_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOTOnum_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LOTOnum_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LOTOnum_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ATVsim_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ATVsim_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ATVsim_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ATVsim_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RISCOSad_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RISCOSad_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RISCOSad_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RISCOSad_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_MOCck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOCck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_MOCck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOCck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_MOCnm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOCnm_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_MOCnm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MOCnm_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EPI_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EPI_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EPI_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EPI_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RECad_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECad_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RECad_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RECad_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_APRIck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APRIck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_APRIck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APRIck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_APRInum_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APRInum_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_APRInum_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "APRInum_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CARGAcritCK_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CARGAcritCK_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CARGAcritCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CARGAcritCK_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LISTAobCK_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LISTAobCK_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LISTAobCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LISTAobCK_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FLUIDOck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FLUIDOck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FLUIDOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FLUIDOck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CESTOck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CESTOck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CESTOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CESTOck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_GUINCHOck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GUINCHOck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_GUINCHOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GUINCHOck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OUTROS_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTROS_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OUTROS_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTROS_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TESTEck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TESTEck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TESTEck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TESTEck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DATEtest_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATEtest_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DATEtest_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATEtest_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TIMEtest_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIMEtest_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TIMEtest_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIMEtest_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_O2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "O2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_O2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "O2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_HC_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HC_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_HC_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HC_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_H2Sppm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "H2Sppm_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_H2Sppm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "H2Sppm_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CO_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CO_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CO2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CO2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CHECKEDby_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHECKEDby_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CHECKEDby_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHECKEDby_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SNdet_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SNdet_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SNdet_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SNdet_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXAUSTAOck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXAUSTAOck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXAUSTAOck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXAUSTAOck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DATEexaust_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATEexaust_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DATEexaust_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATEexaust_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TIMEexaust_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIMEexaust_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TIMEexaust_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TIMEexaust_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_O2_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "O2_2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_O2_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "O2_2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_HC_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HC_2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_HC_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HC_2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_H2S_2ppm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "H2S_2ppm_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_H2S_2ppm_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "H2S_2ppm_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CO_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO_2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CO_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO_2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CO2_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO2_2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CO2_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CO2_2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CHECKEDby_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHECKEDby_2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CHECKEDby_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHECKEDby_2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SNdet_2_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SNdet_2_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SNdet_2_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SNdet_2_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CRITck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CRITck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CRITck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CRITck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OUTofOPck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTofOPck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OUTofOPck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTofOPck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OUTofOPnom_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTofOPnom_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OUTofOPnom_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OUTofOPnom_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SENSORinCK_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENSORinCK_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SENSORinCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENSORinCK_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SENSORregCK_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENSORregCK_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SENSORregCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SENSORregCK_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PLANOresgCK_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PLANOresgCK_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PLANOresgCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PLANOresgCK_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EQUIPEcomCK_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EQUIPEcomCK_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EQUIPEcomCK_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EQUIPEcomCK_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_INTERCOMck_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "INTERCOMck_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_INTERCOMck_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "INTERCOMck_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PESSOALck", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PESSOALck", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PESSOALck", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PESSOALck", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUSPmot_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPmot_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUSPmot_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPmot_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUSPpor_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPpor_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUSPpor_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPpor_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUSPdate_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPdate_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUSPdate_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPdate_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUSPtime", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPtime", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUSPtime", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUSPtime", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_REATIVpor_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVpor_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_REATIVpor_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVpor_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_REATIVseg_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVseg_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_REATIVseg_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVseg_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_REATIVdate_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVdate_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_REATIVdate_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVdate_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_REATIVtime_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVtime_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_REATIVtime_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "REATIVtime_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ISSUER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUER_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ISSUER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUER_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPERVISOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPERVISOR_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPERVISOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPERVISOR_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPERVISOR_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPERVISOR_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPERVISOR_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPERVISOR_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE01_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE01_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE02_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE02_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE03_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE03_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE04_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE04_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE04_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE04_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE05_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE05_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE05_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE05_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE06_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE06_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE06_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE06_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE07_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE07_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE07_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE07_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE01_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE01_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE02_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE02_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE03_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE03_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE03_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE03_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE04_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE04_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE04_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE04_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE05_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE05_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE05_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE05_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE06_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE06_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE06_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE06_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EXECUTANTE07_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE07_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EXECUTANTE07_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EXECUTANTE07_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIDER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIDER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIDER_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIDER_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDER_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIDERdpt_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDERdpt_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIDERdpt_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDERdpt_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIBERADOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIBERADOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIBERADOR_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIBERADOR_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADOR_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OBSHOT01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT01_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OBSHOT01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT01_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OBSHOT01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT01_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OBSHOT01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT01_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OBSHOT02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT02_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OBSHOT02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT02_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OBSHOT02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT02_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OBSHOT02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OBSHOT02_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VIGIA01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA01_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VIGIA01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA01_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VIGIA01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA01_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VIGIA01_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA01_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VIGIA02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA02_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VIGIA02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA02_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VIGIA02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA02_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VIGIA02_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VIGIA02_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SAFETY_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SAFETY_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SAFETY_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SAFETY_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETY_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OIM_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_ptW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OIM_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_ptW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OIM_R_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_R_ptW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OIM_R_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIM_R_ptW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ADMIN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ADMIN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ADMIN_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_R_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ADMIN_R_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMIN_R_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ISSUERok_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUERok_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ISSUERok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUERok_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIDERok_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDERok_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIDERok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIDERok_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LIBERADORok_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADORok_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LIBERADORok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LIBERADORok_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SAFETYok_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETYok_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SAFETYok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SAFETYok_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OIMok_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIMok_ptW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OIMok_ptW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OIMok_ptW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ADMINok_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMINok_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ADMINok_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ADMINok_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPreq_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPreq_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPreq_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPreq_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPtipC_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipC_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPtipC_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipC_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPtipP_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipP_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPtipP_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipP_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPtipN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipN_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPtipN_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtipN_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPperiodo01x_PTW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo01x_PTW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPperiodo01x_PTW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo01x_PTW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPperiodo02x_PTW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo02x_PTW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPperiodo02x_PTW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo02x_PTW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPperiodo03x_PTW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo03x_PTW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPperiodo03x_PTW", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPperiodo03x_PTW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPwho01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho01_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPwho01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho01_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPwho02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho02_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPwho02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho02_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPwho03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho03_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPwho03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPwho03_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPdate01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate01_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPdate01_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate01_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPdate02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate02_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPdate02_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate02_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPdate03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate03_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPdate03_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPdate03_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPtime01_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime01_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPtime01_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime01_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPtime02_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime02_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPtime02_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime02_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SUPtime03_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime03_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SUPtime03_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SUPtime03_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_impedimentoOBS_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "impedimentoOBS_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_impedimentoOBS_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "impedimentoOBS_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ISSUERtxt_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUERtxt_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ISSUERtxt_ptw", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ISSUERtxt_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fISSUER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUER_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fISSUER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUER_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fISSUERdata_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUERdata_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fISSUERdata_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUERdata_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fISSUERtime_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUERtime_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fISSUERtime_ptw", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fISSUERtime_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fLIDER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fLIDER_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fLIDER_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fLIDER_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fLIBERADOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fLIBERADOR_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fLIBERADOR_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fLIBERADOR_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fSAFETY_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fSAFETY_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fSAFETY_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fSAFETY_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fOIM_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fOIM_ptW", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fOIM_ptW", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fOIM_ptW", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fADMIN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fADMIN_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fADMIN_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fADMIN_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fckTrab_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckTrab_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fckTrab_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckTrab_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fckTurno_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckTurno_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fckTurno_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckTurno_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_fckCancel_ptw", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckCancel_ptw", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_fckCancel_ptw", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fckCancel_ptw", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MyfirstApp.My.MySettings.Default.PTW_DB_BackupConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, STATUS_ptw, NUM_ptw, DATA_ptw, TIME_ptw, DESC_ptw, HOT_ptw, LOCAL_ptw,"& _ 
                " LOTOck_ptw, LOTOnum_ptw, ATVsim_ptw, RISCOSad_ptw, MOCck_ptw, MOCnm_ptw, EPI_pt"& _ 
                "w, RECad_ptw, APRIck_ptw, APRInum_ptw, CARGAcritCK_ptw, LISTAobCK_ptw, FLUIDOck_"& _ 
                "ptw, CESTOck_ptw, GUINCHOck_ptw, OUTROS_ptw, TESTEck_ptw, DATEtest_ptw, TIMEtest"& _ 
                "_ptw, O2_ptw, HC_ptw, H2Sppm_ptw, CO_ptw, CO2_ptw, CHECKEDby_ptw, SNdet_ptw, EXA"& _ 
                "USTAOck_ptw, DATEexaust_ptw, TIMEexaust_ptw, O2_2_ptw, HC_2_ptw, H2S_2ppm_ptw, C"& _ 
                "O_2_ptw, CO2_2_ptw, CHECKEDby_2_ptw, SNdet_2_ptw, CRITck_ptw, OUTofOPck_ptw, OUT"& _ 
                "ofOPnom_ptw, SENSORinCK_ptw, SENSORregCK_ptw, PLANOresgCK_ptw, EQUIPEcomCK_ptw, "& _ 
                "INTERCOMck_ptw, PESSOALck, SUSPmot_ptw, SUSPpor_ptw, SUSPdate_ptw, SUSPtime, REA"& _ 
                "TIVpor_ptw, REATIVseg_ptw, REATIVdate_ptw, REATIVtime_ptw, ISSUER_ptw, SUPERVISO"& _ 
                "R_ptw, SUPERVISOR_R_ptw, EXECUTANTE01_ptw, EXECUTANTE02_ptw, EXECUTANTE03_ptw, E"& _ 
                "XECUTANTE04_ptw, EXECUTANTE05_ptw, EXECUTANTE06_ptw, EXECUTANTE07_ptw, EXECUTANT"& _ 
                "E01_R_ptw, EXECUTANTE02_R_ptw, EXECUTANTE03_R_ptw, EXECUTANTE04_R_ptw, EXECUTANT"& _ 
                "E05_R_ptw, EXECUTANTE06_R_ptw, EXECUTANTE07_R_ptw, LIDER_ptw, LIDER_R_ptw, LIDER"& _ 
                "dpt_ptw, LIBERADOR_ptw, LIBERADOR_R_ptw, OBSHOT01_ptw, OBSHOT01_R_ptw, OBSHOT02_"& _ 
                "ptw, OBSHOT02_R_ptw, VIGIA01_ptw, VIGIA01_R_ptw, VIGIA02_ptw, VIGIA02_R_ptw, SAF"& _ 
                "ETY_ptw, SAFETY_R_ptw, OIM_ptW, OIM_R_ptW, ADMIN_ptw, ADMIN_R_ptw, ISSUERok_ptw,"& _ 
                " LIDERok_ptw, LIBERADORok_ptw, SAFETYok_ptw, OIMok_ptW, ADMINok_ptw, SUPreq_ptw,"& _ 
                " SUPtipC_ptw, SUPtipP_ptw, SUPtipN_ptw, SUPperiodo01x_PTW, SUPperiodo02x_PTW, SU"& _ 
                "Pperiodo03x_PTW, SUPwho01_ptw, SUPwho02_ptw, SUPwho03_ptw, SUPdate01_ptw, SUPdat"& _ 
                "e02_ptw, SUPdate03_ptw, SUPtime01_ptw, SUPtime02_ptw, SUPtime03_ptw, impedimento"& _ 
                "OBS_ptw, ISSUERtxt_ptw, fISSUER_ptw, fISSUERdata_ptw, fISSUERtime_ptw, fLIDER_pt"& _ 
                "w, fLIBERADOR_ptw, fSAFETY_ptw, fOIM_ptW, fADMIN_ptw, fckTrab_ptw, fckTurno_ptw,"& _ 
                " fckCancel_ptw FROM PTopen"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PTW_DB_BackupDataSet.PTopenDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PTW_DB_BackupDataSet.PTopenDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PTW_DB_BackupDataSet.PTopenDataTable = New PTW_DB_BackupDataSet.PTopenDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PTW_DB_BackupDataSet.PTopenDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PTW_DB_BackupDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "PTopen")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_STATUS_ptw As Global.System.Nullable(Of Short),  _
                    ByVal Original_NUM_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DATA_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_TIME_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_DESC_ptw As String,  _
                    ByVal Original_HOT_ptw As Boolean,  _
                    ByVal Original_LOCAL_ptw As String,  _
                    ByVal Original_LOTOck_ptw As Boolean,  _
                    ByVal Original_LOTOnum_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ATVsim_ptw As String,  _
                    ByVal Original_RISCOSad_ptw As String,  _
                    ByVal Original_MOCck_ptw As Boolean,  _
                    ByVal Original_MOCnm_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EPI_ptw As Boolean,  _
                    ByVal Original_RECad_ptw As String,  _
                    ByVal Original_APRIck_ptw As Boolean,  _
                    ByVal Original_APRInum_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CARGAcritCK_ptw As Boolean,  _
                    ByVal Original_LISTAobCK_ptw As Boolean,  _
                    ByVal Original_FLUIDOck_ptw As Boolean,  _
                    ByVal Original_CESTOck_ptw As Boolean,  _
                    ByVal Original_GUINCHOck_ptw As Boolean,  _
                    ByVal Original_OUTROS_ptw As String,  _
                    ByVal Original_TESTEck_ptw As Boolean,  _
                    ByVal Original_DATEtest_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_TIMEtest_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_O2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HC_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_H2Sppm_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CO_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CO2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CHECKEDby_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SNdet_ptw As String,  _
                    ByVal Original_EXAUSTAOck_ptw As Boolean,  _
                    ByVal Original_DATEexaust_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_TIMEexaust_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_O2_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HC_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_H2S_2ppm_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CO_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CO2_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CHECKEDby_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SNdet_2_ptw As String,  _
                    ByVal Original_CRITck_ptw As Boolean,  _
                    ByVal Original_OUTofOPck_ptw As Boolean,  _
                    ByVal Original_OUTofOPnom_ptw As String,  _
                    ByVal Original_SENSORinCK_ptw As Boolean,  _
                    ByVal Original_SENSORregCK_ptw As Boolean,  _
                    ByVal Original_PLANOresgCK_ptw As Boolean,  _
                    ByVal Original_EQUIPEcomCK_ptw As Boolean,  _
                    ByVal Original_INTERCOMck_ptw As Boolean,  _
                    ByVal Original_PESSOALck As Boolean,  _
                    ByVal Original_SUSPmot_ptw As String,  _
                    ByVal Original_SUSPpor_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SUSPdate_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_SUSPtime As Global.System.Nullable(Of Date),  _
                    ByVal Original_REATIVpor_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_REATIVseg_ptw As Boolean,  _
                    ByVal Original_REATIVdate_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_REATIVtime_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_ISSUER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SUPERVISOR_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SUPERVISOR_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE03_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE04_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE05_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE06_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE07_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE01_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE02_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE03_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE04_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE05_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE06_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE07_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LIDER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LIDER_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LIDERdpt_ptw As String,  _
                    ByVal Original_LIBERADOR_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LIBERADOR_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OBSHOT01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OBSHOT01_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OBSHOT02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OBSHOT02_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VIGIA01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VIGIA01_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VIGIA02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VIGIA02_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SAFETY_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SAFETY_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OIM_ptW As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OIM_R_ptW As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ADMIN_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ADMIN_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ISSUERok_ptw As Boolean,  _
                    ByVal Original_LIDERok_ptw As Boolean,  _
                    ByVal Original_LIBERADORok_ptw As Boolean,  _
                    ByVal Original_SAFETYok_ptw As Boolean,  _
                    ByVal Original_OIMok_ptW As Boolean,  _
                    ByVal Original_ADMINok_ptw As Boolean,  _
                    ByVal Original_SUPreq_ptw As Boolean,  _
                    ByVal Original_SUPtipC_ptw As Boolean,  _
                    ByVal Original_SUPtipP_ptw As Boolean,  _
                    ByVal Original_SUPtipN_ptw As Boolean,  _
                    ByVal Original_SUPperiodo01x_PTW As Boolean,  _
                    ByVal Original_SUPperiodo02x_PTW As Boolean,  _
                    ByVal Original_SUPperiodo03x_PTW As Boolean,  _
                    ByVal Original_SUPwho01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SUPwho02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SUPwho03_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SUPdate01_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_SUPdate02_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_SUPdate03_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_SUPtime01_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_SUPtime02_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_SUPtime03_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_impedimentoOBS_ptw As String,  _
                    ByVal Original_ISSUERtxt_ptw As String,  _
                    ByVal Original_fISSUER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_fISSUERdata_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_fISSUERtime_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_fLIDER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_fLIBERADOR_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_fSAFETY_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_fOIM_ptW As Global.System.Nullable(Of Integer),  _
                    ByVal Original_fADMIN_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_fckTrab_ptw As Boolean,  _
                    ByVal Original_fckTurno_ptw As Boolean,  _
                    ByVal Original_fckCancel_ptw As Boolean) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_STATUS_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_STATUS_ptw.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_NUM_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_NUM_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_DATA_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DATA_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_TIME_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_TIME_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_DESC_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DESC_ptw,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_HOT_ptw,Boolean)
            If (Original_LOCAL_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_LOCAL_ptw,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_LOTOck_ptw,Boolean)
            If (Original_LOTOnum_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_LOTOnum_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_ATVsim_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_ATVsim_ptw,String)
            End If
            If (Original_RISCOSad_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_RISCOSad_ptw,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_MOCck_ptw,Boolean)
            If (Original_MOCnm_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_MOCnm_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_EPI_ptw,Boolean)
            If (Original_RECad_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_RECad_ptw,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_APRIck_ptw,Boolean)
            If (Original_APRInum_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_APRInum_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_CARGAcritCK_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_LISTAobCK_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_FLUIDOck_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_CESTOck_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_GUINCHOck_ptw,Boolean)
            If (Original_OUTROS_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_OUTROS_ptw,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_TESTEck_ptw,Boolean)
            If (Original_DATEtest_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_DATEtest_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_TIMEtest_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_TIMEtest_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_O2_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_O2_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_HC_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_HC_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_H2Sppm_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_H2Sppm_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_CO_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_CO_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_CO2_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_CO2_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_CHECKEDby_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_CHECKEDby_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_SNdet_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_SNdet_ptw,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_EXAUSTAOck_ptw,Boolean)
            If (Original_DATEexaust_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_DATEexaust_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_TIMEexaust_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_TIMEexaust_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_O2_2_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_O2_2_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_HC_2_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_HC_2_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Original_H2S_2ppm_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_H2S_2ppm_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Original_CO_2_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_CO_2_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_CO2_2_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_CO2_2_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_CHECKEDby_2_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_CHECKEDby_2_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_SNdet_2_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_SNdet_2_ptw,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_CRITck_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_OUTofOPck_ptw,Boolean)
            If (Original_OUTofOPnom_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_OUTofOPnom_ptw,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_SENSORinCK_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_SENSORregCK_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_PLANOresgCK_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_EQUIPEcomCK_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_INTERCOMck_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_PESSOALck,Boolean)
            If (Original_SUSPmot_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_SUSPmot_ptw,String)
            End If
            If (Original_SUSPpor_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_SUSPpor_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_SUSPdate_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_SUSPdate_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_SUSPtime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_SUSPtime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_REATIVpor_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_REATIVpor_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_REATIVseg_ptw,Boolean)
            If (Original_REATIVdate_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(Original_REATIVdate_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_REATIVtime_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(Original_REATIVtime_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_ISSUER_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(Original_ISSUER_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPERVISOR_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(Original_SUPERVISOR_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPERVISOR_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(Original_SUPERVISOR_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE01_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(Original_EXECUTANTE01_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE02_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(Original_EXECUTANTE02_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE03_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(Original_EXECUTANTE03_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE04_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(Original_EXECUTANTE04_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE05_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(Original_EXECUTANTE05_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE06_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(Original_EXECUTANTE06_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE07_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(Original_EXECUTANTE07_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE01_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(Original_EXECUTANTE01_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE02_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(Original_EXECUTANTE02_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE03_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(Original_EXECUTANTE03_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE04_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(Original_EXECUTANTE04_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE05_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(Original_EXECUTANTE05_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE06_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(Original_EXECUTANTE06_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE07_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(Original_EXECUTANTE07_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            If (Original_LIDER_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(Original_LIDER_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(156).Value = Global.System.DBNull.Value
            End If
            If (Original_LIDER_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(Original_LIDER_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(158).Value = Global.System.DBNull.Value
            End If
            If (Original_LIDERdpt_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(160).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(Original_LIDERdpt_ptw,String)
            End If
            If (Original_LIBERADOR_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(Original_LIBERADOR_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(162).Value = Global.System.DBNull.Value
            End If
            If (Original_LIBERADOR_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(164).Value = CType(Original_LIBERADOR_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(164).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSHOT01_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(166).Value = CType(Original_OBSHOT01_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(166).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSHOT01_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(168).Value = CType(Original_OBSHOT01_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(168).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSHOT02_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(170).Value = CType(Original_OBSHOT02_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(170).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSHOT02_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(172).Value = CType(Original_OBSHOT02_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(172).Value = Global.System.DBNull.Value
            End If
            If (Original_VIGIA01_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(174).Value = CType(Original_VIGIA01_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(174).Value = Global.System.DBNull.Value
            End If
            If (Original_VIGIA01_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(176).Value = CType(Original_VIGIA01_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(176).Value = Global.System.DBNull.Value
            End If
            If (Original_VIGIA02_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(178).Value = CType(Original_VIGIA02_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(178).Value = Global.System.DBNull.Value
            End If
            If (Original_VIGIA02_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(180).Value = CType(Original_VIGIA02_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(180).Value = Global.System.DBNull.Value
            End If
            If (Original_SAFETY_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(181).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(182).Value = CType(Original_SAFETY_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(181).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(182).Value = Global.System.DBNull.Value
            End If
            If (Original_SAFETY_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(184).Value = CType(Original_SAFETY_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(184).Value = Global.System.DBNull.Value
            End If
            If (Original_OIM_ptW.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(186).Value = CType(Original_OIM_ptW.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(186).Value = Global.System.DBNull.Value
            End If
            If (Original_OIM_R_ptW.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(188).Value = CType(Original_OIM_R_ptW.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(188).Value = Global.System.DBNull.Value
            End If
            If (Original_ADMIN_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(189).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(190).Value = CType(Original_ADMIN_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(189).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(190).Value = Global.System.DBNull.Value
            End If
            If (Original_ADMIN_R_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(191).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(192).Value = CType(Original_ADMIN_R_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(191).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(192).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(193).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(194).Value = CType(Original_ISSUERok_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(195).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(196).Value = CType(Original_LIDERok_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(197).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(198).Value = CType(Original_LIBERADORok_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(199).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(200).Value = CType(Original_SAFETYok_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(201).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(202).Value = CType(Original_OIMok_ptW,Boolean)
            Me.Adapter.DeleteCommand.Parameters(203).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(204).Value = CType(Original_ADMINok_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(205).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(206).Value = CType(Original_SUPreq_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(207).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(208).Value = CType(Original_SUPtipC_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(209).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(210).Value = CType(Original_SUPtipP_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(211).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(212).Value = CType(Original_SUPtipN_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(213).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(214).Value = CType(Original_SUPperiodo01x_PTW,Boolean)
            Me.Adapter.DeleteCommand.Parameters(215).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(216).Value = CType(Original_SUPperiodo02x_PTW,Boolean)
            Me.Adapter.DeleteCommand.Parameters(217).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(218).Value = CType(Original_SUPperiodo03x_PTW,Boolean)
            If (Original_SUPwho01_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(219).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(220).Value = CType(Original_SUPwho01_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(219).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(220).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPwho02_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(221).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(222).Value = CType(Original_SUPwho02_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(221).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(222).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPwho03_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(223).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(224).Value = CType(Original_SUPwho03_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(223).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(224).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPdate01_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(225).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(226).Value = CType(Original_SUPdate01_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(225).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(226).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPdate02_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(227).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(228).Value = CType(Original_SUPdate02_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(227).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(228).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPdate03_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(229).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(230).Value = CType(Original_SUPdate03_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(229).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(230).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPtime01_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(231).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(232).Value = CType(Original_SUPtime01_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(231).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(232).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPtime02_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(233).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(234).Value = CType(Original_SUPtime02_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(233).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(234).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPtime03_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(235).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(236).Value = CType(Original_SUPtime03_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(235).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(236).Value = Global.System.DBNull.Value
            End If
            If (Original_impedimentoOBS_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(237).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(238).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(237).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(238).Value = CType(Original_impedimentoOBS_ptw,String)
            End If
            If (Original_ISSUERtxt_ptw Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(239).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(240).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(239).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(240).Value = CType(Original_ISSUERtxt_ptw,String)
            End If
            If (Original_fISSUER_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(241).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(242).Value = CType(Original_fISSUER_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(241).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(242).Value = Global.System.DBNull.Value
            End If
            If (Original_fISSUERdata_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(243).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(244).Value = CType(Original_fISSUERdata_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(243).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(244).Value = Global.System.DBNull.Value
            End If
            If (Original_fISSUERtime_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(245).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(246).Value = CType(Original_fISSUERtime_ptw.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(245).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(246).Value = Global.System.DBNull.Value
            End If
            If (Original_fLIDER_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(247).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(248).Value = CType(Original_fLIDER_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(247).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(248).Value = Global.System.DBNull.Value
            End If
            If (Original_fLIBERADOR_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(249).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(250).Value = CType(Original_fLIBERADOR_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(249).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(250).Value = Global.System.DBNull.Value
            End If
            If (Original_fSAFETY_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(251).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(252).Value = CType(Original_fSAFETY_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(251).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(252).Value = Global.System.DBNull.Value
            End If
            If (Original_fOIM_ptW.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(253).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(254).Value = CType(Original_fOIM_ptW.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(253).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(254).Value = Global.System.DBNull.Value
            End If
            If (Original_fADMIN_ptw.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(255).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(256).Value = CType(Original_fADMIN_ptw.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(255).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(256).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(257).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(258).Value = CType(Original_fckTrab_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(259).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(260).Value = CType(Original_fckTurno_ptw,Boolean)
            Me.Adapter.DeleteCommand.Parameters(261).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(262).Value = CType(Original_fckCancel_ptw,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal STATUS_ptw As Global.System.Nullable(Of Short),  _
                    ByVal NUM_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal DATA_ptw As Global.System.Nullable(Of Date),  _
                    ByVal TIME_ptw As Global.System.Nullable(Of Date),  _
                    ByVal DESC_ptw As String,  _
                    ByVal HOT_ptw As Boolean,  _
                    ByVal LOCAL_ptw As String,  _
                    ByVal LOTOck_ptw As Boolean,  _
                    ByVal LOTOnum_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal ATVsim_ptw As String,  _
                    ByVal RISCOSad_ptw As String,  _
                    ByVal MOCck_ptw As Boolean,  _
                    ByVal MOCnm_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EPI_ptw As Boolean,  _
                    ByVal RECad_ptw As String,  _
                    ByVal APRIck_ptw As Boolean,  _
                    ByVal APRInum_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CARGAcritCK_ptw As Boolean,  _
                    ByVal LISTAobCK_ptw As Boolean,  _
                    ByVal FLUIDOck_ptw As Boolean,  _
                    ByVal CESTOck_ptw As Boolean,  _
                    ByVal GUINCHOck_ptw As Boolean,  _
                    ByVal OUTROS_ptw As String,  _
                    ByVal TESTEck_ptw As Boolean,  _
                    ByVal DATEtest_ptw As Global.System.Nullable(Of Date),  _
                    ByVal TIMEtest_ptw As Global.System.Nullable(Of Date),  _
                    ByVal O2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal HC_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal H2Sppm_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CO_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CO2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CHECKEDby_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SNdet_ptw As String,  _
                    ByVal EXAUSTAOck_ptw As Boolean,  _
                    ByVal DATEexaust_ptw As Global.System.Nullable(Of Date),  _
                    ByVal TIMEexaust_ptw As Global.System.Nullable(Of Date),  _
                    ByVal O2_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal HC_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal H2S_2ppm_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CO_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CO2_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CHECKEDby_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SNdet_2_ptw As String,  _
                    ByVal CRITck_ptw As Boolean,  _
                    ByVal OUTofOPck_ptw As Boolean,  _
                    ByVal OUTofOPnom_ptw As String,  _
                    ByVal SENSORinCK_ptw As Boolean,  _
                    ByVal SENSORregCK_ptw As Boolean,  _
                    ByVal PLANOresgCK_ptw As Boolean,  _
                    ByVal EQUIPEcomCK_ptw As Boolean,  _
                    ByVal INTERCOMck_ptw As Boolean,  _
                    ByVal PESSOALck As Boolean,  _
                    ByVal SUSPmot_ptw As String,  _
                    ByVal SUSPpor_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SUSPdate_ptw As Global.System.Nullable(Of Date),  _
                    ByVal SUSPtime As Global.System.Nullable(Of Date),  _
                    ByVal REATIVpor_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal REATIVseg_ptw As Boolean,  _
                    ByVal REATIVdate_ptw As Global.System.Nullable(Of Date),  _
                    ByVal REATIVtime_ptw As Global.System.Nullable(Of Date),  _
                    ByVal ISSUER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SUPERVISOR_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SUPERVISOR_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE03_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE04_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE05_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE06_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE07_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE01_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE02_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE03_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE04_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE05_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE06_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE07_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal LIDER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal LIDER_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal LIDERdpt_ptw As String,  _
                    ByVal LIBERADOR_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal LIBERADOR_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal OBSHOT01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal OBSHOT01_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal OBSHOT02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal OBSHOT02_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal VIGIA01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal VIGIA01_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal VIGIA02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal VIGIA02_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SAFETY_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SAFETY_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal OIM_ptW As Global.System.Nullable(Of Integer),  _
                    ByVal OIM_R_ptW As Global.System.Nullable(Of Integer),  _
                    ByVal ADMIN_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal ADMIN_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal ISSUERok_ptw As Boolean,  _
                    ByVal LIDERok_ptw As Boolean,  _
                    ByVal LIBERADORok_ptw As Boolean,  _
                    ByVal SAFETYok_ptw As Boolean,  _
                    ByVal OIMok_ptW As Boolean,  _
                    ByVal ADMINok_ptw As Boolean,  _
                    ByVal SUPreq_ptw As Boolean,  _
                    ByVal SUPtipC_ptw As Boolean,  _
                    ByVal SUPtipP_ptw As Boolean,  _
                    ByVal SUPtipN_ptw As Boolean,  _
                    ByVal SUPperiodo01x_PTW As Boolean,  _
                    ByVal SUPperiodo02x_PTW As Boolean,  _
                    ByVal SUPperiodo03x_PTW As Boolean,  _
                    ByVal SUPwho01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SUPwho02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SUPwho03_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SUPdate01_ptw As Global.System.Nullable(Of Date),  _
                    ByVal SUPdate02_ptw As Global.System.Nullable(Of Date),  _
                    ByVal SUPdate03_ptw As Global.System.Nullable(Of Date),  _
                    ByVal SUPtime01_ptw As Global.System.Nullable(Of Date),  _
                    ByVal SUPtime02_ptw As Global.System.Nullable(Of Date),  _
                    ByVal SUPtime03_ptw As Global.System.Nullable(Of Date),  _
                    ByVal impedimentoOBS_ptw As String,  _
                    ByVal ISSUERtxt_ptw As String,  _
                    ByVal fISSUER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal fISSUERdata_ptw As Global.System.Nullable(Of Date),  _
                    ByVal fISSUERtime_ptw As Global.System.Nullable(Of Date),  _
                    ByVal fLIDER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal fLIBERADOR_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal fSAFETY_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal fOIM_ptW As Global.System.Nullable(Of Integer),  _
                    ByVal fADMIN_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal fckTrab_ptw As Boolean,  _
                    ByVal fckTurno_ptw As Boolean,  _
                    ByVal fckCancel_ptw As Boolean) As Integer
            If (STATUS_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(STATUS_ptw.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (NUM_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NUM_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DATA_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DATA_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TIME_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TIME_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (DESC_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DESC_ptw,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(HOT_ptw,Boolean)
            If (LOCAL_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(LOCAL_ptw,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(LOTOck_ptw,Boolean)
            If (LOTOnum_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(LOTOnum_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (ATVsim_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ATVsim_ptw,String)
            End If
            If (RISCOSad_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(RISCOSad_ptw,String)
            End If
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(MOCck_ptw,Boolean)
            If (MOCnm_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(MOCnm_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(EPI_ptw,Boolean)
            If (RECad_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(RECad_ptw,String)
            End If
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(APRIck_ptw,Boolean)
            If (APRInum_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(APRInum_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(CARGAcritCK_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(LISTAobCK_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(FLUIDOck_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(CESTOck_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(GUINCHOck_ptw,Boolean)
            If (OUTROS_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(OUTROS_ptw,String)
            End If
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(TESTEck_ptw,Boolean)
            If (DATEtest_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(DATEtest_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (TIMEtest_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(TIMEtest_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (O2_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(O2_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (HC_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(HC_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (H2Sppm_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(H2Sppm_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CO_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(CO_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CO2_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(CO2_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (CHECKEDby_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(CHECKEDby_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (SNdet_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(SNdet_ptw,String)
            End If
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(EXAUSTAOck_ptw,Boolean)
            If (DATEexaust_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(DATEexaust_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (TIMEexaust_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(TIMEexaust_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (O2_2_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(O2_2_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (HC_2_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(HC_2_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (H2S_2ppm_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(H2S_2ppm_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (CO_2_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(CO_2_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (CO2_2_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(CO2_2_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (CHECKEDby_2_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(CHECKEDby_2_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (SNdet_2_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(SNdet_2_ptw,String)
            End If
            Me.Adapter.InsertCommand.Parameters(43).Value = CType(CRITck_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(44).Value = CType(OUTofOPck_ptw,Boolean)
            If (OUTofOPnom_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(OUTofOPnom_ptw,String)
            End If
            Me.Adapter.InsertCommand.Parameters(46).Value = CType(SENSORinCK_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(47).Value = CType(SENSORregCK_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(48).Value = CType(PLANOresgCK_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(49).Value = CType(EQUIPEcomCK_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(50).Value = CType(INTERCOMck_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(51).Value = CType(PESSOALck,Boolean)
            If (SUSPmot_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(SUSPmot_ptw,String)
            End If
            If (SUSPpor_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(SUSPpor_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (SUSPdate_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(SUSPdate_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (SUSPtime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(SUSPtime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (REATIVpor_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(REATIVpor_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(57).Value = CType(REATIVseg_ptw,Boolean)
            If (REATIVdate_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(REATIVdate_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (REATIVtime_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(REATIVtime_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (ISSUER_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(ISSUER_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (SUPERVISOR_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(SUPERVISOR_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (SUPERVISOR_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(SUPERVISOR_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE01_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(EXECUTANTE01_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE02_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(EXECUTANTE02_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE03_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(EXECUTANTE03_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE04_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(EXECUTANTE04_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE05_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(EXECUTANTE05_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE06_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(EXECUTANTE06_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE07_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(EXECUTANTE07_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE01_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(EXECUTANTE01_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE02_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(EXECUTANTE02_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE03_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(EXECUTANTE03_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE04_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(EXECUTANTE04_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE05_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(EXECUTANTE05_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE06_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(EXECUTANTE06_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE07_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(EXECUTANTE07_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (LIDER_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(LIDER_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (LIDER_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(LIDER_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (LIDERdpt_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(LIDERdpt_ptw,String)
            End If
            If (LIBERADOR_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(LIBERADOR_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (LIBERADOR_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(LIBERADOR_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (OBSHOT01_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(OBSHOT01_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (OBSHOT01_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(OBSHOT01_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (OBSHOT02_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(OBSHOT02_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (OBSHOT02_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(OBSHOT02_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (VIGIA01_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(VIGIA01_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (VIGIA01_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(VIGIA01_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (VIGIA02_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(VIGIA02_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (VIGIA02_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(VIGIA02_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (SAFETY_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(SAFETY_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (SAFETY_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(SAFETY_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (OIM_ptW.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(OIM_ptW.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (OIM_R_ptW.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(OIM_R_ptW.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (ADMIN_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(ADMIN_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (ADMIN_R_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(ADMIN_R_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(96).Value = CType(ISSUERok_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(97).Value = CType(LIDERok_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(98).Value = CType(LIBERADORok_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(99).Value = CType(SAFETYok_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(100).Value = CType(OIMok_ptW,Boolean)
            Me.Adapter.InsertCommand.Parameters(101).Value = CType(ADMINok_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(102).Value = CType(SUPreq_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(103).Value = CType(SUPtipC_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(104).Value = CType(SUPtipP_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(105).Value = CType(SUPtipN_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(106).Value = CType(SUPperiodo01x_PTW,Boolean)
            Me.Adapter.InsertCommand.Parameters(107).Value = CType(SUPperiodo02x_PTW,Boolean)
            Me.Adapter.InsertCommand.Parameters(108).Value = CType(SUPperiodo03x_PTW,Boolean)
            If (SUPwho01_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(SUPwho01_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (SUPwho02_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(SUPwho02_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (SUPwho03_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(111).Value = CType(SUPwho03_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (SUPdate01_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(112).Value = CType(SUPdate01_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (SUPdate02_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(113).Value = CType(SUPdate02_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (SUPdate03_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(114).Value = CType(SUPdate03_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (SUPtime01_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(115).Value = CType(SUPtime01_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (SUPtime02_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(116).Value = CType(SUPtime02_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (SUPtime03_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(117).Value = CType(SUPtime03_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (impedimentoOBS_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(118).Value = CType(impedimentoOBS_ptw,String)
            End If
            If (ISSUERtxt_ptw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(119).Value = CType(ISSUERtxt_ptw,String)
            End If
            If (fISSUER_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(120).Value = CType(fISSUER_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (fISSUERdata_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(121).Value = CType(fISSUERdata_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (fISSUERtime_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(122).Value = CType(fISSUERtime_ptw.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (fLIDER_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(123).Value = CType(fLIDER_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            If (fLIBERADOR_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(124).Value = CType(fLIBERADOR_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (fSAFETY_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(125).Value = CType(fSAFETY_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            If (fOIM_ptW.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(126).Value = CType(fOIM_ptW.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (fADMIN_ptw.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(127).Value = CType(fADMIN_ptw.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(127).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(128).Value = CType(fckTrab_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(129).Value = CType(fckTurno_ptw,Boolean)
            Me.Adapter.InsertCommand.Parameters(130).Value = CType(fckCancel_ptw,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal STATUS_ptw As Global.System.Nullable(Of Short),  _
                    ByVal NUM_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal DATA_ptw As Global.System.Nullable(Of Date),  _
                    ByVal TIME_ptw As Global.System.Nullable(Of Date),  _
                    ByVal DESC_ptw As String,  _
                    ByVal HOT_ptw As Boolean,  _
                    ByVal LOCAL_ptw As String,  _
                    ByVal LOTOck_ptw As Boolean,  _
                    ByVal LOTOnum_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal ATVsim_ptw As String,  _
                    ByVal RISCOSad_ptw As String,  _
                    ByVal MOCck_ptw As Boolean,  _
                    ByVal MOCnm_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EPI_ptw As Boolean,  _
                    ByVal RECad_ptw As String,  _
                    ByVal APRIck_ptw As Boolean,  _
                    ByVal APRInum_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CARGAcritCK_ptw As Boolean,  _
                    ByVal LISTAobCK_ptw As Boolean,  _
                    ByVal FLUIDOck_ptw As Boolean,  _
                    ByVal CESTOck_ptw As Boolean,  _
                    ByVal GUINCHOck_ptw As Boolean,  _
                    ByVal OUTROS_ptw As String,  _
                    ByVal TESTEck_ptw As Boolean,  _
                    ByVal DATEtest_ptw As Global.System.Nullable(Of Date),  _
                    ByVal TIMEtest_ptw As Global.System.Nullable(Of Date),  _
                    ByVal O2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal HC_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal H2Sppm_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CO_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CO2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CHECKEDby_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SNdet_ptw As String,  _
                    ByVal EXAUSTAOck_ptw As Boolean,  _
                    ByVal DATEexaust_ptw As Global.System.Nullable(Of Date),  _
                    ByVal TIMEexaust_ptw As Global.System.Nullable(Of Date),  _
                    ByVal O2_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal HC_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal H2S_2ppm_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CO_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CO2_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal CHECKEDby_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SNdet_2_ptw As String,  _
                    ByVal CRITck_ptw As Boolean,  _
                    ByVal OUTofOPck_ptw As Boolean,  _
                    ByVal OUTofOPnom_ptw As String,  _
                    ByVal SENSORinCK_ptw As Boolean,  _
                    ByVal SENSORregCK_ptw As Boolean,  _
                    ByVal PLANOresgCK_ptw As Boolean,  _
                    ByVal EQUIPEcomCK_ptw As Boolean,  _
                    ByVal INTERCOMck_ptw As Boolean,  _
                    ByVal PESSOALck As Boolean,  _
                    ByVal SUSPmot_ptw As String,  _
                    ByVal SUSPpor_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SUSPdate_ptw As Global.System.Nullable(Of Date),  _
                    ByVal SUSPtime As Global.System.Nullable(Of Date),  _
                    ByVal REATIVpor_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal REATIVseg_ptw As Boolean,  _
                    ByVal REATIVdate_ptw As Global.System.Nullable(Of Date),  _
                    ByVal REATIVtime_ptw As Global.System.Nullable(Of Date),  _
                    ByVal ISSUER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SUPERVISOR_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SUPERVISOR_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE03_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE04_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE05_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE06_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE07_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE01_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE02_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE03_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE04_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE05_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE06_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal EXECUTANTE07_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal LIDER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal LIDER_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal LIDERdpt_ptw As String,  _
                    ByVal LIBERADOR_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal LIBERADOR_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal OBSHOT01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal OBSHOT01_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal OBSHOT02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal OBSHOT02_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal VIGIA01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal VIGIA01_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal VIGIA02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal VIGIA02_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SAFETY_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SAFETY_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal OIM_ptW As Global.System.Nullable(Of Integer),  _
                    ByVal OIM_R_ptW As Global.System.Nullable(Of Integer),  _
                    ByVal ADMIN_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal ADMIN_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal ISSUERok_ptw As Boolean,  _
                    ByVal LIDERok_ptw As Boolean,  _
                    ByVal LIBERADORok_ptw As Boolean,  _
                    ByVal SAFETYok_ptw As Boolean,  _
                    ByVal OIMok_ptW As Boolean,  _
                    ByVal ADMINok_ptw As Boolean,  _
                    ByVal SUPreq_ptw As Boolean,  _
                    ByVal SUPtipC_ptw As Boolean,  _
                    ByVal SUPtipP_ptw As Boolean,  _
                    ByVal SUPtipN_ptw As Boolean,  _
                    ByVal SUPperiodo01x_PTW As Boolean,  _
                    ByVal SUPperiodo02x_PTW As Boolean,  _
                    ByVal SUPperiodo03x_PTW As Boolean,  _
                    ByVal SUPwho01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SUPwho02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SUPwho03_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal SUPdate01_ptw As Global.System.Nullable(Of Date),  _
                    ByVal SUPdate02_ptw As Global.System.Nullable(Of Date),  _
                    ByVal SUPdate03_ptw As Global.System.Nullable(Of Date),  _
                    ByVal SUPtime01_ptw As Global.System.Nullable(Of Date),  _
                    ByVal SUPtime02_ptw As Global.System.Nullable(Of Date),  _
                    ByVal SUPtime03_ptw As Global.System.Nullable(Of Date),  _
                    ByVal impedimentoOBS_ptw As String,  _
                    ByVal ISSUERtxt_ptw As String,  _
                    ByVal fISSUER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal fISSUERdata_ptw As Global.System.Nullable(Of Date),  _
                    ByVal fISSUERtime_ptw As Global.System.Nullable(Of Date),  _
                    ByVal fLIDER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal fLIBERADOR_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal fSAFETY_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal fOIM_ptW As Global.System.Nullable(Of Integer),  _
                    ByVal fADMIN_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal fckTrab_ptw As Boolean,  _
                    ByVal fckTurno_ptw As Boolean,  _
                    ByVal fckCancel_ptw As Boolean,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_STATUS_ptw As Global.System.Nullable(Of Short),  _
                    ByVal Original_NUM_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DATA_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_TIME_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_DESC_ptw As String,  _
                    ByVal Original_HOT_ptw As Boolean,  _
                    ByVal Original_LOCAL_ptw As String,  _
                    ByVal Original_LOTOck_ptw As Boolean,  _
                    ByVal Original_LOTOnum_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ATVsim_ptw As String,  _
                    ByVal Original_RISCOSad_ptw As String,  _
                    ByVal Original_MOCck_ptw As Boolean,  _
                    ByVal Original_MOCnm_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EPI_ptw As Boolean,  _
                    ByVal Original_RECad_ptw As String,  _
                    ByVal Original_APRIck_ptw As Boolean,  _
                    ByVal Original_APRInum_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CARGAcritCK_ptw As Boolean,  _
                    ByVal Original_LISTAobCK_ptw As Boolean,  _
                    ByVal Original_FLUIDOck_ptw As Boolean,  _
                    ByVal Original_CESTOck_ptw As Boolean,  _
                    ByVal Original_GUINCHOck_ptw As Boolean,  _
                    ByVal Original_OUTROS_ptw As String,  _
                    ByVal Original_TESTEck_ptw As Boolean,  _
                    ByVal Original_DATEtest_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_TIMEtest_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_O2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HC_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_H2Sppm_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CO_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CO2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CHECKEDby_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SNdet_ptw As String,  _
                    ByVal Original_EXAUSTAOck_ptw As Boolean,  _
                    ByVal Original_DATEexaust_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_TIMEexaust_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_O2_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_HC_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_H2S_2ppm_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CO_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CO2_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CHECKEDby_2_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SNdet_2_ptw As String,  _
                    ByVal Original_CRITck_ptw As Boolean,  _
                    ByVal Original_OUTofOPck_ptw As Boolean,  _
                    ByVal Original_OUTofOPnom_ptw As String,  _
                    ByVal Original_SENSORinCK_ptw As Boolean,  _
                    ByVal Original_SENSORregCK_ptw As Boolean,  _
                    ByVal Original_PLANOresgCK_ptw As Boolean,  _
                    ByVal Original_EQUIPEcomCK_ptw As Boolean,  _
                    ByVal Original_INTERCOMck_ptw As Boolean,  _
                    ByVal Original_PESSOALck As Boolean,  _
                    ByVal Original_SUSPmot_ptw As String,  _
                    ByVal Original_SUSPpor_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SUSPdate_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_SUSPtime As Global.System.Nullable(Of Date),  _
                    ByVal Original_REATIVpor_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_REATIVseg_ptw As Boolean,  _
                    ByVal Original_REATIVdate_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_REATIVtime_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_ISSUER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SUPERVISOR_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SUPERVISOR_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE03_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE04_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE05_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE06_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE07_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE01_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE02_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE03_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE04_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE05_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE06_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EXECUTANTE07_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LIDER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LIDER_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LIDERdpt_ptw As String,  _
                    ByVal Original_LIBERADOR_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LIBERADOR_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OBSHOT01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OBSHOT01_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OBSHOT02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OBSHOT02_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VIGIA01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VIGIA01_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VIGIA02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VIGIA02_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SAFETY_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SAFETY_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OIM_ptW As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OIM_R_ptW As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ADMIN_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ADMIN_R_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ISSUERok_ptw As Boolean,  _
                    ByVal Original_LIDERok_ptw As Boolean,  _
                    ByVal Original_LIBERADORok_ptw As Boolean,  _
                    ByVal Original_SAFETYok_ptw As Boolean,  _
                    ByVal Original_OIMok_ptW As Boolean,  _
                    ByVal Original_ADMINok_ptw As Boolean,  _
                    ByVal Original_SUPreq_ptw As Boolean,  _
                    ByVal Original_SUPtipC_ptw As Boolean,  _
                    ByVal Original_SUPtipP_ptw As Boolean,  _
                    ByVal Original_SUPtipN_ptw As Boolean,  _
                    ByVal Original_SUPperiodo01x_PTW As Boolean,  _
                    ByVal Original_SUPperiodo02x_PTW As Boolean,  _
                    ByVal Original_SUPperiodo03x_PTW As Boolean,  _
                    ByVal Original_SUPwho01_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SUPwho02_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SUPwho03_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SUPdate01_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_SUPdate02_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_SUPdate03_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_SUPtime01_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_SUPtime02_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_SUPtime03_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_impedimentoOBS_ptw As String,  _
                    ByVal Original_ISSUERtxt_ptw As String,  _
                    ByVal Original_fISSUER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_fISSUERdata_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_fISSUERtime_ptw As Global.System.Nullable(Of Date),  _
                    ByVal Original_fLIDER_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_fLIBERADOR_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_fSAFETY_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_fOIM_ptW As Global.System.Nullable(Of Integer),  _
                    ByVal Original_fADMIN_ptw As Global.System.Nullable(Of Integer),  _
                    ByVal Original_fckTrab_ptw As Boolean,  _
                    ByVal Original_fckTurno_ptw As Boolean,  _
                    ByVal Original_fckCancel_ptw As Boolean) As Integer
            If (STATUS_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(STATUS_ptw.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (NUM_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NUM_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DATA_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DATA_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TIME_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(TIME_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (DESC_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DESC_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(HOT_ptw,Boolean)
            If (LOCAL_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(LOCAL_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(LOTOck_ptw,Boolean)
            If (LOTOnum_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(LOTOnum_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (ATVsim_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ATVsim_ptw,String)
            End If
            If (RISCOSad_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(RISCOSad_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(MOCck_ptw,Boolean)
            If (MOCnm_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(MOCnm_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(EPI_ptw,Boolean)
            If (RECad_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(RECad_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(APRIck_ptw,Boolean)
            If (APRInum_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(APRInum_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CARGAcritCK_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(LISTAobCK_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(FLUIDOck_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(CESTOck_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(GUINCHOck_ptw,Boolean)
            If (OUTROS_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(OUTROS_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(TESTEck_ptw,Boolean)
            If (DATEtest_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(DATEtest_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (TIMEtest_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(TIMEtest_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (O2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(O2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (HC_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(HC_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (H2Sppm_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(H2Sppm_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CO_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(CO_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CO2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(CO2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (CHECKEDby_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(CHECKEDby_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (SNdet_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(SNdet_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(EXAUSTAOck_ptw,Boolean)
            If (DATEexaust_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(DATEexaust_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (TIMEexaust_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(TIMEexaust_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (O2_2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(O2_2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (HC_2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(HC_2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (H2S_2ppm_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(H2S_2ppm_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (CO_2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(CO_2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (CO2_2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(CO2_2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (CHECKEDby_2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(CHECKEDby_2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (SNdet_2_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(SNdet_2_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(CRITck_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(OUTofOPck_ptw,Boolean)
            If (OUTofOPnom_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(OUTofOPnom_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(SENSORinCK_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(SENSORregCK_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(PLANOresgCK_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(EQUIPEcomCK_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(INTERCOMck_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(PESSOALck,Boolean)
            If (SUSPmot_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(SUSPmot_ptw,String)
            End If
            If (SUSPpor_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(SUSPpor_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (SUSPdate_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(SUSPdate_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (SUSPtime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(SUSPtime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (REATIVpor_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(REATIVpor_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(REATIVseg_ptw,Boolean)
            If (REATIVdate_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(REATIVdate_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (REATIVtime_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(REATIVtime_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (ISSUER_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(ISSUER_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (SUPERVISOR_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(SUPERVISOR_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (SUPERVISOR_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(SUPERVISOR_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE01_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(EXECUTANTE01_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE02_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(EXECUTANTE02_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE03_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(EXECUTANTE03_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE04_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(EXECUTANTE04_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE05_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(EXECUTANTE05_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE06_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(EXECUTANTE06_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE07_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(EXECUTANTE07_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE01_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(EXECUTANTE01_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE02_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(EXECUTANTE02_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE03_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(EXECUTANTE03_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE04_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(EXECUTANTE04_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE05_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(EXECUTANTE05_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE06_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(EXECUTANTE06_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (EXECUTANTE07_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(EXECUTANTE07_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (LIDER_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(LIDER_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (LIDER_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(LIDER_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (LIDERdpt_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(LIDERdpt_ptw,String)
            End If
            If (LIBERADOR_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(LIBERADOR_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (LIBERADOR_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(LIBERADOR_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (OBSHOT01_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(OBSHOT01_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (OBSHOT01_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(OBSHOT01_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (OBSHOT02_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(OBSHOT02_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (OBSHOT02_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(OBSHOT02_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (VIGIA01_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(VIGIA01_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (VIGIA01_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(VIGIA01_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (VIGIA02_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(VIGIA02_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (VIGIA02_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(VIGIA02_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (SAFETY_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(SAFETY_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (SAFETY_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(SAFETY_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (OIM_ptW.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(OIM_ptW.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (OIM_R_ptW.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(OIM_R_ptW.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (ADMIN_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(ADMIN_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (ADMIN_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(ADMIN_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(96).Value = CType(ISSUERok_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(97).Value = CType(LIDERok_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(98).Value = CType(LIBERADORok_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(99).Value = CType(SAFETYok_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(100).Value = CType(OIMok_ptW,Boolean)
            Me.Adapter.UpdateCommand.Parameters(101).Value = CType(ADMINok_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(102).Value = CType(SUPreq_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(103).Value = CType(SUPtipC_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(104).Value = CType(SUPtipP_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(105).Value = CType(SUPtipN_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(106).Value = CType(SUPperiodo01x_PTW,Boolean)
            Me.Adapter.UpdateCommand.Parameters(107).Value = CType(SUPperiodo02x_PTW,Boolean)
            Me.Adapter.UpdateCommand.Parameters(108).Value = CType(SUPperiodo03x_PTW,Boolean)
            If (SUPwho01_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(SUPwho01_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (SUPwho02_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(SUPwho02_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (SUPwho03_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(SUPwho03_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (SUPdate01_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(SUPdate01_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (SUPdate02_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(SUPdate02_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (SUPdate03_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(SUPdate03_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (SUPtime01_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(SUPtime01_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (SUPtime02_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(SUPtime02_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (SUPtime03_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(SUPtime03_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (impedimentoOBS_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(impedimentoOBS_ptw,String)
            End If
            If (ISSUERtxt_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(ISSUERtxt_ptw,String)
            End If
            If (fISSUER_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(fISSUER_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (fISSUERdata_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(fISSUERdata_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (fISSUERtime_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(fISSUERtime_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (fLIDER_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(fLIDER_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            If (fLIBERADOR_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(fLIBERADOR_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (fSAFETY_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(fSAFETY_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            If (fOIM_ptW.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(fOIM_ptW.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (fADMIN_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(fADMIN_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(128).Value = CType(fckTrab_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(129).Value = CType(fckTurno_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(130).Value = CType(fckCancel_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_ID,Integer)
            If (Original_STATUS_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_STATUS_ptw.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            End If
            If (Original_NUM_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_NUM_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            End If
            If (Original_DATA_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Original_DATA_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = Global.System.DBNull.Value
            End If
            If (Original_TIME_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Original_TIME_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = Global.System.DBNull.Value
            End If
            If (Original_DESC_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Original_DESC_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(142).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Original_HOT_ptw,Boolean)
            If (Original_LOCAL_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Original_LOCAL_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(146).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_LOTOck_ptw,Boolean)
            If (Original_LOTOnum_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_LOTOnum_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = Global.System.DBNull.Value
            End If
            If (Original_ATVsim_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_ATVsim_ptw,String)
            End If
            If (Original_RISCOSad_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(Original_RISCOSad_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(154).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(155).Value = CType(Original_MOCck_ptw,Boolean)
            If (Original_MOCnm_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(Original_MOCnm_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(158).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(159).Value = CType(Original_EPI_ptw,Boolean)
            If (Original_RECad_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(Original_RECad_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(162).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(163).Value = CType(Original_APRIck_ptw,Boolean)
            If (Original_APRInum_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(Original_APRInum_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(166).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(167).Value = CType(Original_CARGAcritCK_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(168).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(169).Value = CType(Original_LISTAobCK_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(170).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(171).Value = CType(Original_FLUIDOck_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(172).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(173).Value = CType(Original_CESTOck_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(174).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(175).Value = CType(Original_GUINCHOck_ptw,Boolean)
            If (Original_OUTROS_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(177).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(Original_OUTROS_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(178).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(179).Value = CType(Original_TESTEck_ptw,Boolean)
            If (Original_DATEtest_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(Original_DATEtest_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(181).Value = Global.System.DBNull.Value
            End If
            If (Original_TIMEtest_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(Original_TIMEtest_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = Global.System.DBNull.Value
            End If
            If (Original_O2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(Original_O2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = Global.System.DBNull.Value
            End If
            If (Original_HC_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(Original_HC_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = Global.System.DBNull.Value
            End If
            If (Original_H2Sppm_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(Original_H2Sppm_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = Global.System.DBNull.Value
            End If
            If (Original_CO_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(Original_CO_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(191).Value = Global.System.DBNull.Value
            End If
            If (Original_CO2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(Original_CO2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(193).Value = Global.System.DBNull.Value
            End If
            If (Original_CHECKEDby_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(Original_CHECKEDby_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = Global.System.DBNull.Value
            End If
            If (Original_SNdet_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(197).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(Original_SNdet_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(198).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(199).Value = CType(Original_EXAUSTAOck_ptw,Boolean)
            If (Original_DATEexaust_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(Original_DATEexaust_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = Global.System.DBNull.Value
            End If
            If (Original_TIMEexaust_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(Original_TIMEexaust_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(203).Value = Global.System.DBNull.Value
            End If
            If (Original_O2_2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(Original_O2_2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(205).Value = Global.System.DBNull.Value
            End If
            If (Original_HC_2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(Original_HC_2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = Global.System.DBNull.Value
            End If
            If (Original_H2S_2ppm_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(Original_H2S_2ppm_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = Global.System.DBNull.Value
            End If
            If (Original_CO_2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(Original_CO_2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = Global.System.DBNull.Value
            End If
            If (Original_CO2_2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(Original_CO2_2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = Global.System.DBNull.Value
            End If
            If (Original_CHECKEDby_2_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(Original_CHECKEDby_2_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = Global.System.DBNull.Value
            End If
            If (Original_SNdet_2_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(Original_SNdet_2_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(218).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(219).Value = CType(Original_CRITck_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(220).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(221).Value = CType(Original_OUTofOPck_ptw,Boolean)
            If (Original_OUTofOPnom_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(223).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(Original_OUTofOPnom_ptw,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(224).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(225).Value = CType(Original_SENSORinCK_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(226).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(227).Value = CType(Original_SENSORregCK_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(228).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(229).Value = CType(Original_PLANOresgCK_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(230).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(231).Value = CType(Original_EQUIPEcomCK_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(232).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(233).Value = CType(Original_INTERCOMck_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(234).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(235).Value = CType(Original_PESSOALck,Boolean)
            If (Original_SUSPmot_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(237).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(Original_SUSPmot_ptw,String)
            End If
            If (Original_SUSPpor_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(Original_SUSPpor_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(239).Value = Global.System.DBNull.Value
            End If
            If (Original_SUSPdate_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(241).Value = CType(Original_SUSPdate_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(241).Value = Global.System.DBNull.Value
            End If
            If (Original_SUSPtime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(242).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(Original_SUSPtime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(242).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(243).Value = Global.System.DBNull.Value
            End If
            If (Original_REATIVpor_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(244).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(245).Value = CType(Original_REATIVpor_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(244).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(245).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(246).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(247).Value = CType(Original_REATIVseg_ptw,Boolean)
            If (Original_REATIVdate_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(248).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(249).Value = CType(Original_REATIVdate_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(248).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(249).Value = Global.System.DBNull.Value
            End If
            If (Original_REATIVtime_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(250).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(251).Value = CType(Original_REATIVtime_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(250).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(251).Value = Global.System.DBNull.Value
            End If
            If (Original_ISSUER_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(252).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(253).Value = CType(Original_ISSUER_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(252).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(253).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPERVISOR_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(254).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(255).Value = CType(Original_SUPERVISOR_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(254).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(255).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPERVISOR_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(256).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(257).Value = CType(Original_SUPERVISOR_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(256).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(257).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE01_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(259).Value = CType(Original_EXECUTANTE01_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(259).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE02_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(260).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(261).Value = CType(Original_EXECUTANTE02_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(260).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(261).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE03_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(262).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(263).Value = CType(Original_EXECUTANTE03_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(262).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(263).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE04_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(264).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(265).Value = CType(Original_EXECUTANTE04_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(264).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(265).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE05_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(266).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(267).Value = CType(Original_EXECUTANTE05_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(266).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(267).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE06_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(268).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(269).Value = CType(Original_EXECUTANTE06_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(268).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(269).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE07_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(270).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(271).Value = CType(Original_EXECUTANTE07_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(270).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(271).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE01_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(272).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(273).Value = CType(Original_EXECUTANTE01_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(272).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(273).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE02_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(274).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(275).Value = CType(Original_EXECUTANTE02_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(274).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(275).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE03_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(276).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(277).Value = CType(Original_EXECUTANTE03_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(276).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(277).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE04_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(278).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(279).Value = CType(Original_EXECUTANTE04_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(278).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(279).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE05_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(280).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(281).Value = CType(Original_EXECUTANTE05_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(280).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(281).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE06_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(282).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(283).Value = CType(Original_EXECUTANTE06_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(282).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(283).Value = Global.System.DBNull.Value
            End If
            If (Original_EXECUTANTE07_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(284).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(285).Value = CType(Original_EXECUTANTE07_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(284).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(285).Value = Global.System.DBNull.Value
            End If
            If (Original_LIDER_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(286).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(287).Value = CType(Original_LIDER_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(286).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(287).Value = Global.System.DBNull.Value
            End If
            If (Original_LIDER_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(288).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(289).Value = CType(Original_LIDER_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(288).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(289).Value = Global.System.DBNull.Value
            End If
            If (Original_LIDERdpt_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(290).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(291).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(290).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(291).Value = CType(Original_LIDERdpt_ptw,String)
            End If
            If (Original_LIBERADOR_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(292).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(293).Value = CType(Original_LIBERADOR_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(292).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(293).Value = Global.System.DBNull.Value
            End If
            If (Original_LIBERADOR_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(294).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(295).Value = CType(Original_LIBERADOR_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(294).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(295).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSHOT01_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(296).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(297).Value = CType(Original_OBSHOT01_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(296).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(297).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSHOT01_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(298).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(299).Value = CType(Original_OBSHOT01_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(298).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(299).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSHOT02_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(300).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(301).Value = CType(Original_OBSHOT02_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(300).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(301).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSHOT02_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(302).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(303).Value = CType(Original_OBSHOT02_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(302).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(303).Value = Global.System.DBNull.Value
            End If
            If (Original_VIGIA01_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(304).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(305).Value = CType(Original_VIGIA01_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(304).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(305).Value = Global.System.DBNull.Value
            End If
            If (Original_VIGIA01_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(306).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(307).Value = CType(Original_VIGIA01_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(306).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(307).Value = Global.System.DBNull.Value
            End If
            If (Original_VIGIA02_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(308).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(309).Value = CType(Original_VIGIA02_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(308).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(309).Value = Global.System.DBNull.Value
            End If
            If (Original_VIGIA02_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(310).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(311).Value = CType(Original_VIGIA02_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(310).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(311).Value = Global.System.DBNull.Value
            End If
            If (Original_SAFETY_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(312).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(313).Value = CType(Original_SAFETY_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(312).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(313).Value = Global.System.DBNull.Value
            End If
            If (Original_SAFETY_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(314).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(315).Value = CType(Original_SAFETY_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(314).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(315).Value = Global.System.DBNull.Value
            End If
            If (Original_OIM_ptW.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(316).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(317).Value = CType(Original_OIM_ptW.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(316).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(317).Value = Global.System.DBNull.Value
            End If
            If (Original_OIM_R_ptW.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(318).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(319).Value = CType(Original_OIM_R_ptW.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(318).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(319).Value = Global.System.DBNull.Value
            End If
            If (Original_ADMIN_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(320).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(321).Value = CType(Original_ADMIN_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(320).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(321).Value = Global.System.DBNull.Value
            End If
            If (Original_ADMIN_R_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(322).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(323).Value = CType(Original_ADMIN_R_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(322).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(323).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(324).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(325).Value = CType(Original_ISSUERok_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(326).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(327).Value = CType(Original_LIDERok_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(328).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(329).Value = CType(Original_LIBERADORok_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(330).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(331).Value = CType(Original_SAFETYok_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(332).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(333).Value = CType(Original_OIMok_ptW,Boolean)
            Me.Adapter.UpdateCommand.Parameters(334).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(335).Value = CType(Original_ADMINok_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(336).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(337).Value = CType(Original_SUPreq_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(338).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(339).Value = CType(Original_SUPtipC_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(340).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(341).Value = CType(Original_SUPtipP_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(342).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(343).Value = CType(Original_SUPtipN_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(344).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(345).Value = CType(Original_SUPperiodo01x_PTW,Boolean)
            Me.Adapter.UpdateCommand.Parameters(346).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(347).Value = CType(Original_SUPperiodo02x_PTW,Boolean)
            Me.Adapter.UpdateCommand.Parameters(348).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(349).Value = CType(Original_SUPperiodo03x_PTW,Boolean)
            If (Original_SUPwho01_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(350).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(351).Value = CType(Original_SUPwho01_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(350).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(351).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPwho02_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(352).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(353).Value = CType(Original_SUPwho02_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(352).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(353).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPwho03_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(354).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(355).Value = CType(Original_SUPwho03_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(354).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(355).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPdate01_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(356).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(357).Value = CType(Original_SUPdate01_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(356).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(357).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPdate02_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(358).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(359).Value = CType(Original_SUPdate02_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(358).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(359).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPdate03_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(360).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(361).Value = CType(Original_SUPdate03_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(360).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(361).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPtime01_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(362).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(363).Value = CType(Original_SUPtime01_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(362).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(363).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPtime02_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(364).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(365).Value = CType(Original_SUPtime02_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(364).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(365).Value = Global.System.DBNull.Value
            End If
            If (Original_SUPtime03_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(366).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(367).Value = CType(Original_SUPtime03_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(366).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(367).Value = Global.System.DBNull.Value
            End If
            If (Original_impedimentoOBS_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(368).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(369).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(368).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(369).Value = CType(Original_impedimentoOBS_ptw,String)
            End If
            If (Original_ISSUERtxt_ptw Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(370).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(371).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(370).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(371).Value = CType(Original_ISSUERtxt_ptw,String)
            End If
            If (Original_fISSUER_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(372).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(373).Value = CType(Original_fISSUER_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(372).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(373).Value = Global.System.DBNull.Value
            End If
            If (Original_fISSUERdata_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(374).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(375).Value = CType(Original_fISSUERdata_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(374).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(375).Value = Global.System.DBNull.Value
            End If
            If (Original_fISSUERtime_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(376).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(377).Value = CType(Original_fISSUERtime_ptw.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(376).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(377).Value = Global.System.DBNull.Value
            End If
            If (Original_fLIDER_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(378).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(379).Value = CType(Original_fLIDER_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(378).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(379).Value = Global.System.DBNull.Value
            End If
            If (Original_fLIBERADOR_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(380).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(381).Value = CType(Original_fLIBERADOR_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(380).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(381).Value = Global.System.DBNull.Value
            End If
            If (Original_fSAFETY_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(382).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(383).Value = CType(Original_fSAFETY_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(382).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(383).Value = Global.System.DBNull.Value
            End If
            If (Original_fOIM_ptW.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(384).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(385).Value = CType(Original_fOIM_ptW.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(384).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(385).Value = Global.System.DBNull.Value
            End If
            If (Original_fADMIN_ptw.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(386).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(387).Value = CType(Original_fADMIN_ptw.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(386).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(387).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(388).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(389).Value = CType(Original_fckTrab_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(390).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(391).Value = CType(Original_fckTurno_ptw,Boolean)
            Me.Adapter.UpdateCommand.Parameters(392).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(393).Value = CType(Original_fckCancel_ptw,Boolean)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _appConstantTableAdapter As AppConstantTableAdapter
        
        Private _appupdateVersionTableAdapter As AppupdateVersionTableAdapter
        
        Private _botoesEcontroles_tTableAdapter As botoesEcontroles_tTableAdapter
        
        Private _companyTableAdapter As companyTableAdapter
        
        Private _integrantTableAdapter As integrantTableAdapter
        
        Private _jobTableAdapter As jobTableAdapter
        
        Private _pTcloseTableAdapter As PTcloseTableAdapter
        
        Private _pTopenTableAdapter As PTopenTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property AppConstantTableAdapter() As AppConstantTableAdapter
            Get
                Return Me._appConstantTableAdapter
            End Get
            Set
                Me._appConstantTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property AppupdateVersionTableAdapter() As AppupdateVersionTableAdapter
            Get
                Return Me._appupdateVersionTableAdapter
            End Get
            Set
                Me._appupdateVersionTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property botoesEcontroles_tTableAdapter() As botoesEcontroles_tTableAdapter
            Get
                Return Me._botoesEcontroles_tTableAdapter
            End Get
            Set
                Me._botoesEcontroles_tTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property companyTableAdapter() As companyTableAdapter
            Get
                Return Me._companyTableAdapter
            End Get
            Set
                Me._companyTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property integrantTableAdapter() As integrantTableAdapter
            Get
                Return Me._integrantTableAdapter
            End Get
            Set
                Me._integrantTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property jobTableAdapter() As jobTableAdapter
            Get
                Return Me._jobTableAdapter
            End Get
            Set
                Me._jobTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PTcloseTableAdapter() As PTcloseTableAdapter
            Get
                Return Me._pTcloseTableAdapter
            End Get
            Set
                Me._pTcloseTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PTopenTableAdapter() As PTopenTableAdapter
            Get
                Return Me._pTopenTableAdapter
            End Get
            Set
                Me._pTopenTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._appConstantTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._appConstantTableAdapter.Connection) Is Nothing)) Then
                    Return Me._appConstantTableAdapter.Connection
                End If
                If ((Not (Me._appupdateVersionTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._appupdateVersionTableAdapter.Connection) Is Nothing)) Then
                    Return Me._appupdateVersionTableAdapter.Connection
                End If
                If ((Not (Me._botoesEcontroles_tTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._botoesEcontroles_tTableAdapter.Connection) Is Nothing)) Then
                    Return Me._botoesEcontroles_tTableAdapter.Connection
                End If
                If ((Not (Me._companyTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._companyTableAdapter.Connection) Is Nothing)) Then
                    Return Me._companyTableAdapter.Connection
                End If
                If ((Not (Me._integrantTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._integrantTableAdapter.Connection) Is Nothing)) Then
                    Return Me._integrantTableAdapter.Connection
                End If
                If ((Not (Me._jobTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._jobTableAdapter.Connection) Is Nothing)) Then
                    Return Me._jobTableAdapter.Connection
                End If
                If ((Not (Me._pTcloseTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pTcloseTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pTcloseTableAdapter.Connection
                End If
                If ((Not (Me._pTopenTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pTopenTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pTopenTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._appConstantTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._appupdateVersionTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._botoesEcontroles_tTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._companyTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._integrantTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._jobTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._pTcloseTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._pTopenTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As PTW_DB_BackupDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._appConstantTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.AppConstant.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._appConstantTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._appupdateVersionTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.AppupdateVersion.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._appupdateVersionTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._botoesEcontroles_tTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.botoesEcontroles_t.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._botoesEcontroles_tTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._companyTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.company.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._companyTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._integrantTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.integrant.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._integrantTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._jobTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.job.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._jobTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._pTcloseTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PTclose.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pTcloseTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._pTopenTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PTopen.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pTopenTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As PTW_DB_BackupDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._appConstantTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.AppConstant.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._appConstantTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._appupdateVersionTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.AppupdateVersion.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._appupdateVersionTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._botoesEcontroles_tTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.botoesEcontroles_t.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._botoesEcontroles_tTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._companyTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.company.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._companyTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._integrantTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.integrant.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._integrantTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._jobTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.job.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._jobTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._pTcloseTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PTclose.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pTcloseTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._pTopenTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PTopen.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pTopenTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As PTW_DB_BackupDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pTopenTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PTopen.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pTopenTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._pTcloseTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PTclose.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pTcloseTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._jobTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.job.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._jobTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._integrantTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.integrant.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._integrantTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._companyTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.company.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._companyTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._botoesEcontroles_tTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.botoesEcontroles_t.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._botoesEcontroles_tTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._appupdateVersionTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.AppupdateVersion.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._appupdateVersionTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._appConstantTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.AppConstant.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._appConstantTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As PTW_DB_BackupDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._appConstantTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._appConstantTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._appupdateVersionTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._appupdateVersionTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._botoesEcontroles_tTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._botoesEcontroles_tTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._companyTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._companyTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._integrantTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._integrantTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._jobTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._jobTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._pTcloseTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pTcloseTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            If ((Not (Me._pTopenTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pTopenTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma "& _ 
                        "cadeia de conexão.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager não contém informações de conexão. Defina cada propriedade Ta"& _ 
                        "bleAdapter de TableAdapterManager como uma instância válida de TableAdapter.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("Não é possível iniciar a transação. Os dados de conexão atuais não oferecem supor"& _ 
                        "te às transações ou o estado atual não permite que a transação inicie.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._appConstantTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._appConstantTableAdapter, Me._appConstantTableAdapter.Connection)
                    Me._appConstantTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._appConstantTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._appConstantTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._appConstantTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._appConstantTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._appupdateVersionTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._appupdateVersionTableAdapter, Me._appupdateVersionTableAdapter.Connection)
                    Me._appupdateVersionTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._appupdateVersionTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._appupdateVersionTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._appupdateVersionTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._appupdateVersionTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._botoesEcontroles_tTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._botoesEcontroles_tTableAdapter, Me._botoesEcontroles_tTableAdapter.Connection)
                    Me._botoesEcontroles_tTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._botoesEcontroles_tTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._botoesEcontroles_tTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._botoesEcontroles_tTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._botoesEcontroles_tTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._companyTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._companyTableAdapter, Me._companyTableAdapter.Connection)
                    Me._companyTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._companyTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._companyTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._companyTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._companyTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._integrantTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._integrantTableAdapter, Me._integrantTableAdapter.Connection)
                    Me._integrantTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._integrantTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._integrantTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._integrantTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._integrantTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._jobTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._jobTableAdapter, Me._jobTableAdapter.Connection)
                    Me._jobTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._jobTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._jobTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._jobTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._jobTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._pTcloseTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pTcloseTableAdapter, Me._pTcloseTableAdapter.Connection)
                    Me._pTcloseTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._pTcloseTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._pTcloseTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pTcloseTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pTcloseTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._pTopenTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pTopenTableAdapter, Me._pTopenTableAdapter.Connection)
                    Me._pTopenTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._pTopenTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._pTopenTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pTopenTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pTopenTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._appConstantTableAdapter) Is Nothing) Then
                    Me._appConstantTableAdapter.Connection = CType(revertConnections(Me._appConstantTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._appConstantTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._appupdateVersionTableAdapter) Is Nothing) Then
                    Me._appupdateVersionTableAdapter.Connection = CType(revertConnections(Me._appupdateVersionTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._appupdateVersionTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._botoesEcontroles_tTableAdapter) Is Nothing) Then
                    Me._botoesEcontroles_tTableAdapter.Connection = CType(revertConnections(Me._botoesEcontroles_tTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._botoesEcontroles_tTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._companyTableAdapter) Is Nothing) Then
                    Me._companyTableAdapter.Connection = CType(revertConnections(Me._companyTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._companyTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._integrantTableAdapter) Is Nothing) Then
                    Me._integrantTableAdapter.Connection = CType(revertConnections(Me._integrantTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._integrantTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._jobTableAdapter) Is Nothing) Then
                    Me._jobTableAdapter.Connection = CType(revertConnections(Me._jobTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._jobTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._pTcloseTableAdapter) Is Nothing) Then
                    Me._pTcloseTableAdapter.Connection = CType(revertConnections(Me._pTcloseTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._pTcloseTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._pTopenTableAdapter) Is Nothing) Then
                    Me._pTopenTableAdapter.Connection = CType(revertConnections(Me._pTopenTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._pTopenTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
